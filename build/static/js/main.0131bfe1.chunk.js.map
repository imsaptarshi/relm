{"version":3,"sources":["Assets/logo.svg","Helpers/supabase.js","components/Navigation/Navigation.component.jsx","components/Footer/Footer.component.jsx","pages/Landing.page.jsx","Assets/google.png","pages/SignIn.page.jsx","pages/Auth.page.jsx","Providers/User.provider.jsx","components/Cards/CommunityCard.component.jsx","Helpers/features.js","components/Navigation/Sidebar.component.jsx","components/Misc/StarterTemplace.component.jsx","Helpers/dateFormatter.js","components/Cards/EventCard.component.jsx","Helpers/isUpcoming.js","Helpers/wisher.js","pages/Dashboard/Home.page.jsx","pages/New/NewCommunity.page.jsx","pages/Update/UpdateCommunity.page.jsx","components/Misc/CurrentLocation.component.jsx","pages/Manage/ManageCommunity.page.jsx","pages/Dashboard/Events.page.jsx","pages/New/NewEvent.page.jsx","components/Misc/AudienceList.component.jsx","components/Cards/HostCard.component.jsx","pages/Update/UpdateEvent.page.jsx","pages/Manage/ManageEvent.page.jsx","pages/Dashboard/Audience.page.jsx","pages/Event/EventHostCard.component.jsx","pages/Event/index.jsx","pages/Insights/index.jsx","components/Cards/InsightCard.component.jsx","pages/Dashboard/Insights.page.jsx","App.jsx","reportWebVitals.js","theme.js","index.jsx"],"names":["supabase","createClient","process","Navigation","communityId","useState","undefined","user","setUser","community","setCommunity","useEffect","window","localStorage","getItem","getUser","getCommunity","a","from","select","eq","single","data","error","console","log","SignInButton","bg","color","px","onClick","location","href","size","fontSize","fontWeight","border","borderColor","transitionDuration","_hover","_focus","_active","ml","w","justify","alignItems","experimental_spaceX","cursor","rounded","src","logo","Logo","alt","h","name","leftIcon","whiteSpace","isTruncated","overflow","maxW","username","Footer","toast","useToast","email","setEmail","loading","setLoading","subscribed","setSubscribed","subscribeUser","subscriber","EMAIL","setTimeout","title","position","description","status","duration","isClosable","url","render","props","subscribe","onSubmit","e","preventDefault","direction","base","md","py","lg","mt","display","value","required","onChange","target","type","_placeholder","placeholder","minW","mb","LandingPage","overflowX","minH","align","xl","transform","top","right","mx","ratio","opacity","SignIn","buttonMessage","setButtonMessage","handleLoginWithGoogle","auth","signIn","provider","error_description","message","handleLogin","pt","pl","p","Google","Auth","session","setUsername","avatarUrl","setAvatarUrl","user_metadata","avatar_url","updateUser","length","updates","id","upsert","returning","setItem","float","rightIcon","UserContext","createContext","UserProvider","children","Provider","User","useContext","CommunityCard","audience","events","mr","pr","features","enabled","Audience","Community","Insights","Newsletter","Explore","Sidebar","pathname","active","setActive","JSON","parse","contains","SidebarItems","isExternal","link","Icon","CommunityDisplay","SidebarItem","isEnabled","to","label","placement","fill","experimental_spaceY","map","key","m","signOut","removeItem","StarterTemplate","sidebarVisibility","setSidebarVisibility","zIndex","formatDate","date","month","time","EventCard","image","communityData","setCommunityData","isUpcoming","dateObject","Date","d","getDate","getMonth","y","getFullYear","year","wish","hr","getHours","i","Home","communitities","setCommunities","upcomingEvents","setUpcomingEvents","getCommunities","getEvents","order","ascending","uE","dE","forEach","push","UpcomingEvents","casing","letterSpacing","wrap","stringify","Helmet","my","textAlign","NewCommunity","Logos","setLogo","setName","setDescription","uploading","setUploading","uploadLogo","file","formData","FormData","append","axios","post","res","onClose","useDisclosure","isOpen","onOpen","createCommunity","createdBy","pb","document","getElementById","click","accept","files","colorScheme","roundedTopStart","bottom","UpdateCommunity","communityName","communityDescription","communityLogo","close","LogoModal","reload","CurrentLocation","history","useHistory","goBack","ManageCommunity","match","params","Events","doneEvents","setDoneEvents","borderBottom","NewEvent","Platforms","enum","setLink","setImage","setDate","content","setContent","communitySelected","setCommunitySelected","communities","uploadImage","createEvent","admin","platform","EventData","EventPlatform","shadow","left","isRequired","borderTop","borderRight","borderLeft","dateString","dateFormatted","split","sm","moment","format","style","backgroundColor","AudienceList","variant","HostCard","removeHost","newCreatedBy","RemoveHostModal","UpdateEvent","eventId","eventName","eventDescription","eventImage","eventPlatform","eventLink","eventDate","eventContent","updateEvent","defaultValue","ManageEvent","event","setEvent","setAudience","setCreatedBy","useClipboard","origin","hasCopied","onCopy","isListed","setIsListed","registrationOpen","setRegistrationOpen","newChanges","setNewChanges","getEvent","getAudience","AddHost","AddHostModal","test","String","toLowerCase","Set","borderStyle","UpdateEventModal","CopyInput","open","isReadOnly","roundedRight","FeedbackFormLink","checked","isChecked","searchedAudience","setSearchedAudience","query","setQuery","queriedData","startsWith","EventHostCard","Event","converter","Showdown","Converter","registerUser","AudienceEventData","AudienceCommunityData","ProfileDisplay","dangerouslySetInnerHTML","__html","makeHtml","transitionDelay","wordBreak","Feedback","isDone","setIsDone","rating","setRating","createFeedback","filter","InsightCard","eventData","gridRow","gridColumn","insights","setInsights","getInsights","breakInside","gridTemplateRows","App","setSession","onAuthStateChange","_event","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","colors","brand","primary","secondary","alpha","white","pink","black","fonts","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0131bfe1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e169293d.svg\";","import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Logo from \"../../Assets/logo.svg\";\r\nimport { Image, Flex, Button, Text, Box } from \"@chakra-ui/react\";\r\nimport { ArrowRight, User } from \"react-feather\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction Navigation({ communityId }) {\r\n  const [user, setUser] = useState(undefined);\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"email\")) {\r\n      getUser();\r\n    }\r\n    if (communityId) {\r\n      getCommunity();\r\n    }\r\n  }, [communityId]);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", window.localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"name, logo\")\r\n        .eq(\"id\", communityId)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const SignInButton = () => (\r\n    <Button\r\n      bg=\"alpha.white\"\r\n      color=\"white\"\r\n      px=\"6\"\r\n      onClick={() => (window.location.href = \"/signin\")}\r\n      size=\"sm\"\r\n      fontSize=\"xs\"\r\n      fontWeight=\"bold\"\r\n      border=\"1px\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{\r\n        bg: \"rgba(255, 255, 255, 0.05)\",\r\n        borderColor: \"whiteAlpha.200\",\r\n      }}\r\n      _focus={{}}\r\n      _active={{ bg: \"rgba(255, 255, 255, 0.12)\" }}\r\n    >\r\n      Sign in\r\n      <Box ml=\"1\">\r\n        <ArrowRight size=\"14px\" />\r\n      </Box>\r\n    </Button>\r\n  );\r\n\r\n  return (\r\n    <Flex w=\"full\" justify=\"space-between\" alignItems=\"center\">\r\n      <Flex\r\n        experimental_spaceX={community ? \"2\" : \"3\"}\r\n        onClick={() => {\r\n          if (!community) {\r\n            window.location.href = \"/\";\r\n          }\r\n        }}\r\n        alignItems=\"center\"\r\n        color=\"white\"\r\n        _hover={{ color: \"brand.primary\" }}\r\n        cursor=\"pointer\"\r\n        transitionDuration=\"300ms\"\r\n      >\r\n        <Image\r\n          rounded={community ? \"lg\" : \"none\"}\r\n          src={community ? community?.logo : Logo}\r\n          alt=\"relm\"\r\n          w={community ? \"7\" : \"8\"}\r\n          h={community ? \"7\" : \"8\"}\r\n        />\r\n        <Text fontWeight=\"bold\" fontSize={community ? \"base\" : \"24\"}>\r\n          {community ? <>{community?.name}</> : <>relm</>}\r\n        </Text>\r\n      </Flex>\r\n      {window.localStorage.getItem(\"email\") ? (\r\n        <Button\r\n          bg=\"alpha.white\"\r\n          onClick={() => (window.location.href = \"/home\")}\r\n          color=\"white\"\r\n          px=\"6\"\r\n          size=\"sm\"\r\n          fontSize=\"xs\"\r\n          fontWeight=\"semibold\"\r\n          border=\"1px\"\r\n          borderColor=\"transparent\"\r\n          transitionDuration=\"200ms\"\r\n          _hover={{\r\n            bg: \"rgba(255, 255, 255, 0.05)\",\r\n            borderColor: \"whiteAlpha.200\",\r\n          }}\r\n          _focus={{}}\r\n          leftIcon={<User size=\"14px\" />}\r\n          _active={{ bg: \"rgba(255, 255, 255, 0.12)\" }}\r\n          whiteSpace=\"nowrap\"\r\n        >\r\n          <Text isTruncated overflow=\"clip\" maxW=\"80px\">\r\n            {user?.username}\r\n          </Text>\r\n        </Button>\r\n      ) : (\r\n        <SignInButton />\r\n      )}\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import {\r\n  Box,\r\n  Flex,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport Logo from \"../../Assets/logo.svg\";\r\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Footer() {\r\n  const toast = useToast();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [subscribed, setSubscribed] = useState(\"\");\r\n\r\n  const subscribeUser = async (subscriber) => {\r\n    if (subscribed !== email) {\r\n      try {\r\n        setLoading(true);\r\n        subscriber({ EMAIL: email });\r\n        setTimeout(() => {\r\n          toast({\r\n            title: \"Success\",\r\n            position: \"top-right\",\r\n            description: \"Thank you for subscribing to Relm 😄\",\r\n            status: \"success\",\r\n            duration: 5000,\r\n            isClosable: true,\r\n          });\r\n          setSubscribed(email);\r\n          setEmail(\"\");\r\n        }, 1500);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n        }, 1500);\r\n      }\r\n    } else {\r\n      toast({\r\n        position: \"top-right\",\r\n        description: \"You are already subscribed\",\r\n        status: \"info\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MailchimpSubscribe\r\n      url={process.env.REACT_APP_MAILCHIMP_URL}\r\n      render={(props) => {\r\n        const { subscribe } = props || {};\r\n        return (\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              subscribeUser(subscribe);\r\n            }}\r\n          >\r\n            <Flex justify=\"center\">\r\n              <Flex\r\n                w=\"full\"\r\n                maxW=\"1200px\"\r\n                justify=\"space-between\"\r\n                bg=\"brand.secondary\"\r\n                direction={{ base: \"column\", md: \"row\" }}\r\n                alignItems=\"center\"\r\n                color=\"white\"\r\n                py=\"8\"\r\n                px={{ base: \"8\", lg: \"24\" }}\r\n              >\r\n                <Flex\r\n                  cursor=\"pointer\"\r\n                  onClick={() => (window.location.href = \"/\")}\r\n                  alignItems=\"center\"\r\n                  experimental_spaceX=\"4\"\r\n                >\r\n                  <Image src={Logo} alt=\"relm\" w=\"12\" h=\"12\" />\r\n                  <Box>\r\n                    <Text fontWeight=\"bold\" fontSize=\"2xl\">\r\n                      relm\r\n                    </Text>\r\n                    <Text fontWeight=\"thin\" fontSize=\"xx-small\">\r\n                      Activating your community\r\n                    </Text>\r\n                  </Box>\r\n                </Flex>\r\n                <Flex\r\n                  w={{ base: \"80%\", md: \"auto\" }}\r\n                  direction=\"column\"\r\n                  mt={{ base: \"8\", md: \"0\" }}\r\n                >\r\n                  <Text>\r\n                    Get updates about{\" \"}\r\n                    <Text display=\"inline\" color=\"brand.primary\">\r\n                      Relm\r\n                    </Text>\r\n                  </Text>\r\n                  <Input\r\n                    value={email}\r\n                    required\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    type=\"email\"\r\n                    mt=\"1.5\"\r\n                    size=\"sm\"\r\n                    rounded=\"lg\"\r\n                    color=\"white\"\r\n                    _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                    _focus={{ borderColor: \"brand.primary\" }}\r\n                    borderColor=\"whiteAlpha.400\"\r\n                    _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                    placeholder=\"Your email\"\r\n                  />\r\n                  <Button\r\n                    type=\"submit\"\r\n                    _hover={{}}\r\n                    _active={{ bg: \"pink.600\" }}\r\n                    _focus={{}}\r\n                    bg=\"brand.primary\"\r\n                    color=\"white\"\r\n                    size=\"sm\"\r\n                    px=\"6\"\r\n                    mt=\"2\"\r\n                    minW=\"200px\"\r\n                    fontSize=\"xs\"\r\n                    mb={{ base: \"4\", md: \"0\" }}\r\n                  >\r\n                    {loading ? (\r\n                      <Spinner size=\"sm\" />\r\n                    ) : (\r\n                      <>Subscribe to our newsletter</>\r\n                    )}\r\n                  </Button>\r\n                </Flex>\r\n              </Flex>\r\n            </Flex>\r\n          </form>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\nexport default Footer;\r\n","import {\r\n  Box,\r\n  Text,\r\n  Flex,\r\n  Button,\r\n  Tag,\r\n  Divider,\r\n  Image,\r\n  AspectRatio,\r\n} from \"@chakra-ui/react\";\r\nimport Navigation from \"../components/Navigation/Navigation.component\";\r\nimport Footer from \"../components/Footer/Footer.component\";\r\n\r\nfunction LandingPage() {\r\n  return (\r\n    <Flex bg=\"brand.secondary\" justify=\"center\">\r\n      <Box overflowX=\"clip\" maxW=\"1400px\">\r\n        <Flex justify=\"center\" w=\"full\">\r\n          <Box minH=\"100vh\" py=\"6\" px={{ base: \"8\", lg: \"24\" }} w=\"full\">\r\n            <Navigation />\r\n            <Flex\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              mt=\"24\"\r\n              direction=\"column\"\r\n            >\r\n              <Text\r\n                color=\"brand.primary\"\r\n                fontWeight=\"black\"\r\n                fontSize={{ base: \"4xl\", md: \"5xl\", lg: \"6xl\" }}\r\n                align=\"center\"\r\n              >\r\n                Activating Your Community\r\n              </Text>\r\n              <Text\r\n                color=\"white\"\r\n                fontWeight=\"medium\"\r\n                fontSize={{ base: \"xs\", md: \"sm\", lg: \"lg\" }}\r\n                mt=\"2\"\r\n                px={{ lg: \"40\", md: \"40\", xl: \"80\" }}\r\n                align=\"center\"\r\n              >\r\n                Making communities more engaging with events, community\r\n                analytics and newsletters with{\" \"}\r\n                <Text cursor=\"pointer\" display=\"inline\" color=\"brand.primary\">\r\n                  Relm\r\n                </Text>\r\n              </Text>\r\n\r\n              <Button\r\n                _hover={{ transform: \"translateY(-1.5px)\" }}\r\n                _active={{ bg: \"pink.600\" }}\r\n                _focus={{}}\r\n                bg=\"brand.primary\"\r\n                color=\"white\"\r\n                mt=\"10\"\r\n                rounded=\"2xl\"\r\n                fontWeight=\"bold\"\r\n                fontSize=\"lg\"\r\n                px=\"14\"\r\n                py=\"7\"\r\n                onClick={() => (window.location.href = \"/signin\")}\r\n              >\r\n                Get Into Relm\r\n                <Tag\r\n                  position=\"absolute\"\r\n                  top=\"-2\"\r\n                  right=\"-3\"\r\n                  color=\"white\"\r\n                  rounded=\"full\"\r\n                  bg=\"pink.800\"\r\n                  px=\"3\"\r\n                  py=\"1\"\r\n                >\r\n                  beta\r\n                </Tag>\r\n              </Button>\r\n            </Flex>\r\n            <AspectRatio\r\n              mt={{ base: \"32\", md: \"20\", lg: \"6\" }}\r\n              mb={{ base: \"24\", md: \"16\", lg: \"0\" }}\r\n              mx=\"auto\"\r\n              transform={{ base: \"scale(1.99)\", md: \"scale(1.2)\", lg: \"none\" }}\r\n              ratio={799 / 413}\r\n            >\r\n              <Image src=\"https://i.ibb.co/1dhvDZ7/hero.png\" />\r\n            </AspectRatio>\r\n          </Box>\r\n        </Flex>\r\n        <Divider opacity=\"0.1\" />\r\n        <Footer />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","export default __webpack_public_path__ + \"static/media/google.d21a7387.png\";","import {\r\n  Flex,\r\n  Box,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  Divider,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport Logo from \"../Assets/logo.svg\";\r\nimport { Check } from \"react-feather\";\r\nimport { useState } from \"react\";\r\nimport { supabase } from \"../Helpers/supabase\";\r\nimport Google from \"../Assets/google.png\";\r\n\r\nfunction SignIn() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [buttonMessage, setButtonMessage] = useState(<Text>Continue</Text>);\r\n  const [email, setEmail] = useState(\"\");\r\n  const toast = useToast();\r\n\r\n  const handleLoginWithGoogle = async (email) => {\r\n    try {\r\n      const { error } = await supabase.auth.signIn({\r\n        provider: \"google\",\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: error.error_description || error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      console.log(\"finally\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (email) => {\r\n    try {\r\n      setLoading(true);\r\n      const { error } = await supabase.auth.signIn({ email });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      toast({\r\n        title: \"Account Created\",\r\n        position: \"bottom\",\r\n        description: \"Check your email for login link\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      setButtonMessage(<Check />);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: error.error_description || error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex direction={{ base: \"column\", md: \"row\" }}>\r\n      <Box\r\n        bg=\"brand.secondary\"\r\n        pt=\"10\"\r\n        pl=\"10\"\r\n        display={{ base: \"block\", md: \"none\" }}\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"12\" h=\"12\" />\r\n      </Box>\r\n      <Flex\r\n        bg=\"black.400\"\r\n        display={{ base: \"none\", md: \"flex\" }}\r\n        w={{ md: \"35%\" }}\r\n        h=\"100vh\"\r\n        p={{ base: \"6\", md: \"10\" }}\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"14\" h=\"14\" />\r\n        <Box color=\"white\">\r\n          <Text fontWeight=\"bold\" fontSize=\"4xl\">\r\n            relm\r\n          </Text>\r\n          <Text fontWeight=\"thin\" fontSize=\"sm\">\r\n            Activating your community\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      <Box\r\n        w={{ base: \"100%\", md: \"65%\" }}\r\n        h=\"100vh\"\r\n        bg=\"brand.secondary\"\r\n        p={{ base: \"10\", md: \"20\" }}\r\n      >\r\n        <Box w={{ base: \"100%\", lg: \"400px\" }}>\r\n          <Text color=\"white\" fontWeight=\"bold\" fontSize=\"3xl\">\r\n            Sign In\r\n          </Text>\r\n          <Text color=\"white\" fontWeight=\"medium\" mt=\"8\" fontSize=\"sm\">\r\n            Sign in with your email\r\n          </Text>\r\n          <Input\r\n            type=\"email\"\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Your email\"\r\n          />\r\n          <Button\r\n            w=\"full\"\r\n            mt=\"3\"\r\n            rounded=\"lg\"\r\n            _focus={{}}\r\n            _active={{}}\r\n            onClick={() => handleLogin(email)}\r\n          >\r\n            {loading ? <Spinner /> : buttonMessage}\r\n          </Button>\r\n          <Flex alignItems=\"center\" mt=\"14\" mb=\"4\" experimental_spaceX=\"3\">\r\n            <Text color=\"white\" fontSize=\"xs\" fontWeight=\"medium\">\r\n              OR\r\n            </Text>\r\n            <Divider w=\"full\" color=\"white\" />\r\n          </Flex>\r\n          <Button\r\n            leftIcon={<Image src={Google} w=\"16px\" h=\"16px\" />}\r\n            border=\"1px\"\r\n            borderColor=\"transparent\"\r\n            _hover={{ borderColor: \"whiteAlpha.200\" }}\r\n            _focus={{}}\r\n            _active={{}}\r\n            w=\"full\"\r\n            bg=\"whiteAlpha.200\"\r\n            rounded=\"lg\"\r\n            fontSize=\"sm\"\r\n            color=\"white\"\r\n            onClick={() => handleLoginWithGoogle()}\r\n          >\r\n            Sign In With Google\r\n          </Button>\r\n          <Text color=\"whiteAlpha.500\" mt=\"4\" fontSize=\"sm\">\r\n            By signing in you agree to our terms and conditions\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import {\r\n  Flex,\r\n  Box,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ArrowRight } from \"react-feather\";\r\nimport Logo from \"../Assets/logo.svg\";\r\nimport { supabase } from \"../Helpers/supabase\";\r\n\r\nfunction Auth({ session }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(null);\r\n  const [avatarUrl, setAvatarUrl] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const user = supabase.auth.user();\r\n\r\n      if (user) {\r\n        setEmail(user.email);\r\n        if (user.username) {\r\n          setUsername(user?.username);\r\n        }\r\n        if (user.user_metadata) {\r\n          setAvatarUrl(user.user_metadata?.avatar_url);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUser = async (username) => {\r\n    if (username.length > 3) {\r\n      try {\r\n        setLoading(true);\r\n        const user = supabase.auth.user();\r\n        const updates = {\r\n          id: user.id,\r\n          username,\r\n          avatar_url: avatarUrl,\r\n          email: email,\r\n        };\r\n\r\n        const { error } = await supabase.from(\"users\").upsert(updates, {\r\n          returning: \"minimal\",\r\n        });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n        window.localStorage.setItem(\"email\", email);\r\n        window.location.href = \"/home\";\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Your name should have than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex direction={{ base: \"column\", md: \"row\" }}>\r\n      <Box\r\n        bg=\"brand.secondary\"\r\n        pt=\"10\"\r\n        pl=\"10\"\r\n        display={{ base: \"block\", md: \"none\" }}\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"12\" h=\"12\" />\r\n      </Box>\r\n      <Flex\r\n        display={{ base: \"none\", md: \"flex\" }}\r\n        w={{ md: \"35%\" }}\r\n        h=\"100vh\"\r\n        bg=\"black.400\"\r\n        p={{ base: \"6\", md: \"10\" }}\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"14\" h=\"14\" />\r\n        <Box color=\"white\">\r\n          <Text fontWeight=\"bold\" fontSize=\"4xl\">\r\n            relm\r\n          </Text>\r\n          <Text fontWeight=\"thin\" fontSize=\"sm\">\r\n            Activating your community\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n\r\n      <Box\r\n        w={{ base: \"100%\", md: \"65%\" }}\r\n        h=\"100vh\"\r\n        bg=\"brand.secondary\"\r\n        p={{ base: \"10\", md: \"20\" }}\r\n      >\r\n        <Box w={{ base: \"100%\", lg: \"400px\" }}>\r\n          <Text color=\"white\" fontWeight=\"bold\" fontSize=\"3xl\">\r\n            Let's know more about you\r\n          </Text>\r\n          <Text color=\"white\" fontWeight=\"medium\" mt=\"8\" fontSize=\"sm\">\r\n            What do we call you?\r\n          </Text>\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              updateUser(username);\r\n            }}\r\n          >\r\n            <Input\r\n              value={username}\r\n              type=\"text\"\r\n              onChange={(e) => {\r\n                setUsername(e.target.value);\r\n              }}\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Your name\"\r\n            />\r\n            <Button\r\n              float=\"right\"\r\n              mt=\"6\"\r\n              rounded=\"lg\"\r\n              _focus={{}}\r\n              _active={{}}\r\n              rightIcon={\r\n                loading ? <Spinner size=\"sm\" /> : <ArrowRight size=\"20px\" />\r\n              }\r\n              type=\"submit\"\r\n            >\r\n              Continue\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nconst UserContext = createContext({\r\n  user: undefined,\r\n  setUser: () => {},\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const User = () => useContext(UserContext);\r\n","import { Flex, AspectRatio, Image, Text } from \"@chakra-ui/react\";\r\nimport { Calendar, Users } from \"react-feather\";\r\n\r\nfunction CommunityCard({ id, name, description, audience, events, logo }) {\r\n  return (\r\n    <Flex\r\n      onClick={() => {\r\n        window.location.href = `/manage/community/${id}`;\r\n      }}\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      alignItems=\"center\"\r\n      bg=\"alpha.white\"\r\n      overflow=\"clip\"\r\n      isTruncated\r\n      p=\"2\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW=\"320px\"\r\n    >\r\n      <AspectRatio ratio={1} minW=\"20\">\r\n        <Image src={logo} rounded=\"lg\" />\r\n      </AspectRatio>\r\n      <Flex isTruncated direction=\"column\" justify=\"space-between\">\r\n        <Text\r\n          isTruncated\r\n          pr=\"2\"\r\n          fontWeight=\"bold\"\r\n          fontSize={{ base: \"lg\", md: \"lg\" }}\r\n        >\r\n          {name}\r\n        </Text>\r\n        <Flex experimental_spaceX=\"2\" alignItems=\"center\">\r\n          <Users size=\"16px\" />\r\n          <Text fontSize={{ base: \"xs\", md: \"sm\" }}>{audience}</Text>\r\n        </Flex>\r\n        <Flex experimental_spaceX=\"2\" alignItems=\"center\">\r\n          <Calendar size=\"16px\" />\r\n          <Text fontSize={{ base: \"xs\", md: \"sm\" }}>{events}</Text>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default CommunityCard;\r\n","export const features = {\r\n  \"Quick Event\": {\r\n    enabled: true,\r\n  },\r\n  Audience: {\r\n    enabled: true,\r\n  },\r\n  Community: {\r\n    enabled: true,\r\n  },\r\n  Insights: {\r\n    enabled: true,\r\n  },\r\n  Newsletter: {\r\n    enabled: false,\r\n  },\r\n  Explore: {\r\n    enabled: false,\r\n  },\r\n  \"Revenue Solution\": {\r\n    enabled: false,\r\n  },\r\n};\r\n","import {\r\n  BarChart,\r\n  Calendar,\r\n  Heart,\r\n  Home,\r\n  Mail,\r\n  Plus,\r\n  Users,\r\n} from \"react-feather\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Flex,\r\n  Button,\r\n  Avatar,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Skeleton,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport Logo from \"../../Assets/logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { features } from \"../../Helpers/features\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction Sidebar({ communityId }) {\r\n  const [active, setActive] = useState(window.location.pathname);\r\n  const { user, setUser } = User();\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n    }\r\n    if (communityId) {\r\n      getCommunity(communityId);\r\n    }\r\n  }, [communityId, setUser, user]);\r\n\r\n  const getCommunity = async (id) => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo ,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const SidebarItems = [\r\n    {\r\n      name: \"Home\",\r\n      isExternal: false,\r\n      link: communityId ? `/manage/community/${communityId}` : \"/home\",\r\n      Icon: (props) => <Home {...props} />,\r\n    },\r\n    {\r\n      name: \"Audience\",\r\n      isExternal: false,\r\n      link: communityId\r\n        ? `/manage/community/${communityId}/audience`\r\n        : \"/audience\",\r\n      Icon: (props) => <Users {...props} />,\r\n    },\r\n    {\r\n      name: \"Events\",\r\n      isExternal: false,\r\n      link: communityId ? `/manage/community/${communityId}/events` : \"/events\",\r\n      Icon: (props) => {\r\n        return <Calendar {...props} />;\r\n      },\r\n    },\r\n    {\r\n      name: \"Insights\",\r\n      isExternal: false,\r\n      link: communityId\r\n        ? `/manage/community/${communityId}/insights`\r\n        : \"/insights\",\r\n      Icon: (props) => {\r\n        return <BarChart {...props} />;\r\n      },\r\n    },\r\n    {\r\n      name: \"Newsletter\",\r\n      isExternal: false,\r\n      link: \"#\",\r\n      Icon: (props) => {\r\n        return <Mail {...props} />;\r\n      },\r\n    },\r\n    {\r\n      name: \"Explore\",\r\n      isExternal: false,\r\n      link: \"#\",\r\n      Icon: (props) => {\r\n        return <Heart {...props} />;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const CommunityDisplay = ({ name, logo }) => {\r\n    return (\r\n      <Flex\r\n        cursor=\"pointer\"\r\n        onClick={() => {\r\n          window.location.href = `/manage/community/${communityId}`;\r\n        }}\r\n        mb=\"6\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        experimental_spaceX=\"2\"\r\n      >\r\n        <Image\r\n          src={logo}\r\n          alt={name}\r\n          w={{ base: \"10\", lg: \"8\" }}\r\n          h={{ base: \"10\", lg: \"8\" }}\r\n          rounded=\"full\"\r\n        />\r\n        <Text\r\n          isTruncated\r\n          color=\"white\"\r\n          display={{ base: \"none\", lg: \"block\" }}\r\n          fontWeight=\"bold\"\r\n          fontSize=\"xl\"\r\n        >\r\n          {name}\r\n        </Text>\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  const SidebarItem = ({ name, link, Icon }) => {\r\n    const isEnabled = features[name]\r\n      ? features[name]?.enabled\r\n        ? true\r\n        : false\r\n      : true;\r\n\r\n    return (\r\n      <Link to={isEnabled ? link : \"#\"} onClick={() => setActive(name)}>\r\n        <Tooltip label={name} display={{ lg: \"none\" }} placement=\"right\">\r\n          <Flex\r\n            opacity={isEnabled ? \"1\" : \"0.5\"}\r\n            cursor={isEnabled ? \"pointer\" : \"not-allowed\"}\r\n            experimental_spaceX=\"3\"\r\n            fontSize=\"lg\"\r\n            color={active === link ? \"brand.primary\" : \"white\"}\r\n            alignItems=\"center\"\r\n          >\r\n            <Icon fill={active === link ? \"#FF4085\" : \"none\"} />\r\n            <Text\r\n              display={{ base: \"none\", lg: \"block\" }}\r\n              fontWeight={active === link ? \"bold\" : \"normal\"}\r\n            >\r\n              {name}\r\n            </Text>\r\n          </Flex>\r\n        </Tooltip>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n        alignItems={{ base: \"center\", lg: \"start\" }}\r\n        w={{ base: \"80px\", md: \"100px\", lg: \"360px\" }}\r\n        bg=\"black.400\"\r\n        h=\"100vh\"\r\n        position=\"fixed\"\r\n        p={{ base: \"6\", lg: \"10\" }}\r\n      >\r\n        <Box w={{ lg: \"full\" }}>\r\n          <Box\r\n            w=\"-webkit-fit-content\"\r\n            cursor=\"pointer\"\r\n            onClick={() => (window.location.href = \"/home\")}\r\n          >\r\n            <Image src={Logo} alt=\"relm\" w=\"10\" h=\"10\" />\r\n          </Box>\r\n          <Box px={{ base: \"0\", lg: \"10\" }} mt=\"50px\">\r\n            {communityId ? (\r\n              community ? (\r\n                <CommunityDisplay\r\n                  name={community?.name}\r\n                  logo={community?.logo}\r\n                />\r\n              ) : (\r\n                <Flex\r\n                  mb=\"6\"\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  experimental_spaceX=\"2\"\r\n                >\r\n                  <Skeleton\r\n                    w={{ base: \"10\", lg: \"8\" }}\r\n                    h={{ base: \"10\", lg: \"8\" }}\r\n                    rounded=\"full\"\r\n                  />\r\n                  <Skeleton\r\n                    rounded=\"xl\"\r\n                    h=\"6\"\r\n                    w=\"20\"\r\n                    display={{ base: \"none\", lg: \"block\" }}\r\n                  />\r\n                </Flex>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <Button\r\n              onClick={() => {\r\n                const to = communityId\r\n                  ? `/manage/community/${communityId}/new/event`\r\n                  : \"/new/event\";\r\n                window.location.href = to;\r\n              }}\r\n              _hover={{ bg: \"#DD3370\" }}\r\n              transitionDuration=\"200ms\"\r\n              _focus={{}}\r\n              _active={{}}\r\n              size=\"sm\"\r\n              py=\"5\"\r\n              w={{ base: \"10\", lg: \"full\" }}\r\n              rounded={{ base: \"full\", lg: \"xl\" }}\r\n              color=\"white\"\r\n              bg=\"brand.primary\"\r\n            >\r\n              <Text display={{ base: \"none\", lg: \"block\" }}>\r\n                Create new event\r\n              </Text>\r\n              <Box display={{ base: \"block\", lg: \"none\" }}>\r\n                <Plus />\r\n              </Box>\r\n            </Button>\r\n            <Flex\r\n              alignItems={{ base: \"center\", lg: \"start\" }}\r\n              mt=\"8\"\r\n              direction=\"column\"\r\n              experimental_spaceY=\"5\"\r\n            >\r\n              {SidebarItems.map((data, key) => (\r\n                <SidebarItem key={key} {...data} />\r\n              ))}\r\n            </Flex>\r\n          </Box>\r\n        </Box>\r\n        <Flex\r\n          p={{ base: \"0\", md: \"2\" }}\r\n          w={{ base: \"-webkit-fit-content\", lg: \"full\" }}\r\n          bg=\"whiteAlpha.300\"\r\n          rounded=\"full\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Menu>\r\n            <MenuButton overflow=\"clip\">\r\n              <Flex alignItems=\"center\" experimental_spaceX=\"2\">\r\n                <Avatar\r\n                  size=\"md\"\r\n                  src={user?.avatar_url}\r\n                  name={user?.username}\r\n                />\r\n                <Box display={{ base: \"none\", lg: \"block\" }}>\r\n                  <Text\r\n                    align=\"left\"\r\n                    color=\"white\"\r\n                    whiteSpace=\"nowrap\"\r\n                    fontWeight=\"semibold\"\r\n                    fontSize=\"lg\"\r\n                  >\r\n                    {user?.username}\r\n                  </Text>\r\n                  <Text\r\n                    align=\"left\"\r\n                    color=\"white\"\r\n                    whiteSpace=\"nowrap\"\r\n                    fontSize=\"xs\"\r\n                  >\r\n                    {user?.email}\r\n                  </Text>\r\n                </Box>\r\n              </Flex>\r\n            </MenuButton>\r\n            <MenuList\r\n              bg=\"brand.secondary\"\r\n              m=\"2\"\r\n              borderColor=\"gray.700\"\r\n              color=\"white\"\r\n            >\r\n              <MenuItem\r\n                _hover={{ bg: \"whiteAlpha.50\" }}\r\n                _focus={{ bg: \"whiteAlpha.50\" }}\r\n                onClick={async () => {\r\n                  await supabase.auth.signOut();\r\n                  window.location.href = \"/\";\r\n                  setUser(undefined);\r\n                  localStorage.removeItem(\"user\");\r\n                  localStorage.removeItem(\"email\");\r\n                }}\r\n              >\r\n                Sign out\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </Flex>\r\n      </Flex>\r\n      <Box\r\n        w={{ base: \"0\", md: \"100px\", lg: \"360px\" }}\r\n        bg=\"pink\"\r\n        h=\"full\"\r\n        minH=\"100vh\"\r\n      ></Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import Sidebar from \"../../components/Navigation/Sidebar.component\";\r\nimport { Flex, Box, Image } from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { X, Menu } from \"react-feather\";\r\nimport Logo from \"../../Assets/logo.svg\";\r\n\r\nfunction StarterTemplate({ children, communityId }) {\r\n  const [sidebarVisibility, setSidebarVisibility] = useState(false);\r\n\r\n  return (\r\n    <Flex>\r\n      <Box\r\n        zIndex={2}\r\n        display={{ base: sidebarVisibility ? \"block\" : \"none\", md: \"block\" }}\r\n      >\r\n        <Sidebar communityId={communityId} />\r\n      </Box>\r\n      <Box\r\n        p={{ base: \"8\", md: \"10\" }}\r\n        bg=\"brand.secondary\"\r\n        w=\"full\"\r\n        minH=\"100vh\"\r\n        color=\"white\"\r\n      >\r\n        <Flex\r\n          display={{ base: \"flex\", md: \"none\" }}\r\n          m=\"-4\"\r\n          justify=\"space-between\"\r\n          mb=\"4\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Image src={Logo} alt=\"relm\" w=\"10\" h=\"10\" ml=\"1\" mt=\"2\" />\r\n          <Box\r\n            cursor=\"pointer\"\r\n            onClick={() => setSidebarVisibility(!sidebarVisibility)}\r\n            rounded=\"full\"\r\n            p=\"2\"\r\n            _hover={{ bg: \"whiteAlpha.200\" }}\r\n          >\r\n            {sidebarVisibility ? <X /> : <Menu />}\r\n          </Box>\r\n        </Flex>\r\n        {children}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default StarterTemplate;\r\n","export function formatDate(date) {\r\n  const Months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  if (date) {\r\n    return `${Months[date.month - 1]} ${date.date}, ${date.time} GMT+5:30`;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Flex, AspectRatio, Image, Text, Box, Button } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Calendar, Users } from \"react-feather\";\r\nimport { formatDate } from \"../../Helpers/dateFormatter\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction EventCard({\r\n  id,\r\n  name,\r\n  description,\r\n  date,\r\n  image,\r\n  community,\r\n  audience,\r\n}) {\r\n  const [communityData, setCommunityData] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (community) {\r\n      getCommunity();\r\n    }\r\n  }, []);\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo\")\r\n        .eq(\"id\", community)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunityData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      direction=\"column\"\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      p=\"2\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW={{ base: \"full\", md: \"300px\" }}\r\n      onClick={() => {\r\n        window.location.href = `/manage/event/${id}`;\r\n      }}\r\n    >\r\n      <AspectRatio ratio={1920 / 1080} w=\"full\">\r\n        <Image src={image} alt={name} rounded=\"lg\" />\r\n      </AspectRatio>\r\n      <Flex direction=\"column\" justify=\"space-between\" h=\"full\">\r\n        <Box>\r\n          <Text fontSize=\"xl\" fontWeight=\"bold\" mt=\"4\">\r\n            {name}\r\n          </Text>\r\n          <Flex\r\n            fontSize=\"xs\"\r\n            color=\"brand.primary\"\r\n            experimental_spaceX=\"1.5\"\r\n            alignItems=\"center\"\r\n            mt=\"1\"\r\n          >\r\n            <Calendar size=\"14px\" />\r\n            <Text>{formatDate(date)}</Text>\r\n          </Flex>\r\n          <Flex\r\n            mt=\"1\"\r\n            fontSize=\"xs\"\r\n            experimental_spaceX=\"1.5\"\r\n            color=\"white\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Users size=\"14px\" />\r\n            <Text>{audience}</Text>\r\n          </Flex>\r\n          <Text fontSize=\"sm\" mt=\"4\">\r\n            {description}\r\n          </Text>\r\n        </Box>\r\n        <Box>\r\n          <Flex mt=\"4\" mb=\"2\" justify=\"space-between\" mr=\"2\">\r\n            {communityData ? (\r\n              <Flex alignItems=\"center\" experimental_spaceX=\"2\">\r\n                <Image\r\n                  src={communityData.logo}\r\n                  alt={communityData.name}\r\n                  w=\"5\"\r\n                  h=\"5\"\r\n                  rounded=\"base\"\r\n                />\r\n                <Text fontWeight=\"medium\" fontSize=\"sm\">\r\n                  {communityData.name}\r\n                </Text>\r\n              </Flex>\r\n            ) : (\r\n              <Box></Box>\r\n            )}\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Manage\r\n            </Button>\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default EventCard;\r\n","export const isUpcoming = (date) => {\r\n  const dateObject = new Date();\r\n  const d = dateObject.getDate();\r\n  const m = dateObject.getMonth() + 1;\r\n  const y = dateObject.getFullYear();\r\n\r\n  if (date.date >= d && date.month >= m && date.year >= y) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n","export function wish() {\r\n  var data = [\r\n      [0, 4, \"Good Night\"],\r\n      [5, 11, \"Good Morning\"], //Store messages in an array\r\n      [12, 17, \"Good Afternoon\"],\r\n      [18, 24, \"Good Night\"],\r\n    ],\r\n    hr = new Date().getHours();\r\n\r\n  for (var i = 0; i < data.length; i++) {\r\n    if (hr >= data[i][0] && hr <= data[i][1]) {\r\n      return data[i][2];\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { Box, Flex, Text, Divider, Button } from \"@chakra-ui/react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { Plus } from \"react-feather\";\r\nimport CommunityCard from \"../../components/Cards/CommunityCard.component\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EventCard from \"../../components/Cards/EventCard.component\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\nimport { wish } from \"../../Helpers/wisher\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction Home() {\r\n  const { user, setUser } = User();\r\n  const [communitities, setCommunities] = useState(undefined);\r\n  const [upcomingEvents, setUpcomingEvents] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    getCommunities();\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\"id, name, image, description, date, community, audience\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .order(\"created_at\", { ascending: false });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      let uE = [];\r\n      let dE = [];\r\n      data.forEach((data) => {\r\n        if (isUpcoming(data.date)) {\r\n          uE.push(data);\r\n        } else {\r\n          dE.push(data);\r\n        }\r\n      });\r\n\r\n      setUpcomingEvents(uE);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const UpcomingEvents = () => {\r\n    return (\r\n      <>\r\n        <Flex justify=\"space-between\" mt=\"6\" alignItems=\"center\">\r\n          <Link to=\"/events\">\r\n            <Text\r\n              casing=\"capitalize\"\r\n              fontSize=\"sm\"\r\n              fontWeight=\"semibold\"\r\n              letterSpacing=\"2px\"\r\n              color=\"white\"\r\n            >\r\n              UPCOMING EVENTS\r\n            </Text>\r\n          </Link>\r\n          <Link to={`/new/event`}>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              leftIcon={<Plus size=\"18px\" />}\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n        <Flex wrap=\"wrap\" mt=\"4\">\r\n          {upcomingEvents ? (\r\n            upcomingEvents?.map((data, key) => (\r\n              <EventCard key={key} {...data} />\r\n            ))\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Flex>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getCommunities = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .order(\"created_at\", { ascending: false });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunities(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n      localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify({\r\n          username: data.username,\r\n          avatar_url: data.avatar_url,\r\n          email: data.email,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate>\r\n      <Helmet>\r\n        <title>Home | Relm</title>\r\n      </Helmet>\r\n      <Box>\r\n        <Text color=\"whiteAlpha.500\" fontSize={{ base: \"sm\", md: \"lg\" }}>\r\n          {wish()},\r\n        </Text>\r\n        <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"bold\">\r\n          {user?.username}\r\n        </Text>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n        <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n          <Text\r\n            casing=\"capitalize\"\r\n            fontSize=\"sm\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"2px\"\r\n            color=\"white\"\r\n          >\r\n            COMMUNITIES\r\n          </Text>\r\n          <Link to=\"/new/community\">\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              leftIcon={<Plus size=\"18px\" />}\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n        {communitities?.length > 0 ? (\r\n          <Flex mt=\"4\" wrap=\"wrap\">\r\n            {communitities?.map((data, key) => (\r\n              <CommunityCard key={key} {...data} />\r\n            ))}\r\n          </Flex>\r\n        ) : communitities ? (\r\n          <Flex\r\n            color=\"whiteAlpha.600\"\r\n            my=\"8\"\r\n            textAlign=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            🐝 Click on create to add communities\r\n          </Flex>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {upcomingEvents?.length > 0 ? <UpcomingEvents /> : <></>}\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import {\r\n  Flex,\r\n  Box,\r\n  Divider,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { ArrowLeft, CheckCircle, Edit, Upload } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport axios from \"axios\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction NewCommunity() {\r\n  const Logos = [\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/defaultCommunityLogo_gUich_dto.svg?updatedAt=1633160835413\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-3_PXKqFbob4Lj.svg?updatedAt=1633165287477\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-2_7d7-btPTg.svg?updatedAt=1633165286592\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-1_JT81iTWJQGq.svg?updatedAt=1633165286130\",\r\n  ];\r\n\r\n  const { user } = User();\r\n  const [logo, setLogo] = useState(Logos[0]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const uploadLogo = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setLogo(res.data.url);\r\n      onClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const createCommunity = async (name, description, logo) => {\r\n    if (name.length > 3) {\r\n      setLogo(logo);\r\n      try {\r\n        setLoading(true);\r\n        const updates = {\r\n          name,\r\n          description,\r\n          logo,\r\n          createdBy: [user?.email],\r\n        };\r\n\r\n        const { data, error } = await supabase\r\n          .from(\"communities\")\r\n          .upsert(updates)\r\n          .single();\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Community created successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          window.location.href = `/manage/community/${data.id}`;\r\n        }, 1000);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate>\r\n      <Helmet>\r\n        <title>New Community | Relm</title>\r\n      </Helmet>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n          <ModalHeader>Choose a logo</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Flex wrap=\"wrap\">\r\n              <Flex\r\n                cursor=\"pointer\"\r\n                border=\"2px\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                _hover={{ borderColor: \"whiteAlpha.50\" }}\r\n                borderColor=\"transparent\"\r\n                mb=\"3\"\r\n                mr=\"3\"\r\n                w=\"24\"\r\n                h=\"24\"\r\n                rounded=\"xl\"\r\n                bg=\"whiteAlpha.300\"\r\n                onClick={() => {\r\n                  document.getElementById(\"file\").click();\r\n                }}\r\n              >\r\n                <Upload size=\"30px\" />\r\n              </Flex>\r\n              {Logos.map((data, key) => (\r\n                <Box\r\n                  key={key}\r\n                  cursor=\"pointer\"\r\n                  onClick={() => {\r\n                    setLogo(data);\r\n                  }}\r\n                >\r\n                  <Image\r\n                    border=\"4px\"\r\n                    borderColor={\r\n                      logo === data ? \"brand.primary\" : \"transparent\"\r\n                    }\r\n                    mb=\"3\"\r\n                    mr=\"3\"\r\n                    src={data}\r\n                    w=\"24\"\r\n                    h=\"24\"\r\n                    rounded=\"xl\"\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Flex>\r\n          </ModalBody>\r\n          <Input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            accept=\"image/*\"\r\n            display=\"none\"\r\n            onChange={(e) => uploadLogo(e.target.files[0])}\r\n          />\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              {uploading ? <Spinner /> : <>Done</>}\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Box>\r\n        <Flex alignItems=\"center\" experimental_spaceX=\"4\">\r\n          <Box\r\n            cursor=\"pointer\"\r\n            p=\"2\"\r\n            onClick={() => {\r\n              window.location.href = \"/home\";\r\n            }}\r\n            rounded=\"full\"\r\n            _hover={{ bg: \"whiteAlpha.200\" }}\r\n          >\r\n            <ArrowLeft />\r\n          </Box>\r\n          <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n            Create Community\r\n          </Text>\r\n        </Flex>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n        <Flex\r\n          mt=\"6\"\r\n          w={{ base: \"full\", md: \"80%\" }}\r\n          direction={{ base: \"column\", md: \"row\" }}\r\n        >\r\n          <Box minW=\"24\" mr=\"6\" mb=\"4\">\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mb=\"1\">\r\n              Logo\r\n            </Text>\r\n            <Box position=\"relative\" w=\"-webkit-fit-content\">\r\n              <Box\r\n                position=\"absolute\"\r\n                bg=\"blackAlpha.500\"\r\n                p=\"2\"\r\n                cursor=\"pointer\"\r\n                _hover={{ bg: \"blackAlpha.600\" }}\r\n                transitionDuration=\"200ms\"\r\n                roundedTopStart=\"xl\"\r\n                bottom=\"0\"\r\n                right=\"0\"\r\n                onClick={onOpen}\r\n              >\r\n                <Edit size=\"18px\" />\r\n              </Box>\r\n              <Image src={logo} w=\"24\" h=\"24\" rounded=\"lg\" />\r\n            </Box>\r\n          </Box>\r\n          <Box w=\"full\">\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n              Name *\r\n            </Text>\r\n            <Input\r\n              w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n              type=\"text\"\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Community name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <Text color=\"white\" mt=\"4\" fontWeight=\"medium\" fontSize=\"sm\">\r\n              Description\r\n            </Text>\r\n            <Textarea\r\n              w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n              type=\"email\"\r\n              mt=\"1.5\"\r\n              p=\"4\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Describe your community\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <Flex\r\n              mt=\"6\"\r\n              justify=\"end\"\r\n              w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n            >\r\n              <Button\r\n                display=\"flex\"\r\n                float=\"right\"\r\n                rounded=\"lg\"\r\n                w={loading ? \"200px\" : \"auto\"}\r\n                _focus={{}}\r\n                _active={{}}\r\n                color=\"black\"\r\n                onClick={() => createCommunity(name, description, logo)}\r\n              >\r\n                {loading ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  <>\r\n                    <CheckCircle /> <Text ml=\"2\">Create Community</Text>\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </Flex>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default NewCommunity;\r\n","import {\r\n  Flex,\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { CheckCircle, Edit, Upload } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport axios from \"axios\";\r\n\r\nfunction UpdateCommunity({\r\n  id,\r\n  communityName,\r\n  communityDescription,\r\n  communityLogo,\r\n  close,\r\n}) {\r\n  const Logos = [\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/defaultCommunityLogo_gUich_dto.svg?updatedAt=1633160835413\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-3_PXKqFbob4Lj.svg?updatedAt=1633165287477\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-2_7d7-btPTg.svg?updatedAt=1633165286592\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-1_JT81iTWJQGq.svg?updatedAt=1633165286130\",\r\n  ];\r\n\r\n  const { user } = User();\r\n  const [logo, setLogo] = useState(communityLogo);\r\n  const [name, setName] = useState(communityName);\r\n  const [description, setDescription] = useState(communityDescription);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const uploadLogo = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setLogo(res.data.url);\r\n      onClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const LogoModal = () => {\r\n    return (\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n          <ModalHeader>Choose a logo</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Flex wrap=\"wrap\">\r\n              <Flex\r\n                cursor=\"pointer\"\r\n                border=\"2px\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                _hover={{ borderColor: \"whiteAlpha.50\" }}\r\n                borderColor=\"transparent\"\r\n                mb=\"3\"\r\n                mr=\"3\"\r\n                w=\"24\"\r\n                h=\"24\"\r\n                rounded=\"xl\"\r\n                bg=\"whiteAlpha.300\"\r\n                onClick={() => {\r\n                  document.getElementById(\"file\").click();\r\n                }}\r\n              >\r\n                <Upload size=\"30px\" />\r\n              </Flex>\r\n              {Logos.map((data, key) => (\r\n                <Box\r\n                  key={key}\r\n                  cursor=\"pointer\"\r\n                  onClick={() => {\r\n                    setLogo(data);\r\n                  }}\r\n                >\r\n                  <Image\r\n                    border=\"4px\"\r\n                    borderColor={\r\n                      logo === data ? \"brand.primary\" : \"transparent\"\r\n                    }\r\n                    mb=\"3\"\r\n                    mr=\"3\"\r\n                    src={data}\r\n                    w=\"24\"\r\n                    h=\"24\"\r\n                    rounded=\"xl\"\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Flex>\r\n          </ModalBody>\r\n          <Input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            accept=\"image/*\"\r\n            display=\"none\"\r\n            onChange={(e) => uploadLogo(e.target.files[0])}\r\n          />\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              {uploading ? <Spinner /> : <>Done</>}\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const createCommunity = async (name, description, logo) => {\r\n    if (name.length > 3) {\r\n      setLogo(logo);\r\n      try {\r\n        setLoading(true);\r\n        const updates = {\r\n          id,\r\n          name,\r\n          description,\r\n          logo,\r\n          createdBy: [user?.email],\r\n        };\r\n\r\n        const { error } = await supabase.from(\"communities\").upsert(updates, {\r\n          returning: \"minimal\",\r\n        });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Community created successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        close();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      mt=\"6\"\r\n      w=\"full\"\r\n      direction={{ base: \"column\", md: \"row\" }}\r\n      color=\"white\"\r\n    >\r\n      <LogoModal />\r\n      <Box minW=\"24\" mr=\"6\" mb=\"4\">\r\n        <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mb=\"1\">\r\n          Logo\r\n        </Text>\r\n        <Box position=\"relative\" w=\"-webkit-fit-content\">\r\n          <Box\r\n            position=\"absolute\"\r\n            bg=\"blackAlpha.500\"\r\n            p=\"2\"\r\n            cursor=\"pointer\"\r\n            _hover={{ bg: \"blackAlpha.600\" }}\r\n            transitionDuration=\"200ms\"\r\n            roundedTopStart=\"xl\"\r\n            bottom=\"0\"\r\n            right=\"0\"\r\n            onClick={onOpen}\r\n          >\r\n            <Edit size=\"18px\" />\r\n          </Box>\r\n          <Image src={logo} w=\"24\" h=\"24\" rounded=\"lg\" />\r\n        </Box>\r\n      </Box>\r\n      <Box w=\"full\">\r\n        <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n          Name *\r\n        </Text>\r\n        <Input\r\n          value={name}\r\n          w=\"full\"\r\n          type=\"text\"\r\n          mt=\"1.5\"\r\n          py=\"5\"\r\n          rounded=\"lg\"\r\n          color=\"white\"\r\n          _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n          _focus={{ borderColor: \"brand.primary\" }}\r\n          borderColor=\"whiteAlpha.400\"\r\n          _placeholder={{ color: \"whiteAlpha.400\" }}\r\n          placeholder=\"Community name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Text color=\"white\" mt=\"4\" fontWeight=\"medium\" fontSize=\"sm\">\r\n          Description\r\n        </Text>\r\n        <Textarea\r\n          value={description}\r\n          w=\"full\"\r\n          type=\"email\"\r\n          mt=\"1.5\"\r\n          p=\"4\"\r\n          rounded=\"lg\"\r\n          color=\"white\"\r\n          _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n          _focus={{ borderColor: \"brand.primary\" }}\r\n          borderColor=\"whiteAlpha.400\"\r\n          _placeholder={{ color: \"whiteAlpha.400\" }}\r\n          placeholder=\"Describe your community\"\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <Flex mt=\"6\" justify=\"end\" w=\"full\">\r\n          <Button\r\n            display=\"flex\"\r\n            float=\"right\"\r\n            rounded=\"lg\"\r\n            w={loading ? \"100px\" : \"auto\"}\r\n            _focus={{}}\r\n            _active={{}}\r\n            color=\"black\"\r\n            onClick={() => createCommunity(name, description, logo)}\r\n          >\r\n            {loading ? (\r\n              <Spinner />\r\n            ) : (\r\n              <>\r\n                <CheckCircle /> <Text ml=\"2\">Save</Text>\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default UpdateCommunity;\r\n","import {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Box,\r\n  Flex,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowLeft } from \"react-feather\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction CurrentLocation({ username, communityName, link }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" experimental_spaceX=\"2\">\r\n      <Box\r\n        cursor=\"pointer\"\r\n        onClick={() => {\r\n          if (link) {\r\n            window.location.href = link;\r\n          } else {\r\n            history.goBack();\r\n          }\r\n        }}\r\n      >\r\n        <ArrowLeft size=\"18px\" />\r\n      </Box>\r\n      <Breadcrumb color=\"white\">\r\n        <BreadcrumbItem>\r\n          <BreadcrumbLink href=\"/home\">{username}</BreadcrumbLink>\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <BreadcrumbLink href=\"#\">{communityName}</BreadcrumbLink>\r\n        </BreadcrumbItem>\r\n      </Breadcrumb>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default CurrentLocation;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Text,\r\n  Divider,\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  ModalBody,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Settings, Plus } from \"react-feather\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\nimport EventCard from \"../../components/Cards/EventCard.component\";\r\nimport UpdateCommunity from \"../Update/UpdateCommunity.page\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction ManageCommunity(props) {\r\n  const id = props.match.params.id;\r\n  const [community, setCommunity] = useState(undefined);\r\n  const [upcomingEvents, setUpcomingEvents] = useState(undefined);\r\n  const { user } = User();\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useEffect(() => {\r\n    getCommunity();\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\"id, name, image, description, date, community, audience\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"community\", id)\r\n        .order(\"created_at\", { ascending: false });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      let uE = [];\r\n      let dE = [];\r\n      data.forEach((data) => {\r\n        if (isUpcoming(data.date)) {\r\n          uE.push(data);\r\n        } else {\r\n          dE.push(data);\r\n        }\r\n      });\r\n\r\n      setUpcomingEvents(uE);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const UpcomingEvents = () => {\r\n    return (\r\n      <>\r\n        <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n          <Link to={`/manage/community/${id}/events`}>\r\n            <Text\r\n              casing=\"capitalize\"\r\n              fontSize=\"sm\"\r\n              fontWeight=\"semibold\"\r\n              letterSpacing=\"2px\"\r\n              color=\"white\"\r\n            >\r\n              UPCOMING EVENTS\r\n            </Text>\r\n          </Link>\r\n          <Link to={`/manage/community/${id}/new/event`}>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              leftIcon={<Plus size=\"18px\" />}\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n\r\n        {upcomingEvents?.length > 0 ? (\r\n          upcomingEvents?.map((data, key) => (\r\n            <Flex wrap=\"wrap\" mt=\"4\">\r\n              <EventCard key={key} {...data} />\r\n            </Flex>\r\n          ))\r\n        ) : upcomingEvents ? (\r\n          <Flex\r\n            color=\"whiteAlpha.600\"\r\n            my=\"10\"\r\n            justify=\"center\"\r\n            textAlign=\"center\"\r\n          >\r\n            🐝 No upcoming events\r\n          </Flex>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      {community ? (\r\n        <Helmet>\r\n          <title>{community?.name} | Relm</title>\r\n        </Helmet>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Box>\r\n        <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\r\n          <ModalOverlay />\r\n          <ModalContent bg=\"#1D2023\">\r\n            <ModalHeader color=\"white\">\r\n              Settings <ModalCloseButton color=\"white\" />\r\n            </ModalHeader>\r\n\r\n            <ModalBody px=\"8\" pb=\"8\">\r\n              <UpdateCommunity\r\n                communityName={community?.name}\r\n                communityDescription={community?.description}\r\n                communityLogo={community?.logo}\r\n                id={community?.id}\r\n                close={onClose}\r\n              />\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n\r\n        <CurrentLocation\r\n          link=\"/home\"\r\n          username={user?.username}\r\n          communityName={community?.name}\r\n        />\r\n\r\n        <Flex justify=\"space-between\" alignItems=\"end\">\r\n          <Box>\r\n            <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"bold\">\r\n              {community?.name}\r\n            </Text>\r\n            {community?.description ? (\r\n              <Text fontSize={{ base: \"xs\", md: \"sm\" }} fontWeight=\"thin\">\r\n                {community?.description}\r\n              </Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            _hover={{ bg: \"whiteAlpha.200\" }}\r\n            rounded=\"full\"\r\n            p=\"2\"\r\n            cursor=\"pointer\"\r\n            onClick={() => onOpen()}\r\n          >\r\n            <Settings size=\"20px\" />\r\n          </Box>\r\n        </Flex>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n      </Box>\r\n      {upcomingEvents ? <UpcomingEvents /> : <></>}\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default ManageCommunity;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { Box, Divider, Text, Flex, Button } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Plus } from \"react-feather\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport EventCard from \"../../components/Cards/EventCard.component\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction Events(props) {\r\n  const id = props.match.params.id;\r\n  const [active, setActive] = useState(\"Upcoming\");\r\n  const [upcomingEvents, setUpcomingEvents] = useState(undefined);\r\n  const [doneEvents, setDoneEvents] = useState(undefined);\r\n  const NavigationItems = [\"Upcoming\", \"Done\"];\r\n  const [community, setCommunity] = useState(undefined);\r\n  const { user } = User();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      if (id) {\r\n        const { data, error } = await supabase\r\n          .from(\"events\")\r\n          .select(\"id, name, image, description, date, community, audience\")\r\n          .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n          .eq(\"community\", id)\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        let uE = [];\r\n        let dE = [];\r\n        data.forEach((data) => {\r\n          if (isUpcoming(data.date)) {\r\n            uE.push(data);\r\n          } else {\r\n            dE.push(data);\r\n          }\r\n        });\r\n        setDoneEvents(dE);\r\n        setUpcomingEvents(uE);\r\n      } else {\r\n        const { data, error } = await supabase\r\n          .from(\"events\")\r\n          .select(\"id, name, image, description, date, community, audience\")\r\n          .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        let uE = [];\r\n        let dE = [];\r\n        data.forEach((data) => {\r\n          if (isUpcoming(data.date)) {\r\n            uE.push(data);\r\n          } else {\r\n            dE.push(data);\r\n          }\r\n        });\r\n        setDoneEvents(dE);\r\n        setUpcomingEvents(uE);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const Navigation = ({ name }) => {\r\n    return (\r\n      <Box\r\n        py=\"2\"\r\n        px=\"4\"\r\n        borderBottom=\"2px\"\r\n        onClick={() => setActive(name)}\r\n        transitionDuration=\"200ms\"\r\n        cursor=\"pointer\"\r\n        color={active === name ? \"brand.primary\" : \"whiteAlpha.700\"}\r\n        _hover={{ color: active === name ? \"brand.primary\" : \"white\" }}\r\n        borderColor={active === name ? \"brand.primary\" : \"transparent\"}\r\n      >\r\n        <Text>{name}</Text>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Helmet>\r\n        <title>Events | Relm</title>\r\n      </Helmet>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Flex alignItems=\"center\" justify=\"space-between\">\r\n          <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n            Events\r\n          </Text>\r\n          <Button\r\n            size=\"sm\"\r\n            bg=\"alpha.white\"\r\n            border=\"1px\"\r\n            borderColor=\"transparent\"\r\n            leftIcon={<Plus size=\"18px\" />}\r\n            px=\"4\"\r\n            _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n            _focus={{}}\r\n            _active={{ bg: \"whiteAlpha.200\" }}\r\n            onClick={() => {\r\n              const to = id\r\n                ? `/manage/community/${id}/new/event`\r\n                : \"/new/event\";\r\n              window.location.href = to;\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Flex>\r\n        <Flex mt=\"3\" experimental_spaceX=\"3\">\r\n          {NavigationItems.map((data, key) => (\r\n            <Navigation name={data} />\r\n          ))}\r\n        </Flex>\r\n        <Divider color=\"white\" opacity=\"0.2\" />\r\n\r\n        <Flex wrap=\"wrap\" mt=\"6\">\r\n          {active === \"Upcoming\" ? (\r\n            upcomingEvents ? (\r\n              upcomingEvents?.length > 0 ? (\r\n                upcomingEvents?.map((data, key) => (\r\n                  <EventCard key={key} {...data} />\r\n                ))\r\n              ) : (\r\n                <Flex\r\n                  w=\"full\"\r\n                  color=\"whiteAlpha.600\"\r\n                  my=\"10\"\r\n                  justify=\"center\"\r\n                  textAlign=\"center\"\r\n                >\r\n                  🐝 No upcoming events\r\n                </Flex>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {active === \"Done\" ? (\r\n            doneEvents ? (\r\n              doneEvents?.length > 0 ? (\r\n                doneEvents?.map((data, key) => (\r\n                  <EventCard key={key} {...data} />\r\n                ))\r\n              ) : (\r\n                <Flex\r\n                  w=\"full\"\r\n                  color=\"whiteAlpha.600\"\r\n                  my=\"10\"\r\n                  justify=\"center\"\r\n                  textAlign=\"center\"\r\n                >\r\n                  🐝 No past events\r\n                </Flex>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Flex>\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Divider,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  AspectRatio,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { ArrowLeft, Calendar, CheckCircle, MapPin } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction NewEvent(props) {\r\n  const id = props.match.params.id;\r\n  const Platforms = [\r\n    {\r\n      name: \"💻 Virtual\",\r\n      enum: \"Virtual\",\r\n      placeholder: \"Link to event\",\r\n    },\r\n    {\r\n      name: \"🌍 In Person\",\r\n      enum: \"InPerson\",\r\n      placeholder: \"Location to event\",\r\n    },\r\n  ];\r\n  const { user } = User();\r\n  const [active, setActive] = useState(Platforms[0]);\r\n  const [link, setLink] = useState(\"\");\r\n  const [image, setImage] = useState(\r\n    \"https://i.ibb.co/L61C1RD/default-Event.png\"\r\n  );\r\n  const [name, setName] = useState(\"\");\r\n  const [date, setDate] = useState({});\r\n  const [description, setDescription] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [community, setCommunity] = useState(undefined);\r\n  const [communitySelected, setCommunitySelected] = useState(\"None\");\r\n  const [communities, setCommunities] = useState(undefined);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getCommunities();\r\n  }, []);\r\n\r\n  const uploadImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setImage(res.data.url);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const getCommunities = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")]);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunities(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const createEvent = async () => {\r\n    if (name.length > 3) {\r\n      setImage(image);\r\n      try {\r\n        setLoading(true);\r\n        let updates = {};\r\n\r\n        if (id) {\r\n          updates = {\r\n            name,\r\n            description,\r\n            content,\r\n            date,\r\n            link,\r\n            image,\r\n            admin: localStorage.getItem(\"email\"),\r\n            platform: active.enum,\r\n            createdBy: [localStorage.getItem(\"email\")],\r\n            community: id,\r\n          };\r\n          const { data } = await supabase\r\n            .from(\"communities\")\r\n            .select(\"id, events\")\r\n            .eq(\"id\", id)\r\n            .single();\r\n\r\n          await supabase\r\n            .from(\"communities\")\r\n            .upsert(\r\n              { id: data.id, events: data.events + 1 },\r\n              { returning: \"minimal\" }\r\n            )\r\n            .single();\r\n        } else {\r\n          updates = {\r\n            name,\r\n            description,\r\n            content,\r\n            date,\r\n            link,\r\n            image,\r\n            admin: localStorage.getItem(\"email\"),\r\n            platform: active.enum,\r\n            createdBy: [localStorage.getItem(\"email\")],\r\n            community: communitySelected === \"None\" ? null : communitySelected,\r\n          };\r\n        }\r\n\r\n        const EventData = await supabase\r\n          .from(\"events\")\r\n          .upsert(updates)\r\n          .single();\r\n        if (communitySelected !== \"None\") {\r\n          const { data } = await supabase\r\n            .from(\"communities\")\r\n            .select(\"id, events\")\r\n            .eq(\"id\", communitySelected)\r\n            .single();\r\n\r\n          await supabase\r\n            .from(\"communities\")\r\n            .upsert(\r\n              { id: data.id, events: data.events + 1 },\r\n              { returning: \"minimal\" }\r\n            );\r\n        }\r\n\r\n        if (EventData.error) {\r\n          throw EventData.error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Event created successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          window.location.href = `/manage/event/${EventData.data.id}`;\r\n        }, 1000);\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Event name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const EventPlatform = () => {\r\n    return (\r\n      <Box>\r\n        <Flex\r\n          fontSize=\"xl\"\r\n          fontWeight=\"semibold\"\r\n          color=\"brand.primary\"\r\n          alignItems=\"center\"\r\n          experimental_spaceX=\"3\"\r\n          mt=\"8\"\r\n          mb=\"4\"\r\n        >\r\n          <MapPin /> <Text>Where will it happen? *</Text>\r\n        </Flex>\r\n        <Flex\r\n          p=\"1.5\"\r\n          bg=\"whiteAlpha.200\"\r\n          w=\"-webkit-fit-content\"\r\n          experimental_spaceX=\"3\"\r\n          rounded=\"lg\"\r\n        >\r\n          {Platforms.map((data, key) => (\r\n            <Box\r\n              onClick={() => {\r\n                setActive(data);\r\n                setLink(\"\");\r\n              }}\r\n              cursor=\"pointer\"\r\n              color={data.name === active.name ? \"white\" : \"whiteAlpha.800\"}\r\n              _hover={{ color: \"white\" }}\r\n              transitionDuration=\"200ms\"\r\n              key={key}\r\n              bg={data.name === active.name ? \"whiteAlpha.300\" : \"transparent\"}\r\n              px=\"4\"\r\n              py=\"1\"\r\n              rounded=\"base\"\r\n            >\r\n              {data.name}\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Helmet>\r\n        <title>New Event | Relm</title>\r\n      </Helmet>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\" experimental_spaceX=\"4\">\r\n          {!id ? (\r\n            <Box\r\n              cursor=\"pointer\"\r\n              p=\"2\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n              rounded=\"full\"\r\n              _hover={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              <ArrowLeft />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n            Create Event\r\n          </Text>\r\n        </Flex>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n      </Box>\r\n      <Flex alignItems=\"center\" mt=\"6\" direction=\"column\">\r\n        <AspectRatio\r\n          ratio={1920 / 1080}\r\n          w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n          shadow=\"xl\"\r\n        >\r\n          <Box>\r\n            <Image rounded=\"lg\" src={image} />\r\n            <Button\r\n              position=\"absolute\"\r\n              bottom=\"0\"\r\n              left=\"0\"\r\n              m=\"4\"\r\n              size=\"sm\"\r\n              bg=\"blackAlpha.600\"\r\n              border=\"1px\"\r\n              onClick={() => document.getElementById(\"file\").click()}\r\n              borderColor=\"transparent\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"blackAlpha.800\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"blackAlpha.700\" }}\r\n            >\r\n              {uploading ? <Spinner /> : <>Change cover photo</>}\r\n            </Button>\r\n          </Box>\r\n        </AspectRatio>\r\n        <Input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          id=\"file\"\r\n          display=\"none\"\r\n          onChange={(e) => uploadImage(e.target.files[0])}\r\n        />\r\n        <Box w={{ base: \"full\", md: \"80%\", lg: \"70%\" }} mt=\"4\">\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              createEvent();\r\n            }}\r\n          >\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n              Event Name *\r\n            </Text>\r\n            <Input\r\n              w=\"full\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              type=\"text\"\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              isRequired={true}\r\n              px=\"0\"\r\n              rounded=\"none\"\r\n              color=\"white\"\r\n              fontSize=\"xl\"\r\n              borderTop=\"none\"\r\n              borderRight=\"none\"\r\n              borderLeft=\"none\"\r\n              borderBottom=\"1px\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Designing Session\"\r\n            />\r\n            <EventPlatform />\r\n            <Input\r\n              w=\"full\"\r\n              type=\"text\"\r\n              mt=\"3\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              isRequired={true}\r\n              value={link}\r\n              onChange={(e) => setLink(e.target.value)}\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder={active.placeholder}\r\n            />\r\n            <Flex\r\n              fontSize=\"xl\"\r\n              fontWeight=\"semibold\"\r\n              color=\"brand.primary\"\r\n              alignItems=\"center\"\r\n              experimental_spaceX=\"3\"\r\n              mt=\"8\"\r\n            >\r\n              <Calendar /> <Text>When will it happen? *</Text>\r\n            </Flex>\r\n            <Flex experimental_spaceX=\"4\" mt=\"2\">\r\n              <Input\r\n                w=\"full\"\r\n                type=\"date\"\r\n                placeholder=\"Date\"\r\n                onChange={(e) => {\r\n                  const dateString = e.target.value;\r\n                  console.log(dateString);\r\n                  const dateFormatted = dateString.split(\"-\");\r\n                  setDate({\r\n                    ...date,\r\n                    date: dateFormatted[2],\r\n                    month: dateFormatted[1],\r\n                    year: dateFormatted[0],\r\n                  });\r\n                }}\r\n                mt=\"1.5\"\r\n                py=\"5\"\r\n                rounded=\"lg\"\r\n                isRequired={true}\r\n                color=\"white\"\r\n                _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                _focus={{ borderColor: \"brand.primary\" }}\r\n                borderColor=\"whiteAlpha.400\"\r\n                _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              />\r\n              <Input\r\n                w={{ sm: \"70%\", lg: \"40%\" }}\r\n                type=\"time\"\r\n                placeholder=\"Time\"\r\n                onChange={(e) => {\r\n                  setDate({\r\n                    ...date,\r\n                    time: moment(e.target.value, \"HH:mm\").format(\"hh:mm A\"),\r\n                  });\r\n                }}\r\n                mt=\"1.5\"\r\n                isRequired={true}\r\n                py=\"5\"\r\n                rounded=\"lg\"\r\n                color=\"white\"\r\n                _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                _focus={{ borderColor: \"brand.primary\" }}\r\n                borderColor=\"whiteAlpha.400\"\r\n                _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              />\r\n            </Flex>\r\n            <Text mt=\"1\" color=\"whiteAlpha.500\">\r\n              * Date and time is in GMT+5:30\r\n            </Text>\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"6\">\r\n              Description\r\n            </Text>\r\n            <Input\r\n              w=\"full\"\r\n              type=\"text\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Describe about your event in brief\"\r\n            />\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"4\">\r\n              Content\r\n            </Text>\r\n            <Textarea\r\n              w=\"full\"\r\n              onChange={(e) => setContent(e.target.value)}\r\n              type=\"text\"\r\n              mt=\"1.5\"\r\n              py=\"3\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Write about your event\"\r\n            />\r\n            {!community ? (\r\n              <>\r\n                <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"4\">\r\n                  Community\r\n                </Text>\r\n                <Select\r\n                  color=\"white\"\r\n                  _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                  _focus={{ borderColor: \"brand.primary\" }}\r\n                  borderColor=\"whiteAlpha.400\"\r\n                  _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                  mt=\"2\"\r\n                  onChange={(e) => setCommunitySelected(e.target.value)}\r\n                >\r\n                  <option\r\n                    style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                    value={null}\r\n                  >\r\n                    None\r\n                  </option>\r\n                  {communities?.map((data, key) => (\r\n                    <option\r\n                      key={key}\r\n                      style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                      value={data.id}\r\n                    >\r\n                      {data.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Button\r\n              color=\"black\"\r\n              float=\"right\"\r\n              mt=\"6\"\r\n              type=\"submit\"\r\n              rounded=\"lg\"\r\n              _focus={{}}\r\n              _active={{}}\r\n              leftIcon={loading ? <Spinner /> : <CheckCircle size=\"20px\" />}\r\n            >\r\n              {loading ? <></> : <>Create Event</>}\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </Flex>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default NewEvent;\r\n","import { Table, Box, Thead, Tr, Th, Tbody, Td, Text } from \"@chakra-ui/react\";\r\n\r\nfunction AudienceList({ audience, communityId, placeholder }) {\r\n  return (\r\n    <Box border=\"1px\" rounded=\"xl\" mt=\"4\" borderColor=\"whiteAlpha.400\">\r\n      <Table variant=\"simple\" colorScheme=\"whiteAlpha\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th color=\"whiteAlpha.600\">Name</Th>\r\n            <Th\r\n              color=\"whiteAlpha.600\"\r\n              display={{ base: \"none\", md: \"table-cell\" }}\r\n            >\r\n              Email\r\n            </Th>\r\n            <Th color=\"whiteAlpha.600\">Events</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {audience?.length > 0 ? (\r\n            audience?.map((data, key) => (\r\n              <Tr key={key}>\r\n                <Td maxW={{ base: \"100px\", md: \"200px\" }}>{data.name}</Td>\r\n                <Td display={{ base: \"none\", md: \"table-cell\" }} maxW=\"200px\">\r\n                  {data.email}\r\n                </Td>\r\n                <Td>{data.events.length}</Td>\r\n              </Tr>\r\n            ))\r\n          ) : (\r\n            <Text py=\"2\" px=\"6\" color=\"whiteAlpha.600\">\r\n              {placeholder ? <>{placeholder}</> : <>No guests</>}\r\n            </Text>\r\n          )}\r\n        </Tbody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AudienceList;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Flex,\r\n  Avatar,\r\n  Box,\r\n  Text,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalCloseButton,\r\n  ModalFooter,\r\n  Button,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction HostCard({ id, admin, email }) {\r\n  const [user, setUser] = useState(undefined);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const removeHost = async (email) => {\r\n    try {\r\n      const { data } = await supabase\r\n        .from(\"events\")\r\n        .select(\"id, createdBy\")\r\n        .eq(\"id\", id)\r\n        .single();\r\n      const newCreatedBy = [];\r\n      data?.createdBy.forEach((data) => {\r\n        if (data !== email) {\r\n          newCreatedBy.push(data);\r\n        }\r\n      });\r\n      await supabase\r\n        .from(\"events\")\r\n        .upsert(\r\n          { id: data.id, createdBy: newCreatedBy },\r\n          { returning: \"minimal\" }\r\n        );\r\n\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const RemoveHostModal = () => {\r\n    return (\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Flex\r\n              transitionDuration=\"200ms\"\r\n              overflow=\"clip\"\r\n              p=\"2\"\r\n              alignItems=\"center\"\r\n              rounded=\"xl\"\r\n              w=\"full\"\r\n              experimental_spaceX=\"4\"\r\n              maxW={{ base: \"full\", md: \"280px\" }}\r\n            >\r\n              <Avatar\r\n                size=\"md\"\r\n                src={user?.avatar_url}\r\n                name={user?.username || email}\r\n              />\r\n              <Box>\r\n                <Text\r\n                  align=\"left\"\r\n                  color=\"white\"\r\n                  whiteSpace=\"nowrap\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"lg\"\r\n                >\r\n                  {user?.username}\r\n                </Text>\r\n                <Text\r\n                  align=\"left\"\r\n                  color=\"white\"\r\n                  whiteSpace=\"nowrap\"\r\n                  fontSize={user ? \"xs\" : \"sm\"}\r\n                >\r\n                  {email}\r\n                </Text>\r\n              </Box>\r\n            </Flex>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"whiteAlpha.300\"\r\n              mr=\"2\"\r\n              _hover={{}}\r\n              _active={{}}\r\n              onClick={onClose}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"red\"\r\n              _hover={{}}\r\n              _active={{}}\r\n              onClick={() => {\r\n                if (email === window.localStorage.getItem(\"email\")) {\r\n                  toast({\r\n                    title: \"Error\",\r\n                    position: \"bottom\",\r\n                    description: \"Cannot remove admin from host\",\r\n                    status: \"error\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                  });\r\n                } else {\r\n                  removeHost(email);\r\n                }\r\n              }}\r\n            >\r\n              Remove from host\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", email)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      onClick={() => {\r\n        if (admin === window.localStorage.getItem(\"email\")) {\r\n          onOpen();\r\n        }\r\n      }}\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      p=\"2\"\r\n      alignItems=\"center\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW={{ base: \"full\", md: \"280px\" }}\r\n    >\r\n      <RemoveHostModal />\r\n      <Avatar size=\"md\" src={user?.avatar_url} name={user?.username || email} />\r\n      <Box>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontWeight=\"semibold\"\r\n          fontSize=\"lg\"\r\n        >\r\n          {user?.username}\r\n        </Text>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontSize={user ? \"xs\" : \"sm\"}\r\n        >\r\n          {email}\r\n        </Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default HostCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  AspectRatio,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { Calendar, CheckCircle, MapPin } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nfunction UpdateEvent({\r\n  eventId,\r\n  eventName,\r\n  eventDescription,\r\n  eventImage,\r\n  eventPlatform,\r\n  eventLink,\r\n  eventDate,\r\n  eventContent,\r\n}) {\r\n  const Platforms = [\r\n    {\r\n      name: \"💻 Virtual\",\r\n      enum: \"Virtual\",\r\n      placeholder: \"Link to event\",\r\n    },\r\n    {\r\n      name: \"🌍 In Person\",\r\n      enum: \"InPerson\",\r\n      placeholder: \"Location to event\",\r\n    },\r\n  ];\r\n  const [active, setActive] = useState(\r\n    eventPlatform === \"Virtual\" ? Platforms[0] : Platforms[1]\r\n  );\r\n  const [link, setLink] = useState(eventLink);\r\n  const [image, setImage] = useState(eventImage);\r\n  const [name, setName] = useState(eventName);\r\n  const [date, setDate] = useState(eventDate);\r\n  const [description, setDescription] = useState(eventDescription);\r\n  const [content, setContent] = useState(eventContent);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const uploadImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setImage(res.data.url);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const updateEvent = async () => {\r\n    if (name.length > 3) {\r\n      try {\r\n        setLoading(true);\r\n        let updates = {};\r\n\r\n        updates = {\r\n          id: eventId,\r\n          name,\r\n          description,\r\n          content,\r\n          date,\r\n          link,\r\n          image,\r\n          platform: active.enum,\r\n        };\r\n\r\n        const { error } = await supabase.from(\"events\").upsert(updates, {\r\n          returning: \"minimal\",\r\n        });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Event updated successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Event name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const EventPlatform = () => {\r\n    return (\r\n      <Box>\r\n        <Flex\r\n          fontSize=\"xl\"\r\n          fontWeight=\"semibold\"\r\n          color=\"brand.primary\"\r\n          alignItems=\"center\"\r\n          experimental_spaceX=\"3\"\r\n          mt=\"8\"\r\n          mb=\"4\"\r\n        >\r\n          <MapPin /> <Text>Where will it happen? *</Text>\r\n        </Flex>\r\n        <Flex\r\n          p=\"1.5\"\r\n          bg=\"whiteAlpha.200\"\r\n          w=\"-webkit-fit-content\"\r\n          experimental_spaceX=\"3\"\r\n          rounded=\"lg\"\r\n        >\r\n          {Platforms.map((data, key) => (\r\n            <Box\r\n              onClick={() => {\r\n                setActive(data);\r\n                setLink(\"\");\r\n              }}\r\n              cursor=\"pointer\"\r\n              color={data.name === active.name ? \"white\" : \"whiteAlpha.800\"}\r\n              _hover={{ color: \"white\" }}\r\n              transitionDuration=\"200ms\"\r\n              key={key}\r\n              bg={data.name === active.name ? \"whiteAlpha.300\" : \"transparent\"}\r\n              px=\"4\"\r\n              py=\"1\"\r\n              rounded=\"base\"\r\n            >\r\n              {data.name}\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" mt=\"6\" direction=\"column\" color=\"white\">\r\n      <AspectRatio ratio={1920 / 1080} w=\"full\" shadow=\"xl\">\r\n        <Box>\r\n          <Image rounded=\"lg\" src={image} />\r\n          <Button\r\n            position=\"absolute\"\r\n            bottom=\"0\"\r\n            left=\"0\"\r\n            m=\"4\"\r\n            size=\"sm\"\r\n            bg=\"blackAlpha.600\"\r\n            border=\"1px\"\r\n            onClick={() => document.getElementById(\"file\").click()}\r\n            borderColor=\"transparent\"\r\n            _hover={{ borderColor: \"whiteAlpha.200\", bg: \"blackAlpha.800\" }}\r\n            _focus={{}}\r\n            _active={{ bg: \"blackAlpha.700\" }}\r\n          >\r\n            {uploading ? <Spinner /> : <>Change cover photo</>}\r\n          </Button>\r\n        </Box>\r\n      </AspectRatio>\r\n      <Input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        id=\"file\"\r\n        display=\"none\"\r\n        onChange={(e) => uploadImage(e.target.files[0])}\r\n      />\r\n      <Box w=\"full\" mt=\"4\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            updateEvent();\r\n          }}\r\n        >\r\n          <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n            Event Name *\r\n          </Text>\r\n          <Input\r\n            w=\"full\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            type=\"text\"\r\n            value={name}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            isRequired={true}\r\n            px=\"0\"\r\n            rounded=\"none\"\r\n            color=\"white\"\r\n            fontSize=\"xl\"\r\n            borderTop=\"none\"\r\n            borderRight=\"none\"\r\n            borderLeft=\"none\"\r\n            borderBottom=\"1px\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Designing Session\"\r\n          />\r\n          <EventPlatform />\r\n          <Input\r\n            w=\"full\"\r\n            type=\"text\"\r\n            mt=\"3\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            isRequired={true}\r\n            value={link}\r\n            onChange={(e) => setLink(e.target.value)}\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder={active.placeholder}\r\n          />\r\n          <Flex\r\n            fontSize=\"xl\"\r\n            fontWeight=\"semibold\"\r\n            color=\"brand.primary\"\r\n            alignItems=\"center\"\r\n            experimental_spaceX=\"3\"\r\n            mt=\"8\"\r\n          >\r\n            <Calendar /> <Text>When will it happen? *</Text>\r\n          </Flex>\r\n          <Flex experimental_spaceX=\"4\" mt=\"2\">\r\n            <Input\r\n              w=\"full\"\r\n              type=\"date\"\r\n              defaultValue={\r\n                eventDate.year + \"-\" + eventDate.month + \"-\" + eventDate.date\r\n              }\r\n              placeholder=\"Date\"\r\n              onChange={(e) => {\r\n                const dateString = e.target.value;\r\n                console.log(dateString);\r\n                const dateFormatted = dateString.split(\"-\");\r\n                setDate({\r\n                  ...date,\r\n                  date: dateFormatted[2],\r\n                  month: dateFormatted[1],\r\n                  year: dateFormatted[0],\r\n                });\r\n                console.log(date);\r\n              }}\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              isRequired={true}\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            />\r\n            <Input\r\n              w={{ sm: \"70%\", lg: \"40%\" }}\r\n              type=\"time\"\r\n              placeholder=\"Time\"\r\n              defaultValue={moment(eventDate.time, \"hh:mm A\").format(\"HH:mm\")}\r\n              onChange={(e) => {\r\n                setDate({\r\n                  ...date,\r\n                  time: moment(e.target.value, \"HH:mm\").format(\"hh:mm A\"),\r\n                });\r\n              }}\r\n              mt=\"1.5\"\r\n              isRequired={true}\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            />\r\n          </Flex>\r\n          <Text mt=\"1\" color=\"whiteAlpha.500\">\r\n            * Date and time is in GMT+5:30\r\n          </Text>\r\n          <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"6\">\r\n            Description\r\n          </Text>\r\n          <Input\r\n            value={description}\r\n            w=\"full\"\r\n            type=\"text\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Describe about your event in brief\"\r\n          />\r\n          <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"4\">\r\n            Content\r\n          </Text>\r\n          <Textarea\r\n            w=\"full\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            type=\"text\"\r\n            mt=\"1.5\"\r\n            py=\"3\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Write about your event\"\r\n          />\r\n\r\n          <Button\r\n            color=\"black\"\r\n            float=\"right\"\r\n            mt=\"6\"\r\n            type=\"submit\"\r\n            rounded=\"lg\"\r\n            _focus={{}}\r\n            _active={{}}\r\n            leftIcon={\r\n              loading ? <Spinner size=\"sm\" /> : <CheckCircle size=\"20px\" />\r\n            }\r\n          >\r\n            Update Event\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default UpdateEvent;\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Divider,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  useClipboard,\r\n  Tooltip,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalHeader,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n  Button,\r\n  useToast,\r\n  Checkbox,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { Check, Settings } from \"react-feather\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { Calendar, Clipboard, Plus, ArrowLeft } from \"react-feather\";\r\nimport AudienceList from \"../../components/Misc/AudienceList.component\";\r\nimport HostCard from \"../../components/Cards/HostCard.component\";\r\nimport { useHistory } from \"react-router\";\r\nimport UpdateEvent from \"../Update/UpdateEvent.page\";\r\nimport { formatDate } from \"../../Helpers/dateFormatter\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction ManageEvent(props) {\r\n  const id = props.match.params.id;\r\n  const [event, setEvent] = useState(undefined);\r\n  const [audience, setAudience] = useState(undefined);\r\n  const [createdBy, setCreatedBy] = useState([]);\r\n  const { hasCopied, onCopy } = useClipboard(\r\n    `${window.location.origin}/event/${id}`\r\n  );\r\n  const history = useHistory();\r\n  const toast = useToast();\r\n  const [isListed, setIsListed] = useState(false);\r\n  const [registrationOpen, setRegistrationOpen] = useState(false);\r\n  const [newChanges, setNewChanges] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useEffect(() => {\r\n    getEvent();\r\n    getAudience();\r\n  }, []);\r\n\r\n  const getAudience = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"audience\")\r\n        .select(\"name, email, events\")\r\n        .contains(\"events\", [id]);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setAudience(data);\r\n\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getEvent = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\r\n          \"id, name, image, link, description, content, date, community, audience, createdBy, admin, isListed, isOpen,platform\"\r\n        )\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setEvent(data);\r\n      setIsListed(data.isListed);\r\n      setRegistrationOpen(data.isOpen);\r\n      setCreatedBy(data.createdBy);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateEvent = async () => {\r\n    try {\r\n      setLoading(true);\r\n      let updates = {};\r\n      updates = {\r\n        id,\r\n        isOpen: registrationOpen,\r\n        isListed,\r\n      };\r\n      console.log(isListed, registrationOpen);\r\n      console.log(updates);\r\n\r\n      const { error } = await supabase.from(\"events\").upsert(updates, {\r\n        returning: \"minimal\",\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n      setNewChanges(false);\r\n    }\r\n  };\r\n\r\n  function validateEmail(email) {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  const AddHost = () => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const AddHostModal = () => {\r\n      return (\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n            <ModalHeader>Add host</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                _placeholder={{ color: \"whiteAlpha.500\" }}\r\n                placeholder=\"Email\"\r\n                _focus={{ borderColor: \"brand.primary\" }}\r\n              />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                bg=\"brand.primary\"\r\n                _hover={{}}\r\n                _active={{}}\r\n                onClick={async () => {\r\n                  if (validateEmail(document.getElementById(\"email\").value)) {\r\n                    createdBy.push(document.getElementById(\"email\").value);\r\n\r\n                    try {\r\n                      const { error } = await supabase\r\n                        .from(\"events\")\r\n                        .upsert(\r\n                          { id, createdBy: [...new Set(createdBy)] },\r\n                          { returning: \"minimal\" }\r\n                        );\r\n\r\n                      if (error) {\r\n                        throw error;\r\n                      }\r\n                    } catch (error) {\r\n                      console.log(error);\r\n                    }\r\n                    onClose();\r\n                    window.location.reload();\r\n                  } else {\r\n                    toast({\r\n                      title: \"Error\",\r\n                      position: \"bottom\",\r\n                      description: \"Enter a valid email address\",\r\n                      status: \"error\",\r\n                      duration: 5000,\r\n                      isClosable: true,\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Flex\r\n        border=\"2px\"\r\n        cursor=\"pointer\"\r\n        mr={{ md: \"4\" }}\r\n        mb=\"4\"\r\n        borderColor=\"transparent\"\r\n        transitionDuration=\"200ms\"\r\n        _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n        overflow=\"clip\"\r\n        bg=\"whiteAlpha.50\"\r\n        p=\"2\"\r\n        justify=\"center\"\r\n        borderStyle=\"dashed\"\r\n        alignItems=\"center\"\r\n        rounded=\"xl\"\r\n        w=\"full\"\r\n        onClick={onOpen}\r\n        minH=\"14\"\r\n        experimental_spaceX=\"4\"\r\n        maxW={{ base: \"full\", md: \"280px\" }}\r\n      >\r\n        <AddHostModal />\r\n        <Plus />\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  const UpdateEventModal = () => {\r\n    return (\r\n      <Modal size=\"3xl\" isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent bg=\"#1D2023\">\r\n          <ModalHeader color=\"white\">\r\n            Settings <ModalCloseButton color=\"white\" />\r\n          </ModalHeader>\r\n\r\n          <ModalBody px=\"8\" pb=\"8\">\r\n            <UpdateEvent\r\n              eventId={id}\r\n              eventName={event?.name}\r\n              eventContent={event?.content}\r\n              eventDate={event?.date}\r\n              eventDescription={event?.description}\r\n              eventPlatform={event?.platform}\r\n              eventImage={event?.image}\r\n              eventLink={event?.link}\r\n            />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const CopyInput = () => {\r\n    return (\r\n      <InputGroup>\r\n        <Input\r\n          cursor=\"pointer\"\r\n          transitionDuration=\"200ms\"\r\n          onClick={() => {\r\n            window.open(`${window.location.origin}/event/${id}`, \"_blank\");\r\n          }}\r\n          _hover={{ color: \"brand.primary\" }}\r\n          value={`${window.location.origin}/event/${id}`}\r\n          isReadOnly\r\n          rounded=\"lg\"\r\n          border=\"none\"\r\n          bg=\"whiteAlpha.200\"\r\n        />\r\n\r\n        <InputRightElement\r\n          onClick={() => onCopy()}\r\n          cursor=\"pointer\"\r\n          p=\"2\"\r\n          roundedRight=\"lg\"\r\n          transitionDuration=\"200ms\"\r\n          _hover={{ color: \"brand.primary\" }}\r\n        >\r\n          <Tooltip label=\"Copy to clipboard\">\r\n            {hasCopied ? <Check /> : <Clipboard size=\"20px\" />}\r\n          </Tooltip>\r\n        </InputRightElement>\r\n      </InputGroup>\r\n    );\r\n  };\r\n\r\n  const FeedbackFormLink = () => {\r\n    const { hasCopied, onCopy } = useClipboard(\r\n      `${window.location.origin}/feedback/${id}`\r\n    );\r\n\r\n    return (\r\n      <Box mb=\"6\">\r\n        <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n          <Text\r\n            casing=\"capitalize\"\r\n            fontSize=\"sm\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"2px\"\r\n            color=\"white\"\r\n          >\r\n            FEEDBACK FORM LINK\r\n          </Text>\r\n        </Flex>\r\n        <InputGroup mt=\"2\" maxW={{ md: \"300px\" }}>\r\n          <Input\r\n            cursor=\"pointer\"\r\n            transitionDuration=\"200ms\"\r\n            onClick={() => {\r\n              window.open(`${window.location.origin}/feedback/${id}`, \"_blank\");\r\n            }}\r\n            _hover={{ color: \"brand.primary\" }}\r\n            value={`${window.location.origin}/feedback/${id}`}\r\n            isReadOnly\r\n            rounded=\"lg\"\r\n            border=\"none\"\r\n            bg=\"whiteAlpha.200\"\r\n          />\r\n\r\n          <InputRightElement\r\n            onClick={() => onCopy()}\r\n            cursor=\"pointer\"\r\n            p=\"2\"\r\n            roundedRight=\"lg\"\r\n            transitionDuration=\"200ms\"\r\n            _hover={{ color: \"brand.primary\" }}\r\n          >\r\n            <Tooltip label=\"Copy to clipboard\">\r\n              {hasCopied ? <Check /> : <Clipboard size=\"20px\" />}\r\n            </Tooltip>\r\n          </InputRightElement>\r\n        </InputGroup>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate>\r\n      {event ? (\r\n        <Helmet>\r\n          <title>{event?.name} | Relm</title>\r\n        </Helmet>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {event ? (\r\n        <>\r\n          <Box>\r\n            <Flex justify=\"space-between\" alignItems=\"end\">\r\n              <Box>\r\n                <Flex experimental_spaceX=\"3\" alignItems=\"center\">\r\n                  <Box\r\n                    cursor=\"pointer\"\r\n                    p=\"2\"\r\n                    w=\"10\"\r\n                    h=\"10\"\r\n                    onClick={() => {\r\n                      history.goBack();\r\n                    }}\r\n                    rounded=\"full\"\r\n                    _hover={{ bg: \"whiteAlpha.200\" }}\r\n                  >\r\n                    <ArrowLeft />\r\n                  </Box>\r\n                  <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"bold\">\r\n                    {event?.name}\r\n                  </Text>\r\n                </Flex>\r\n                <Flex\r\n                  fontSize=\"xs\"\r\n                  color=\"brand.primary\"\r\n                  experimental_spaceX=\"1.5\"\r\n                  alignItems=\"center\"\r\n                  mt=\"1\"\r\n                >\r\n                  <Calendar size=\"14px\" />\r\n                  <Text>{formatDate(event?.date)}</Text>\r\n                </Flex>\r\n                {event?.description ? (\r\n                  <Text\r\n                    mt=\"1\"\r\n                    fontSize={{ base: \"xs\", md: \"sm\" }}\r\n                    fontWeight=\"thin\"\r\n                  >\r\n                    {event?.description}\r\n                  </Text>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <Flex direction=\"column\" alignItems=\"end\" experimental_spaceY=\"1\">\r\n                <Box\r\n                  _hover={{ bg: \"whiteAlpha.200\" }}\r\n                  rounded=\"full\"\r\n                  p=\"2\"\r\n                  cursor=\"pointer\"\r\n                  onClick={onOpen}\r\n                >\r\n                  <UpdateEventModal />\r\n                  <Settings size=\"20px\" />\r\n                </Box>\r\n                <Box display={{ base: \"none\", md: \"block\" }}>\r\n                  <Text fontSize=\"xs\" mb=\"1\" color=\"whiteAlpha.500\">\r\n                    Sharable invite link\r\n                  </Text>\r\n                  <CopyInput />\r\n                </Box>\r\n              </Flex>\r\n            </Flex>\r\n          </Box>\r\n          <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n          <Box display={{ base: \"block\", md: \"none\" }}>\r\n            <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n              <Text\r\n                casing=\"capitalize\"\r\n                fontSize=\"sm\"\r\n                fontWeight=\"semibold\"\r\n                letterSpacing=\"2px\"\r\n                color=\"white\"\r\n              >\r\n                INVITE LINK\r\n              </Text>\r\n            </Flex>\r\n            <Box mt=\"2\">\r\n              <CopyInput />\r\n            </Box>\r\n          </Box>\r\n          <Flex justify=\"space-between\" mt=\"8\" alignItems=\"center\">\r\n            <Text\r\n              casing=\"capitalize\"\r\n              fontSize=\"sm\"\r\n              fontWeight=\"semibold\"\r\n              letterSpacing=\"2px\"\r\n              color=\"white\"\r\n            >\r\n              GUESTS\r\n            </Text>\r\n          </Flex>\r\n          <AudienceList audience={audience} />\r\n          <Flex justify=\"space-between\" mt=\"8\" alignItems=\"center\">\r\n            <Text\r\n              casing=\"capitalize\"\r\n              fontSize=\"sm\"\r\n              fontWeight=\"semibold\"\r\n              letterSpacing=\"2px\"\r\n              color=\"white\"\r\n            >\r\n              HOST & MANAGERS\r\n            </Text>\r\n          </Flex>\r\n          <Flex mt=\"4\" wrap=\"wrap\">\r\n            {event?.createdBy.map((data, key) => (\r\n              <HostCard id={id} admin={event?.admin} email={data} key={key} />\r\n            ))}\r\n            {window.localStorage.getItem(\"email\") === event?.admin ? (\r\n              <AddHost />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Flex>\r\n          <FeedbackFormLink />\r\n          <Flex direction=\"column\" mt=\"4\">\r\n            <Checkbox\r\n              w=\"-webkit-fit-content\"\r\n              onChange={(e) => {\r\n                setIsListed(e.target.checked);\r\n                setNewChanges(true);\r\n              }}\r\n              isChecked={isListed}\r\n            >\r\n              Listed publicly\r\n            </Checkbox>\r\n            <Checkbox\r\n              w=\"-webkit-fit-content\"\r\n              onChange={(e) => {\r\n                setRegistrationOpen(e.target.checked);\r\n                setNewChanges(true);\r\n              }}\r\n              isChecked={registrationOpen}\r\n            >\r\n              Registrations open\r\n            </Checkbox>\r\n            <Box>\r\n              <Button\r\n                display={newChanges ? \"block\" : \"none\"}\r\n                float=\"right\"\r\n                size=\"sm\"\r\n                mt=\"2\"\r\n                minW=\"28\"\r\n                onClick={() => {\r\n                  updateEvent();\r\n                }}\r\n                colorScheme=\"whiteAlpha\"\r\n              >\r\n                {loading ? <Spinner size=\"sm\" /> : <> Save changes</>}\r\n              </Button>\r\n            </Box>\r\n          </Flex>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default ManageEvent;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Divider,\r\n  Input,\r\n  InputGroup,\r\n  InputLeftElement,\r\n} from \"@chakra-ui/react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport AudienceList from \"../../components/Misc/AudienceList.component\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Search } from \"react-feather\";\r\n\r\nfunction Audience(props) {\r\n  const id = props.match.params.id;\r\n  const { user } = User();\r\n  const [audience, setAudience] = useState(undefined);\r\n  const [searchedAudience, setSearchedAudience] = useState(undefined);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getAudience();\r\n  }, []);\r\n\r\n  const getAudience = async () => {\r\n    try {\r\n      if (id) {\r\n        const { data, error } = await supabase\r\n          .from(\"audience\")\r\n          .select(\"name, email, events\")\r\n          .contains(\"communities\", [id])\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n        setAudience(data);\r\n      } else {\r\n        const { data, error } = await supabase\r\n          .from(\"audience\")\r\n          .select(\"name, email, events\")\r\n          .eq(\"createdBy\", localStorage.getItem(\"email\"))\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        setAudience(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Helmet>\r\n        <title>Audience | Relm</title>\r\n      </Helmet>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n          Audience\r\n        </Text>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n        <Box mt=\"6\">\r\n          <InputGroup>\r\n            <InputLeftElement color=\"brand.primary\">\r\n              <Search size=\"18px\" />\r\n            </InputLeftElement>\r\n            <Input\r\n              onChange={(e) => {\r\n                const query = e.target.value;\r\n                setQuery(query);\r\n                const queriedData = [];\r\n                audience?.forEach((data) => {\r\n                  if (\r\n                    data.name.toLowerCase().startsWith(query.toLowerCase()) ||\r\n                    data.email.toLowerCase().startsWith(query.toLowerCase())\r\n                  ) {\r\n                    queriedData.push(data);\r\n                  }\r\n                });\r\n                setSearchedAudience(queriedData);\r\n              }}\r\n              py=\"5\"\r\n              rounded=\"xl\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Search\"\r\n            />\r\n          </InputGroup>\r\n          <AudienceList\r\n            placeholder=\"No audience\"\r\n            audience={query.length > 0 ? searchedAudience : audience}\r\n            communityId={id}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Audience;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Flex, Avatar, Box, Text } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction EventHostCard({ email }) {\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    console.log(\"again\");\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", email)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mb=\"2\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      p=\"2\"\r\n      alignItems=\"center\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW={{ base: \"full\", md: \"280px\" }}\r\n    >\r\n      <Avatar size=\"sm\" src={user?.avatar_url} name={user?.username || email} />\r\n      <Box>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontWeight={user?.username ? \"semibold\" : \"normal\"}\r\n          fontSize=\"sm\"\r\n        >\r\n          {user?.username ? user?.username : email}\r\n        </Text>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontSize=\"xx-small\"\r\n        >\r\n          Host\r\n        </Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default EventHostCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Navigation from \"../../components/Navigation/Navigation.component\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  AspectRatio,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  Divider,\r\n  Link,\r\n  Avatar,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { formatDate } from \"../../Helpers/dateFormatter\";\r\nimport {\r\n  ArrowUpRight,\r\n  Calendar,\r\n  CheckCircle,\r\n  MapPin,\r\n  XCircle,\r\n} from \"react-feather\";\r\nimport Showdown from \"showdown\";\r\nimport \"./event.css\";\r\nimport EventHostCard from \"./EventHostCard.component\";\r\nimport Footer from \"../../components/Footer/Footer.component\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\n\r\nfunction Event(props) {\r\n  const id = props.match.params.id;\r\n  const [event, setEvent] = useState(undefined);\r\n  const converter = new Showdown.Converter();\r\n  const [user, setUser] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getEvent();\r\n    if (window.localStorage.getItem(\"email\")) {\r\n      getUser();\r\n    }\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", window.localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n      setName(data.username);\r\n      setEmail(data.email);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getEvent = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\r\n          \"name, description, date, community, image, content, platform, link, isListed, isOpen, createdBy, admin, audience\"\r\n        )\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setEvent(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const registerUser = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await supabase\r\n        .from(\"audience\")\r\n        .select(\"events, communities\")\r\n        .eq(\"email\", email)\r\n        .single();\r\n\r\n      let events = [];\r\n      let communities = [];\r\n      if (data) {\r\n        data.events.push(id);\r\n        data.communities.push(event?.community);\r\n        events = data.events;\r\n        communities = data.communities;\r\n      } else {\r\n        events = [id];\r\n        communities = [event?.community];\r\n      }\r\n      const updates = {\r\n        email: email,\r\n        name: name,\r\n        events: [...new Set(events)],\r\n        communities: [...new Set(communities)],\r\n        createdBy: event?.admin,\r\n      };\r\n\r\n      await supabase.from(\"audience\").upsert(updates, { returning: \"minimal\" });\r\n\r\n      const AudienceEventData = await supabase\r\n        .from(\"audience\")\r\n        .select(\"name, email, events\")\r\n        .contains(\"events\", [id]);\r\n\r\n      await supabase\r\n        .from(\"events\")\r\n        .upsert(\r\n          { id, audience: AudienceEventData.data.length },\r\n          { returning: \"minimal\" }\r\n        );\r\n      if (event?.community) {\r\n        const AudienceCommunityData = await supabase\r\n          .from(\"audience\")\r\n          .select(\"name, email, events\")\r\n          .contains(\"communities\", [event?.community]);\r\n\r\n        await supabase.from(\"communities\").upsert(\r\n          {\r\n            id: event?.community,\r\n            audience: AudienceCommunityData.data.length,\r\n          },\r\n          { returning: \"minimal\" }\r\n        );\r\n      }\r\n      toast({\r\n        title: \"Success\",\r\n        position: \"bottom\",\r\n        description: \"You are successfully registered!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const ProfileDisplay = () => {\r\n    return (\r\n      <Flex\r\n        cursor=\"default\"\r\n        borderColor=\"transparent\"\r\n        transitionDuration=\"200ms\"\r\n        overflow=\"clip\"\r\n        mb=\"4\"\r\n        alignItems=\"center\"\r\n        rounded=\"xl\"\r\n        w=\"full\"\r\n        experimental_spaceX=\"4\"\r\n      >\r\n        <Avatar size=\"md\" src={user?.avatar_url} name={user?.username} />\r\n        <Box>\r\n          <Text\r\n            align=\"left\"\r\n            color=\"white\"\r\n            whiteSpace=\"nowrap\"\r\n            fontWeight=\"semibold\"\r\n            fontSize=\"lg\"\r\n          >\r\n            {user?.username}\r\n          </Text>\r\n          <Text align=\"left\" color=\"white\" whiteSpace=\"nowrap\" fontSize=\"xs\">\r\n            {user?.email}\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {event ? (\r\n        <>\r\n          {event?.isListed ? (\r\n            <Flex\r\n              bg=\"brand.secondary\"\r\n              alignItems=\"center\"\r\n              w=\"full\"\r\n              direction=\"column\"\r\n            >\r\n              <Box\r\n                minH=\"100vh\"\r\n                py=\"6\"\r\n                px={{ base: \"6\", md: \"12\" }}\r\n                maxW=\"1100px\"\r\n                w=\"full\"\r\n                color=\"white\"\r\n              >\r\n                <Box px={{ lg: \"20\" }}>\r\n                  <Navigation communityId={event?.community} />\r\n                </Box>\r\n                <Box mx=\"auto\" mt=\"6\">\r\n                  <AspectRatio ratio={1920 / 1080}>\r\n                    <Image src={event?.image} rounded=\"xl\" />\r\n                  </AspectRatio>\r\n                  <Box>\r\n                    <Text fontWeight=\"bold\" fontSize=\"3xl\" mt=\"4\">\r\n                      {event?.name}\r\n                    </Text>\r\n                    <Flex\r\n                      fontSize=\"sm\"\r\n                      color=\"brand.primary\"\r\n                      experimental_spaceX=\"1.5\"\r\n                      alignItems=\"center\"\r\n                      mt=\"1\"\r\n                    >\r\n                      <Calendar size=\"18px\" />\r\n                      <Text>{formatDate(event?.date)}</Text>\r\n                    </Flex>\r\n                    <Flex direction={{ base: \"column\", md: \"row\" }}>\r\n                      <Box w=\"full\">\r\n                        <Box mt=\"10\">\r\n                          <form\r\n                            onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              if (event?.isOpen) {\r\n                                registerUser();\r\n                              } else {\r\n                                toast({\r\n                                  title: \"Error\",\r\n                                  position: \"bottom\",\r\n                                  description:\r\n                                    \"Event registrations are already closed\",\r\n                                  status: \"Error\",\r\n                                  duration: 5000,\r\n                                  isClosable: true,\r\n                                });\r\n                              }\r\n                            }}\r\n                          >\r\n                            <Text fontSize=\"xl\" mb=\"3\" fontWeight=\"medium\">\r\n                              Register for the event\r\n                            </Text>\r\n                            <Flex\r\n                              bg=\"whiteAlpha.100\"\r\n                              p=\"5\"\r\n                              rounded=\"xl\"\r\n                              direction=\"column\"\r\n                              alignItems=\"end\"\r\n                            >\r\n                              {window.localStorage.getItem(\"email\") ? (\r\n                                <ProfileDisplay />\r\n                              ) : (\r\n                                <>\r\n                                  <Box w=\"full\">\r\n                                    <Input\r\n                                      required\r\n                                      value={name}\r\n                                      onChange={(e) => setName(e.target.value)}\r\n                                      w=\"full\"\r\n                                      _focus={{\r\n                                        border: \"2px\",\r\n                                        borderColor: \"brand.primary\",\r\n                                      }}\r\n                                      bg=\"brand.secondary\"\r\n                                      border=\"2px\"\r\n                                      borderColor=\"transparent\"\r\n                                      rounded=\"lg\"\r\n                                      mb=\"2\"\r\n                                      py=\"5\"\r\n                                      placeholder=\"Your name\"\r\n                                      _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                                    />\r\n                                    <Input\r\n                                      w=\"full\"\r\n                                      type=\"email\"\r\n                                      value={email}\r\n                                      onChange={(e) => setEmail(e.target.value)}\r\n                                      id=\"email\"\r\n                                      required\r\n                                      _focus={{\r\n                                        border: \"2px\",\r\n                                        borderColor: \"brand.primary\",\r\n                                      }}\r\n                                      bg=\"brand.secondary\"\r\n                                      border=\"2px\"\r\n                                      py=\"5\"\r\n                                      borderColor=\"transparent\"\r\n                                      rounded=\"lg\"\r\n                                      placeholder=\"Your email\"\r\n                                      _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                                    />\r\n                                  </Box>\r\n                                </>\r\n                              )}\r\n                              <Button\r\n                                mt=\"4\"\r\n                                px=\"6\"\r\n                                type={event?.isOpen ? \"submit\" : \"button\"}\r\n                                w=\"-webkit-fit-content\"\r\n                                cursor={\r\n                                  event?.isOpen ? \"pointer\" : \"not-allowed\"\r\n                                }\r\n                                _hover={{}}\r\n                                _active={{}}\r\n                                _focus={{}}\r\n                                leftIcon={\r\n                                  event?.isOpen ? (\r\n                                    loading ? (\r\n                                      <Spinner size=\"sm\" />\r\n                                    ) : (\r\n                                      <CheckCircle size=\"18px\" />\r\n                                    )\r\n                                  ) : (\r\n                                    <XCircle size=\"18px\" />\r\n                                  )\r\n                                }\r\n                                bg=\"brand.primary\"\r\n                                fontSize=\"sm\"\r\n                                rounded=\"lg\"\r\n                              >\r\n                                {event?.isOpen ? (\r\n                                  <>Register</>\r\n                                ) : (\r\n                                  <>Registrations are closed</>\r\n                                )}\r\n                              </Button>\r\n                            </Flex>\r\n                          </form>\r\n                        </Box>\r\n                        {event?.description || event?.content ? (\r\n                          <Box mt=\"8\">\r\n                            <Text fontSize=\"xl\" mb=\"4\" fontWeight=\"medium\">\r\n                              Event Details :\r\n                            </Text>\r\n                            {event?.description ? (\r\n                              <Text fontSize=\"lg\" fontWeight=\"semibold\">\r\n                                {event?.description}\r\n                              </Text>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                            {event?.content ? (\r\n                              <Text\r\n                                id=\"content\"\r\n                                fontSize=\"base\"\r\n                                mt=\"2\"\r\n                                fontWeight=\"thin\"\r\n                                dangerouslySetInnerHTML={{\r\n                                  __html: converter.makeHtml(event?.content),\r\n                                }}\r\n                              ></Text>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </Box>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </Box>\r\n                      <Box\r\n                        minW={{ md: \"240px\", lg: \"300px\" }}\r\n                        maxW={{ md: \"240px\", lg: \"350px\" }}\r\n                        ml={{ md: \"10\" }}\r\n                      >\r\n                        <Box>\r\n                          {!isUpcoming(event?.date) ? (\r\n                            <Box>\r\n                              <Text opacity=\"0.5\">Event has end</Text>\r\n                              <Button\r\n                                _hover={{}}\r\n                                _active={{ bg: \"pink.600\" }}\r\n                                _focus={{}}\r\n                                bg=\"brand.primary\"\r\n                                color=\"white\"\r\n                                px=\"6\"\r\n                                mt=\"2\"\r\n                                fontSize=\"sm\"\r\n                                onClick={() =>\r\n                                  (window.location.href = `${window.location.origin}/feedback/${id}`)\r\n                                }\r\n                                mb={{ base: \"4\", md: \"0\" }}\r\n                                w=\"full\"\r\n                              >\r\n                                Send Feedback\r\n                              </Button>\r\n                              <Divider my=\"6\" color=\"white\" opacity=\"0.2\" />\r\n                            </Box>\r\n                          ) : (\r\n                            <></>\r\n                          )}\r\n                          <Box mb=\"2\">\r\n                            <Text fontSize=\"xl\" fontWeight=\"medium\">\r\n                              Join Details :\r\n                            </Text>\r\n                            <Flex\r\n                              alignItems=\"center\"\r\n                              color=\"brand.primary\"\r\n                              cursor=\"pointer\"\r\n                              transitionDelay=\"200ms\"\r\n                              my=\"4\"\r\n                            >\r\n                              {event?.platform === \"Virtual\" ? (\r\n                                <>\r\n                                  <Link\r\n                                    isExternal\r\n                                    href={event?.link}\r\n                                    _focus={{}}\r\n                                    fontSize=\"lg\"\r\n                                    mr=\"1\"\r\n                                    isTruncated\r\n                                  >\r\n                                    {event?.link}\r\n                                  </Link>\r\n\r\n                                  <Box\r\n                                    minW=\"20px\"\r\n                                    onClick={() => {\r\n                                      window.open(event?.link, \"_blank\");\r\n                                    }}\r\n                                  >\r\n                                    <ArrowUpRight />\r\n                                  </Box>\r\n                                </>\r\n                              ) : (\r\n                                <Flex\r\n                                  alignItems=\"start\"\r\n                                  w=\"-webkit-fit-content\"\r\n                                >\r\n                                  <Box minW=\"20px\">\r\n                                    <MapPin size=\"18px\" />\r\n                                  </Box>\r\n                                  <Text\r\n                                    fontSize=\"lg\"\r\n                                    ml=\"2\"\r\n                                    mt=\"-1\"\r\n                                    wordBreak=\"break-all\"\r\n                                  >\r\n                                    {event?.link}\r\n                                  </Text>\r\n                                </Flex>\r\n                              )}\r\n                            </Flex>\r\n                          </Box>\r\n                          <Divider color=\"white\" opacity=\"0.2\" />\r\n                          <Box mt=\"6\">\r\n                            {event?.createdBy.map((data, key) => (\r\n                              <EventHostCard key={key} email={data} />\r\n                            ))}\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                    </Flex>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box w=\"full\" mt=\"10\">\r\n                <Divider opacity=\"0.1\" />\r\n                <Footer />\r\n              </Box>\r\n            </Flex>\r\n          ) : (\r\n            <Flex\r\n              minH=\"100vh\"\r\n              color=\"white\"\r\n              bg=\"brand.secondary\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              lol 404\r\n            </Flex>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Navigation from \"../../components/Navigation/Navigation.component\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Input,\r\n  Textarea,\r\n  Avatar,\r\n  Divider,\r\n  Button,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport Footer from \"../../components/Footer/Footer.component\";\r\nimport { CheckCircle, Send } from \"react-feather\";\r\n\r\nfunction Feedback(props) {\r\n  const id = props.match.params.id;\r\n  const [event, setEvent] = useState(undefined);\r\n  const [community, setCommunity] = useState(undefined);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [isDone, setIsDone] = useState(false);\r\n  const [rating, setRating] = useState(\"🤩\");\r\n  const Ratings = [\"🤩\", \"🙂\", \"😐\", \"😔\", \"😡\"];\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getEvent();\r\n    if (event?.community) {\r\n      getCommunity(event?.community);\r\n    }\r\n    if (window.localStorage.getItem(\"email\")) {\r\n      getUser();\r\n    }\r\n  }, [event?.community]);\r\n\r\n  const createFeedback = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const updates = {\r\n        name,\r\n        email,\r\n        content,\r\n        rating,\r\n        event: event?.id,\r\n        community: community?.id,\r\n        createdBy: event?.admin,\r\n      };\r\n\r\n      const { error } = await supabase\r\n        .from(\"insights\")\r\n        .upsert(updates, { returning: \"minimal\" });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      setIsDone(true);\r\n      if (!user) {\r\n        setName(\"\");\r\n        setEmail(\"\");\r\n      }\r\n      setContent(\"\");\r\n      setRating(\"🤩\");\r\n      toast({\r\n        title: \"Success\",\r\n        position: \"bottom\",\r\n        description: \"We are happy to get your feedback 😄\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", window.localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n      setName(data.username);\r\n      setEmail(data.email);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async (communityId) => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo\")\r\n        .eq(\"id\", communityId)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getEvent = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\r\n          \"id, name, description, date, community, image, content, platform, link, isListed, isOpen, createdBy, admin, audience\"\r\n        )\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setEvent(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {event ? (\r\n        <>\r\n          {event?.isListed ? (\r\n            <Flex\r\n              bg=\"brand.secondary\"\r\n              alignItems=\"center\"\r\n              w=\"full\"\r\n              direction=\"column\"\r\n            >\r\n              <Box\r\n                minH=\"100vh\"\r\n                py=\"6\"\r\n                px={{ base: \"6\", md: \"12\" }}\r\n                maxW=\"1100px\"\r\n                w=\"full\"\r\n                color=\"white\"\r\n              >\r\n                <Box>\r\n                  <Navigation communityId={event?.community} />\r\n                </Box>\r\n                <Box mt=\"20\">\r\n                  <Text fontSize=\"2xl\" mb=\"3\" fontWeight=\"bold\">\r\n                    {community ? <>{community?.name}</> : <>We</>} would love\r\n                    your feedback\r\n                  </Text>\r\n                  <form\r\n                    onSubmit={(e) => {\r\n                      e.preventDefault();\r\n                      createFeedback();\r\n                    }}\r\n                  >\r\n                    <Flex\r\n                      bg=\"whiteAlpha.100\"\r\n                      p=\"5\"\r\n                      rounded=\"xl\"\r\n                      direction=\"column\"\r\n                    >\r\n                      {user ? (\r\n                        <Flex\r\n                          cursor=\"default\"\r\n                          borderColor=\"transparent\"\r\n                          transitionDuration=\"200ms\"\r\n                          overflow=\"clip\"\r\n                          mb=\"2\"\r\n                          alignItems=\"center\"\r\n                          rounded=\"xl\"\r\n                          w=\"full\"\r\n                          experimental_spaceX=\"4\"\r\n                        >\r\n                          <Avatar\r\n                            size=\"md\"\r\n                            src={user?.avatar_url}\r\n                            name={user?.username}\r\n                          />\r\n                          <Box>\r\n                            <Text\r\n                              align=\"left\"\r\n                              color=\"white\"\r\n                              whiteSpace=\"nowrap\"\r\n                              fontWeight=\"semibold\"\r\n                              fontSize=\"lg\"\r\n                            >\r\n                              {user?.username}\r\n                            </Text>\r\n                            <Text\r\n                              align=\"left\"\r\n                              color=\"white\"\r\n                              whiteSpace=\"nowrap\"\r\n                              fontSize=\"xs\"\r\n                            >\r\n                              {user?.email}\r\n                            </Text>\r\n                          </Box>\r\n                        </Flex>\r\n                      ) : (\r\n                        <Flex\r\n                          experimental_spaceX={{ base: \"0\", md: \"5\" }}\r\n                          experimental_spaceY={{ base: \"3\", md: \"0\" }}\r\n                          direction={{ base: \"column\", md: \"row\" }}\r\n                        >\r\n                          <Input\r\n                            required\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            w=\"full\"\r\n                            _focus={{\r\n                              border: \"2px\",\r\n                              borderColor: \"brand.primary\",\r\n                            }}\r\n                            bg=\"brand.secondary\"\r\n                            border=\"2px\"\r\n                            borderColor=\"transparent\"\r\n                            rounded=\"lg\"\r\n                            py=\"5\"\r\n                            placeholder=\"Your name\"\r\n                            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                          />\r\n                          <Input\r\n                            required\r\n                            value={email}\r\n                            type=\"email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            w=\"full\"\r\n                            _focus={{\r\n                              border: \"2px\",\r\n                              borderColor: \"brand.primary\",\r\n                            }}\r\n                            bg=\"brand.secondary\"\r\n                            border=\"2px\"\r\n                            borderColor=\"transparent\"\r\n                            rounded=\"lg\"\r\n                            py=\"5\"\r\n                            placeholder=\"Your email\"\r\n                            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                          />\r\n                        </Flex>\r\n                      )}\r\n                      <Textarea\r\n                        required\r\n                        value={content}\r\n                        type=\"email\"\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                        w=\"full\"\r\n                        _focus={{\r\n                          border: \"2px\",\r\n                          borderColor: \"brand.primary\",\r\n                        }}\r\n                        bg=\"brand.secondary\"\r\n                        border=\"2px\"\r\n                        borderColor=\"transparent\"\r\n                        rounded=\"lg\"\r\n                        mt=\"4\"\r\n                        minH=\"200px\"\r\n                        py=\"5\"\r\n                        placeholder=\"Your message to us\"\r\n                        _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                      />\r\n                      <Flex\r\n                        fontSize={{ base: \"2xl\", md: \"3xl\" }}\r\n                        experimental_spaceX={{ base: \"2\", md: \"3\" }}\r\n                        mt=\"4\"\r\n                      >\r\n                        {Ratings.map((data, key) => (\r\n                          <Flex\r\n                            onClick={() => setRating(data)}\r\n                            cursor=\"pointer\"\r\n                            _hover={{ transform: \"scale(1.1)\", filter: \"none\" }}\r\n                            transitionDuration=\"100ms\"\r\n                            justify=\"center\"\r\n                            alignItems=\"center\"\r\n                            p=\"2\"\r\n                            rounded=\"full\"\r\n                            w={{ base: \"10\", md: \"14\" }}\r\n                            h={{ base: \"10\", md: \"14\" }}\r\n                            bg={rating === data ? \"whiteAlpha.200\" : \"\"}\r\n                            filter={rating === data ? \"none\" : \"grayscale(80%)\"}\r\n                            key={key}\r\n                          >\r\n                            {data}\r\n                          </Flex>\r\n                        ))}\r\n                      </Flex>\r\n\r\n                      <Flex justify=\"end\">\r\n                        <Button\r\n                          type=\"submit\"\r\n                          mt=\"4\"\r\n                          bg=\"brand.primary\"\r\n                          fontSize=\"sm\"\r\n                          rounded=\"lg\"\r\n                          _hover={{}}\r\n                          _active={{}}\r\n                          _focus={{}}\r\n                          rightIcon={\r\n                            loading ? (\r\n                              <Spinner size=\"sm\" />\r\n                            ) : isDone ? (\r\n                              <CheckCircle size=\"18px\" />\r\n                            ) : (\r\n                              <Send size=\"18px\" />\r\n                            )\r\n                          }\r\n                          w=\"-webkit-fit-content\"\r\n                        >\r\n                          {isDone ? <>Feedback sent</> : <>Send</>}\r\n                        </Button>\r\n                      </Flex>\r\n                    </Flex>\r\n                  </form>\r\n                </Box>\r\n              </Box>\r\n              <Box w=\"full\" mt=\"10\">\r\n                <Divider opacity=\"0.1\" />\r\n                <Footer />\r\n              </Box>\r\n            </Flex>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Feedback;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Flex, Text } from \"@chakra-ui/react\";\r\nimport \"./InsightCard.styles.css\";\r\nimport Showdown from \"showdown\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction InsightCard({ name, email, content, rating, event }) {\r\n  const converter = new Showdown.Converter();\r\n  const [eventData, setEvent] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getEvent();\r\n  }, []);\r\n\r\n  const getEvent = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\"name\")\r\n        .eq(\"id\", event)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      setEvent(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      gridRow=\"1/-1\"\r\n      gridColumn=\"1\"\r\n      direction=\"column\"\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      h=\"-webkit-fit-content\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      py=\"4\"\r\n      px=\"6\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n    >\r\n      <Text\r\n        align=\"left\"\r\n        color=\"white\"\r\n        whiteSpace=\"nowrap\"\r\n        fontWeight=\"semibold\"\r\n        fontSize=\"lg\"\r\n      >\r\n        {name}\r\n      </Text>\r\n      <Text align=\"left\" color=\"white\" whiteSpace=\"nowrap\" fontSize=\"xs\">\r\n        {email}\r\n      </Text>\r\n      <Text\r\n        id=\"content\"\r\n        fontSize=\"base\"\r\n        mt=\"2\"\r\n        fontWeight=\"thin\"\r\n        dangerouslySetInnerHTML={{\r\n          __html: converter.makeHtml(content),\r\n        }}\r\n      ></Text>\r\n      <Text fontSize=\"2xl\" mt=\"-2\">\r\n        {rating}\r\n      </Text>\r\n      <Text\r\n        align=\"left\"\r\n        color=\"white\"\r\n        mt=\"2\"\r\n        whiteSpace=\"nowrap\"\r\n        fontWeight=\"semibold\"\r\n        fontSize=\"sm\"\r\n      >\r\n        {eventData?.name}\r\n      </Text>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default InsightCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { Box, Text, Divider, Flex } from \"@chakra-ui/react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport InsightCard from \"../../components/Cards/InsightCard.component\";\r\nimport \"./insights.styles.css\";\r\n\r\nfunction Insights(props) {\r\n  const id = props.match.params.id;\r\n  const { user } = User();\r\n  const [insights, setInsights] = useState(undefined);\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getInsights();\r\n  }, []);\r\n\r\n  const getInsights = async () => {\r\n    try {\r\n      if (id) {\r\n        const { data, error } = await supabase\r\n          .from(\"insights\")\r\n          .select(\"name, email, content, rating, event\")\r\n          .eq(\"community\", id)\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n        console.log(data);\r\n        setInsights(data);\r\n      } else {\r\n        const { data, error } = await supabase\r\n          .from(\"insights\")\r\n          .select(\"name, email, content, rating, event\")\r\n          .eq(\"createdBy\", localStorage.getItem(\"email\"))\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        setInsights(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Helmet>\r\n        <title>Insights | Relm</title>\r\n      </Helmet>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n          Insights\r\n        </Text>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n      </Box>\r\n      {insights ? (\r\n        insights?.length > 0 ? (\r\n          <Box id=\"insight-box\" mt=\"6\">\r\n            {insights.map((data, key) => (\r\n              <Box\r\n                display=\"grid\"\r\n                style={{ breakInside: \"avoid\" }}\r\n                gridTemplateRows=\"1fr auto\"\r\n              >\r\n                <InsightCard key={key} {...data} />\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        ) : (\r\n          <Flex\r\n            color=\"whiteAlpha.600\"\r\n            my=\"10\"\r\n            justify=\"center\"\r\n            textAlign=\"center\"\r\n          >\r\n            🐝 No insights received\r\n          </Flex>\r\n        )\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Insights;\r\n","import \"./App.css\";\nimport LandingPage from \"./pages/Landing.page\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SignIn from \"./pages/SignIn.page\";\nimport Auth from \"./pages/Auth.page\";\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"./Helpers/supabase\";\nimport Home from \"./pages/Dashboard/Home.page\";\nimport NewCommunity from \"./pages/New/NewCommunity.page\";\nimport ManageCommunity from \"./pages/Manage/ManageCommunity.page\";\nimport Events from \"./pages/Dashboard/Events.page\";\nimport NewEvent from \"./pages/New/NewEvent.page\";\nimport ManageEvent from \"./pages/Manage/ManageEvent.page\";\nimport Audience from \"./pages/Dashboard/Audience.page\";\nimport Event from \"./pages/Event\";\nimport Feedback from \"./pages/Insights\";\nimport Insights from \"./pages/Dashboard/Insights.page\";\n\nfunction App() {\n  const [session, setSession] = useState(undefined);\n\n  const auth = async () => {\n    setSession(supabase.auth.session());\n    await supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  };\n\n  useEffect(() => {\n    auth();\n  }, []);\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={\n          !session\n            ? () => <LandingPage />\n            : localStorage.getItem(\"email\")\n            ? () => {\n                window.location.href = \"/home\";\n                return <Home />;\n              }\n            : () => <Auth session={session} />\n        }\n      />\n      <Route\n        exact\n        path=\"/signin\"\n        render={\n          localStorage.getItem(\"email\")\n            ? () => {\n                window.location.href = \"/home\";\n                return <Home />;\n              }\n            : () => {\n                return <SignIn />;\n              }\n        }\n      />\n      <Route exact path=\"/event/:id\" component={Event} />\n      <Route exact path=\"/feedback/:id\" component={Feedback} />\n      <Route exact path=\"/auth\" render={() => <Auth session={session} />} />\n      {localStorage.getItem(\"email\") ? (\n        <>\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/new/community\" component={NewCommunity} />\n          <Route\n            exact\n            path=\"/manage/community/:id\"\n            component={ManageCommunity}\n          />\n          <Route exact path=\"/manage/event/:id\" component={ManageEvent} />\n          <Route exact path=\"/events\" component={Events} />\n          <Route exact path=\"/new/event\" component={NewEvent} />\n          <Route\n            exact\n            path=\"/manage/community/:id/new/event\"\n            component={NewEvent}\n          />\n          <Route exact path=\"/manage/community/:id/events\" component={Events} />\n          <Route exact path=\"/audience\" component={Audience} />\n          <Route\n            exact\n            path=\"/manage/community/:id/audience\"\n            component={Audience}\n          />\n          <Route exact path=\"/insights\" component={Insights} />\n          <Route\n            exact\n            path=\"/manage/community/:id/insights\"\n            component={Insights}\n          />\n        </>\n      ) : (\n        <SignIn />\n      )}\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst theme = extendTheme({\r\n  colors: {\r\n    brand: {\r\n      primary: \"#FF4085\",\r\n      secondary: \"#131517\",\r\n    },\r\n    alpha: {\r\n      white: \"rgba(255, 255, 255, 0.1)\",\r\n    },\r\n    pink: {\r\n      600: \"#DE316F\",\r\n      800: \"#862F4E\",\r\n    },\r\n    black: {\r\n      400: \"#212325\",\r\n    },\r\n  },\r\n  fonts: {\r\n    brand: \"Red Hat Display\",\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { UserProvider } from \"./Providers/User.provider\";\nimport { Provider as SupabaseProvider } from \"react-supabase\";\nimport { supabase } from \"./Helpers/supabase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <SupabaseProvider value={supabase}>\n        <UserProvider>\n          <ChakraProvider theme={theme}>\n            <App />\n          </ChakraProvider>\n        </UserProvider>\n      </SupabaseProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}