{"version":3,"sources":["Assets/logo.svg","Helpers/supabase.js","components/Navigation/Navigation.component.jsx","components/Footer/Footer.component.jsx","pages/Landing.page.jsx","Assets/google.png","pages/SignIn.page.jsx","pages/Auth.page.jsx","Providers/User.provider.jsx","components/Cards/CommunityCard.component.jsx","Helpers/features.js","components/Navigation/Sidebar.component.jsx","components/Misc/StarterTemplace.component.jsx","components/Cards/EventCard.component.jsx","Helpers/isUpcoming.js","Helpers/wisher.js","pages/Dashboard/Home.page.jsx","pages/New/NewCommunity.page.jsx","pages/Update/UpdateCommunity.page.jsx","components/Misc/CurrentLocation.component.jsx","pages/Manage/ManageCommunity.page.jsx","pages/Dashboard/Events.page.jsx","pages/New/NewEvent.page.jsx","components/Misc/AudienceList.component.jsx","components/Cards/HostCard.component.jsx","pages/Update/UpdateEvent.page.jsx","Helpers/dateFormatter.js","pages/Manage/ManageEvent.page.jsx","pages/Dashboard/Audience.page.jsx","pages/Event/EventHostCard.component.jsx","pages/Event/index.jsx","App.jsx","reportWebVitals.js","theme.js","index.jsx"],"names":["supabase","createClient","process","Navigation","communityId","useState","undefined","user","setUser","community","setCommunity","useEffect","window","localStorage","getItem","getUser","getCommunity","a","from","select","eq","single","data","error","console","log","SignInButton","to","bg","color","px","size","fontSize","fontWeight","border","borderColor","transitionDuration","_hover","_focus","_active","ml","w","justify","alignItems","experimental_spaceX","onClick","location","href","cursor","rounded","src","logo","Logo","alt","h","name","leftIcon","whiteSpace","isTruncated","overflow","maxW","username","Footer","direction","base","md","py","lg","mt","display","type","_placeholder","placeholder","mb","LandingPage","minH","align","xl","transform","position","top","right","opacity","SignIn","loading","setLoading","buttonMessage","setButtonMessage","email","setEmail","toast","useToast","handleLoginWithGoogle","auth","signIn","provider","title","description","error_description","message","status","duration","isClosable","handleLogin","pt","pl","p","onChange","e","target","value","Google","Auth","session","setUsername","avatarUrl","setAvatarUrl","user_metadata","avatar_url","updateUser","length","updates","id","upsert","returning","setItem","float","rightIcon","UserContext","createContext","UserProvider","children","Provider","User","useContext","CommunityCard","audience","events","mr","ratio","minW","pr","features","enabled","Audience","Community","Insights","Newsletter","Explore","Sidebar","pathname","active","setActive","JSON","parse","contains","SidebarItems","isExternal","link","Icon","props","CommunityDisplay","SidebarItem","isEnabled","label","placement","fill","experimental_spaceY","map","key","m","signOut","removeItem","StarterTemplate","sidebarVisibility","setSidebarVisibility","zIndex","EventCard","date","image","communityData","setCommunityData","month","time","isUpcoming","dateObject","Date","d","getDate","getMonth","y","getFullYear","year","wish","hr","getHours","i","Home","communitities","setCommunities","upcomingEvents","setUpcomingEvents","getCommunities","getEvents","order","ascending","uE","dE","forEach","push","UpcomingEvents","casing","letterSpacing","wrap","stringify","Helmet","my","textAlign","NewCommunity","Logos","setLogo","setName","setDescription","uploading","setUploading","uploadLogo","file","formData","FormData","append","axios","post","res","url","onClose","useDisclosure","isOpen","onOpen","createCommunity","createdBy","setTimeout","pb","document","getElementById","click","accept","files","colorScheme","roundedTopStart","bottom","UpdateCommunity","communityName","communityDescription","communityLogo","close","LogoModal","reload","CurrentLocation","history","useHistory","goBack","ManageCommunity","match","params","Events","doneEvents","setDoneEvents","borderBottom","NewEvent","Platforms","enum","setLink","setImage","setDate","content","setContent","communitySelected","setCommunitySelected","communities","uploadImage","createEvent","admin","platform","EventData","EventPlatform","shadow","left","onSubmit","preventDefault","isRequired","borderTop","borderRight","borderLeft","dateString","dateFormatted","split","sm","moment","format","style","backgroundColor","AudienceList","variant","HostCard","removeHost","newCreatedBy","RemoveHostModal","UpdateEvent","eventId","eventName","eventDescription","eventImage","eventPlatform","eventLink","eventDate","eventContent","updateEvent","defaultValue","formatDate","ManageEvent","event","setEvent","setAudience","setCreatedBy","useClipboard","origin","hasCopied","onCopy","isListed","setIsListed","registrationOpen","setRegistrationOpen","newChanges","setNewChanges","getEvent","getAudience","AddHost","AddHostModal","test","String","toLowerCase","borderStyle","UpdateEventModal","CopyInput","open","isReadOnly","roundedRight","checked","isChecked","EventHostCard","Event","converter","Showdown","Converter","registerUser","Set","AudienceEventData","AudienceCommunityData","ProfileDisplay","mx","required","dangerouslySetInnerHTML","__html","makeHtml","transitionDelay","wordBreak","App","setSession","onAuthStateChange","_event","exact","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","colors","brand","primary","secondary","alpha","white","pink","black","fonts","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.0ced3651.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e169293d.svg\";","import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Logo from \"../../Assets/logo.svg\";\r\nimport { Image, Flex, Button, Text, Box } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ArrowRight, User } from \"react-feather\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction Navigation({ communityId }) {\r\n  const [user, setUser] = useState(undefined);\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"email\")) {\r\n      getUser();\r\n    }\r\n    if (communityId) {\r\n      getCommunity();\r\n    }\r\n  }, [communityId]);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", window.localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"name, logo\")\r\n        .eq(\"id\", communityId)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const SignInButton = () => (\r\n    <Link to=\"/signin\">\r\n      <Button\r\n        bg=\"alpha.white\"\r\n        color=\"white\"\r\n        px=\"6\"\r\n        size=\"sm\"\r\n        fontSize=\"xs\"\r\n        fontWeight=\"bold\"\r\n        border=\"1px\"\r\n        borderColor=\"transparent\"\r\n        transitionDuration=\"200ms\"\r\n        _hover={{\r\n          bg: \"rgba(255, 255, 255, 0.05)\",\r\n          borderColor: \"whiteAlpha.200\",\r\n        }}\r\n        _focus={{}}\r\n        _active={{ bg: \"rgba(255, 255, 255, 0.12)\" }}\r\n      >\r\n        Sign in\r\n        <Box ml=\"1\">\r\n          <ArrowRight size=\"14px\" />\r\n        </Box>\r\n      </Button>\r\n    </Link>\r\n  );\r\n\r\n  return (\r\n    <Flex w=\"full\" justify=\"space-between\" alignItems=\"center\">\r\n      <Flex\r\n        experimental_spaceX={community ? \"2\" : \"3\"}\r\n        onClick={() => {\r\n          if (!community) {\r\n            window.location.href = \"/\";\r\n          }\r\n        }}\r\n        alignItems=\"center\"\r\n        color=\"white\"\r\n        _hover={{ color: \"brand.primary\" }}\r\n        cursor=\"pointer\"\r\n        transitionDuration=\"300ms\"\r\n      >\r\n        <Image\r\n          rounded={community ? \"lg\" : \"none\"}\r\n          src={community ? community?.logo : Logo}\r\n          alt=\"relm\"\r\n          w={community ? \"7\" : \"8\"}\r\n          h={community ? \"7\" : \"8\"}\r\n        />\r\n        <Text fontWeight=\"bold\" fontSize={community ? \"base\" : \"24\"}>\r\n          {community ? <>{community?.name}</> : <>relm</>}\r\n        </Text>\r\n      </Flex>\r\n      {window.localStorage.getItem(\"email\") ? (\r\n        <Link to=\"/home\">\r\n          <Button\r\n            bg=\"alpha.white\"\r\n            color=\"white\"\r\n            px=\"6\"\r\n            size=\"sm\"\r\n            fontSize=\"xs\"\r\n            fontWeight=\"semibold\"\r\n            border=\"1px\"\r\n            borderColor=\"transparent\"\r\n            transitionDuration=\"200ms\"\r\n            _hover={{\r\n              bg: \"rgba(255, 255, 255, 0.05)\",\r\n              borderColor: \"whiteAlpha.200\",\r\n            }}\r\n            _focus={{}}\r\n            leftIcon={<User size=\"14px\" />}\r\n            _active={{ bg: \"rgba(255, 255, 255, 0.12)\" }}\r\n            whiteSpace=\"nowrap\"\r\n          >\r\n            <Text isTruncated overflow=\"clip\" maxW=\"80px\">\r\n              {user?.username}\r\n            </Text>\r\n          </Button>\r\n        </Link>\r\n      ) : (\r\n        <SignInButton />\r\n      )}\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { Box, Flex, Image, Text, Input, Button } from \"@chakra-ui/react\";\r\nimport Logo from \"../../Assets/logo.svg\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Flex justify=\"center\">\r\n      <Flex\r\n        w=\"full\"\r\n        maxW=\"1200px\"\r\n        justify=\"space-between\"\r\n        bg=\"brand.secondary\"\r\n        direction={{ base: \"column\", md: \"row\" }}\r\n        alignItems=\"center\"\r\n        color=\"white\"\r\n        py=\"8\"\r\n        px={{ base: \"8\", lg: \"24\" }}\r\n      >\r\n        <Flex\r\n          cursor=\"pointer\"\r\n          onClick={() => (window.location.href = \"/\")}\r\n          alignItems=\"center\"\r\n          experimental_spaceX=\"4\"\r\n        >\r\n          <Image src={Logo} alt=\"relm\" w=\"12\" h=\"12\" />\r\n          <Box>\r\n            <Text fontWeight=\"bold\" fontSize=\"2xl\">\r\n              relm\r\n            </Text>\r\n            <Text fontWeight=\"thin\" fontSize=\"xx-small\">\r\n              Activating your community\r\n            </Text>\r\n          </Box>\r\n        </Flex>\r\n        <Flex\r\n          w={{ base: \"80%\", md: \"auto\" }}\r\n          direction=\"column\"\r\n          mt={{ base: \"8\", md: \"0\" }}\r\n        >\r\n          <Text>\r\n            Get updates about{\" \"}\r\n            <Text display=\"inline\" color=\"brand.primary\">\r\n              Relm\r\n            </Text>\r\n          </Text>\r\n          <Input\r\n            type=\"email\"\r\n            mt=\"1.5\"\r\n            size=\"sm\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Your email\"\r\n          />\r\n          <Button\r\n            _hover={{}}\r\n            _active={{ bg: \"pink.600\" }}\r\n            _focus={{}}\r\n            bg=\"brand.primary\"\r\n            color=\"white\"\r\n            size=\"sm\"\r\n            px=\"6\"\r\n            mt=\"1.5\"\r\n            fontSize=\"xs\"\r\n            mb={{ base: \"4\", md: \"0\" }}\r\n          >\r\n            Subscribe to our newsletter\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\nexport default Footer;\r\n","import { Box, Text, Flex, Button, Tag, Divider } from \"@chakra-ui/react\";\r\nimport Navigation from \"../components/Navigation/Navigation.component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"../components/Footer/Footer.component\";\r\n\r\nfunction LandingPage() {\r\n  return (\r\n    <Flex bg=\"brand.secondary\" justify=\"center\">\r\n      <Box maxW=\"1400px\">\r\n        <Flex justify=\"center\" w=\"full\">\r\n          <Box minH=\"100vh\" py=\"6\" px={{ base: \"8\", lg: \"24\" }} w=\"full\">\r\n            <Navigation />\r\n            <Flex\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              mt=\"24\"\r\n              direction=\"column\"\r\n            >\r\n              <Text\r\n                color=\"brand.primary\"\r\n                fontWeight=\"black\"\r\n                fontSize={{ base: \"4xl\", md: \"5xl\", lg: \"6xl\" }}\r\n                align=\"center\"\r\n              >\r\n                Activating Your Community\r\n              </Text>\r\n              <Text\r\n                color=\"white\"\r\n                fontWeight=\"medium\"\r\n                fontSize={{ base: \"xs\", md: \"sm\", lg: \"lg\" }}\r\n                mt=\"2\"\r\n                px={{ lg: \"40\", md: \"40\", xl: \"80\" }}\r\n                align=\"center\"\r\n              >\r\n                Making communities more engaging with events, community\r\n                analytics and newsletters with{\" \"}\r\n                <Text cursor=\"pointer\" display=\"inline\" color=\"brand.primary\">\r\n                  Relm\r\n                </Text>\r\n              </Text>\r\n              <Link to=\"/signin\">\r\n                <Button\r\n                  _hover={{ transform: \"translateY(-1.5px)\" }}\r\n                  _active={{ bg: \"pink.600\" }}\r\n                  _focus={{}}\r\n                  bg=\"brand.primary\"\r\n                  color=\"white\"\r\n                  mt=\"10\"\r\n                  rounded=\"2xl\"\r\n                  fontWeight=\"bold\"\r\n                  fontSize=\"lg\"\r\n                  px=\"14\"\r\n                  py=\"7\"\r\n                >\r\n                  Get Into Realm\r\n                  <Tag\r\n                    position=\"absolute\"\r\n                    top=\"-2\"\r\n                    right=\"-3\"\r\n                    color=\"white\"\r\n                    rounded=\"full\"\r\n                    bg=\"pink.800\"\r\n                    px=\"3\"\r\n                    py=\"1\"\r\n                  >\r\n                    beta\r\n                  </Tag>\r\n                </Button>\r\n              </Link>\r\n            </Flex>\r\n          </Box>\r\n        </Flex>\r\n        <Divider opacity=\"0.1\" />\r\n        <Footer />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","export default __webpack_public_path__ + \"static/media/google.d21a7387.png\";","import {\r\n  Flex,\r\n  Box,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  Divider,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport Logo from \"../Assets/logo.svg\";\r\nimport { Check } from \"react-feather\";\r\nimport { useState } from \"react\";\r\nimport { supabase } from \"../Helpers/supabase\";\r\nimport Google from \"../Assets/google.png\";\r\n\r\nfunction SignIn() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [buttonMessage, setButtonMessage] = useState(<Text>Continue</Text>);\r\n  const [email, setEmail] = useState(\"\");\r\n  const toast = useToast();\r\n\r\n  const handleLoginWithGoogle = async (email) => {\r\n    try {\r\n      const { error } = await supabase.auth.signIn({\r\n        provider: \"google\",\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: error.error_description || error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      console.log(\"finally\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (email) => {\r\n    try {\r\n      setLoading(true);\r\n      const { error } = await supabase.auth.signIn({ email });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      toast({\r\n        title: \"Account Created\",\r\n        position: \"bottom\",\r\n        description: \"Check your email for login link\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      setButtonMessage(<Check />);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: error.error_description || error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex direction={{ base: \"column\", md: \"row\" }}>\r\n      <Box\r\n        bg=\"brand.secondary\"\r\n        pt=\"10\"\r\n        pl=\"10\"\r\n        display={{ base: \"block\", md: \"none\" }}\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"12\" h=\"12\" />\r\n      </Box>\r\n      <Flex\r\n        bg=\"black.400\"\r\n        display={{ base: \"none\", md: \"flex\" }}\r\n        w={{ md: \"35%\" }}\r\n        h=\"100vh\"\r\n        p={{ base: \"6\", md: \"10\" }}\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"14\" h=\"14\" />\r\n        <Box color=\"white\">\r\n          <Text fontWeight=\"bold\" fontSize=\"4xl\">\r\n            relm\r\n          </Text>\r\n          <Text fontWeight=\"thin\" fontSize=\"sm\">\r\n            Activating your community\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      <Box\r\n        w={{ base: \"100%\", md: \"65%\" }}\r\n        h=\"100vh\"\r\n        bg=\"brand.secondary\"\r\n        p={{ base: \"10\", md: \"20\" }}\r\n      >\r\n        <Box w={{ base: \"100%\", lg: \"400px\" }}>\r\n          <Text color=\"white\" fontWeight=\"bold\" fontSize=\"3xl\">\r\n            Sign In\r\n          </Text>\r\n          <Text color=\"white\" fontWeight=\"medium\" mt=\"8\" fontSize=\"sm\">\r\n            Sign in with your email\r\n          </Text>\r\n          <Input\r\n            type=\"email\"\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n              console.log(email);\r\n            }}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Your email\"\r\n          />\r\n          <Button\r\n            w=\"full\"\r\n            mt=\"3\"\r\n            rounded=\"lg\"\r\n            _focus={{}}\r\n            _active={{}}\r\n            onClick={() => handleLogin(email)}\r\n          >\r\n            {loading ? <Spinner /> : buttonMessage}\r\n          </Button>\r\n          <Flex alignItems=\"center\" mt=\"14\" mb=\"4\" experimental_spaceX=\"3\">\r\n            <Text color=\"white\" fontSize=\"xs\" fontWeight=\"medium\">\r\n              OR\r\n            </Text>\r\n            <Divider w=\"full\" color=\"white\" />\r\n          </Flex>\r\n          <Button\r\n            leftIcon={<Image src={Google} w=\"16px\" h=\"16px\" />}\r\n            border=\"1px\"\r\n            borderColor=\"transparent\"\r\n            _hover={{ borderColor: \"whiteAlpha.200\" }}\r\n            _focus={{}}\r\n            _active={{}}\r\n            w=\"full\"\r\n            bg=\"whiteAlpha.200\"\r\n            rounded=\"lg\"\r\n            fontSize=\"sm\"\r\n            color=\"white\"\r\n            onClick={() => handleLoginWithGoogle()}\r\n          >\r\n            Sign In With Google\r\n          </Button>\r\n          <Text color=\"whiteAlpha.500\" mt=\"4\" fontSize=\"sm\">\r\n            By signing in you agree to our terms and conditions\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import {\r\n  Flex,\r\n  Box,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ArrowRight } from \"react-feather\";\r\nimport Logo from \"../Assets/logo.svg\";\r\nimport { supabase } from \"../Helpers/supabase\";\r\n\r\nfunction Auth({ session }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(null);\r\n  const [avatarUrl, setAvatarUrl] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const user = supabase.auth.user();\r\n\r\n      if (user) {\r\n        console.log(user);\r\n        setEmail(user.email);\r\n        if (user.username) {\r\n          setUsername(user?.username);\r\n        }\r\n        if (user.user_metadata) {\r\n          setAvatarUrl(user.user_metadata?.avatar_url);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUser = async (username) => {\r\n    if (username.length > 3) {\r\n      try {\r\n        setLoading(true);\r\n        const user = supabase.auth.user();\r\n        const updates = {\r\n          id: user.id,\r\n          username,\r\n          avatar_url: avatarUrl,\r\n          email: email,\r\n        };\r\n\r\n        const { error } = await supabase.from(\"users\").upsert(updates, {\r\n          returning: \"minimal\",\r\n        });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n        window.localStorage.setItem(\"email\", email);\r\n        window.location.href = \"/home\";\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Your name should have than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex direction={{ base: \"column\", md: \"row\" }}>\r\n      <Box\r\n        bg=\"brand.secondary\"\r\n        pt=\"10\"\r\n        pl=\"10\"\r\n        display={{ base: \"block\", md: \"none\" }}\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"12\" h=\"12\" />\r\n      </Box>\r\n      <Flex\r\n        display={{ base: \"none\", md: \"flex\" }}\r\n        w={{ md: \"35%\" }}\r\n        h=\"100vh\"\r\n        bg=\"black.400\"\r\n        p={{ base: \"6\", md: \"10\" }}\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"14\" h=\"14\" />\r\n        <Box color=\"white\">\r\n          <Text fontWeight=\"bold\" fontSize=\"4xl\">\r\n            relm\r\n          </Text>\r\n          <Text fontWeight=\"thin\" fontSize=\"sm\">\r\n            Activating your community\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      <Box\r\n        w={{ base: \"100%\", md: \"65%\" }}\r\n        h=\"100vh\"\r\n        bg=\"brand.secondary\"\r\n        p={{ base: \"10\", md: \"20\" }}\r\n      >\r\n        <Box w={{ base: \"100%\", lg: \"400px\" }}>\r\n          <Text color=\"white\" fontWeight=\"bold\" fontSize=\"3xl\">\r\n            Let's know more about you\r\n          </Text>\r\n          <Text color=\"white\" fontWeight=\"medium\" mt=\"8\" fontSize=\"sm\">\r\n            What do we call you?\r\n          </Text>\r\n          <Input\r\n            value={username}\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n              console.log(username);\r\n            }}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Your name\"\r\n          />\r\n          <Button\r\n            float=\"right\"\r\n            mt=\"6\"\r\n            rounded=\"lg\"\r\n            _focus={{}}\r\n            _active={{}}\r\n            rightIcon={\r\n              loading ? <Spinner size=\"sm\" /> : <ArrowRight size=\"20px\" />\r\n            }\r\n            onClick={() => updateUser(username)}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nconst UserContext = createContext({\r\n  user: undefined,\r\n  setUser: () => {},\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const User = () => useContext(UserContext);\r\n","import { Flex, AspectRatio, Image, Text } from \"@chakra-ui/react\";\r\nimport { Calendar, Users } from \"react-feather\";\r\n\r\nfunction CommunityCard({ id, name, description, audience, events, logo }) {\r\n  return (\r\n    <Flex\r\n      onClick={() => {\r\n        window.location.href = `/manage/community/${id}`;\r\n      }}\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      alignItems=\"center\"\r\n      bg=\"alpha.white\"\r\n      overflow=\"clip\"\r\n      isTruncated\r\n      p=\"2\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW=\"320px\"\r\n    >\r\n      <AspectRatio ratio={1} minW=\"20\">\r\n        <Image src={logo} rounded=\"lg\" />\r\n      </AspectRatio>\r\n      <Flex isTruncated direction=\"column\" justify=\"space-between\">\r\n        <Text\r\n          isTruncated\r\n          pr=\"2\"\r\n          fontWeight=\"bold\"\r\n          fontSize={{ base: \"lg\", md: \"lg\" }}\r\n        >\r\n          {name}\r\n        </Text>\r\n        <Flex experimental_spaceX=\"2\" alignItems=\"center\">\r\n          <Users size=\"16px\" />\r\n          <Text fontSize={{ base: \"xs\", md: \"sm\" }}>{audience}</Text>\r\n        </Flex>\r\n        <Flex experimental_spaceX=\"2\" alignItems=\"center\">\r\n          <Calendar size=\"16px\" />\r\n          <Text fontSize={{ base: \"xs\", md: \"sm\" }}>{events}</Text>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default CommunityCard;\r\n","export const features = {\r\n  \"Quick Event\": {\r\n    enabled: true,\r\n  },\r\n  Audience: {\r\n    enabled: true,\r\n  },\r\n  Community: {\r\n    enabled: true,\r\n  },\r\n  Insights: {\r\n    enabled: true,\r\n  },\r\n  Newsletter: {\r\n    enabled: false,\r\n  },\r\n  Explore: {\r\n    enabled: false,\r\n  },\r\n  \"Revenue Solution\": {\r\n    enabled: false,\r\n  },\r\n};\r\n","import {\r\n  BarChart,\r\n  Calendar,\r\n  Heart,\r\n  Home,\r\n  Mail,\r\n  Plus,\r\n  Users,\r\n} from \"react-feather\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Flex,\r\n  Button,\r\n  Avatar,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Skeleton,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport Logo from \"../../Assets/logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { features } from \"../../Helpers/features\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction Sidebar({ communityId }) {\r\n  const [active, setActive] = useState(window.location.pathname);\r\n  const { user, setUser } = User();\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n    }\r\n    if (communityId) {\r\n      getCommunity(communityId);\r\n    }\r\n  }, [communityId, setUser, user]);\r\n\r\n  const getCommunity = async (id) => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo ,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const SidebarItems = [\r\n    {\r\n      name: \"Home\",\r\n      isExternal: false,\r\n      link: communityId ? `/manage/community/${communityId}` : \"/home\",\r\n      Icon: (props) => <Home {...props} />,\r\n    },\r\n    {\r\n      name: \"Audience\",\r\n      isExternal: false,\r\n      link: communityId\r\n        ? `/manage/community/${communityId}/audience`\r\n        : \"/audience\",\r\n      Icon: (props) => <Users {...props} />,\r\n    },\r\n    {\r\n      name: \"Events\",\r\n      isExternal: false,\r\n      link: communityId ? `/manage/community/${communityId}/events` : \"/events\",\r\n      Icon: (props) => {\r\n        return <Calendar {...props} />;\r\n      },\r\n    },\r\n    {\r\n      name: \"Insights\",\r\n      isExternal: false,\r\n      link: \"/insights\",\r\n      Icon: (props) => {\r\n        return <BarChart {...props} />;\r\n      },\r\n    },\r\n    {\r\n      name: \"Newsletter\",\r\n      isExternal: false,\r\n      link: \"#\",\r\n      Icon: (props) => {\r\n        return <Mail {...props} />;\r\n      },\r\n    },\r\n    {\r\n      name: \"Explore\",\r\n      isExternal: false,\r\n      link: \"#\",\r\n      Icon: (props) => {\r\n        return <Heart {...props} />;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const CommunityDisplay = ({ name, logo }) => {\r\n    return (\r\n      <Flex\r\n        cursor=\"pointer\"\r\n        onClick={() => {\r\n          window.location.href = `/manage/community/${communityId}`;\r\n        }}\r\n        mb=\"6\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        experimental_spaceX=\"2\"\r\n      >\r\n        <Image\r\n          src={logo}\r\n          alt={name}\r\n          w={{ base: \"10\", lg: \"8\" }}\r\n          h={{ base: \"10\", lg: \"8\" }}\r\n          rounded=\"full\"\r\n        />\r\n        <Text\r\n          isTruncated\r\n          color=\"white\"\r\n          display={{ base: \"none\", lg: \"block\" }}\r\n          fontWeight=\"bold\"\r\n          fontSize=\"xl\"\r\n        >\r\n          {name}\r\n        </Text>\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  const SidebarItem = ({ name, link, Icon }) => {\r\n    const isEnabled = features[name]\r\n      ? features[name]?.enabled\r\n        ? true\r\n        : false\r\n      : true;\r\n\r\n    return (\r\n      <Link to={isEnabled ? link : \"#\"} onClick={() => setActive(name)}>\r\n        <Tooltip label={name} display={{ lg: \"none\" }} placement=\"right\">\r\n          <Flex\r\n            opacity={isEnabled ? \"1\" : \"0.5\"}\r\n            cursor={isEnabled ? \"pointer\" : \"not-allowed\"}\r\n            experimental_spaceX=\"3\"\r\n            fontSize=\"lg\"\r\n            color={active === link ? \"brand.primary\" : \"white\"}\r\n            alignItems=\"center\"\r\n          >\r\n            <Icon fill={active === link ? \"#FF4085\" : \"none\"} />\r\n            <Text\r\n              display={{ base: \"none\", lg: \"block\" }}\r\n              fontWeight={active === link ? \"bold\" : \"normal\"}\r\n            >\r\n              {name}\r\n            </Text>\r\n          </Flex>\r\n        </Tooltip>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n        alignItems={{ base: \"center\", lg: \"start\" }}\r\n        w={{ base: \"80px\", md: \"100px\", lg: \"360px\" }}\r\n        bg=\"black.400\"\r\n        h=\"100vh\"\r\n        position=\"fixed\"\r\n        p={{ base: \"6\", lg: \"10\" }}\r\n      >\r\n        <Box w={{ lg: \"full\" }}>\r\n          <Box\r\n            w=\"-webkit-fit-content\"\r\n            cursor=\"pointer\"\r\n            onClick={() => (window.location.href = \"/home\")}\r\n          >\r\n            <Image src={Logo} alt=\"relm\" w=\"10\" h=\"10\" />\r\n          </Box>\r\n          <Box px={{ base: \"0\", lg: \"10\" }} mt=\"50px\">\r\n            {communityId ? (\r\n              community ? (\r\n                <CommunityDisplay\r\n                  name={community?.name}\r\n                  logo={community?.logo}\r\n                />\r\n              ) : (\r\n                <Flex\r\n                  mb=\"6\"\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  experimental_spaceX=\"2\"\r\n                >\r\n                  <Skeleton\r\n                    w={{ base: \"10\", lg: \"8\" }}\r\n                    h={{ base: \"10\", lg: \"8\" }}\r\n                    rounded=\"full\"\r\n                  />\r\n                  <Skeleton\r\n                    rounded=\"xl\"\r\n                    h=\"6\"\r\n                    w=\"20\"\r\n                    display={{ base: \"none\", lg: \"block\" }}\r\n                  />\r\n                </Flex>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <Button\r\n              onClick={() => {\r\n                const to = communityId\r\n                  ? `/manage/community/${communityId}/new/event`\r\n                  : \"/new/event\";\r\n                window.location.href = to;\r\n              }}\r\n              _hover={{ bg: \"#DD3370\" }}\r\n              transitionDuration=\"200ms\"\r\n              _focus={{}}\r\n              _active={{}}\r\n              size=\"sm\"\r\n              py=\"5\"\r\n              w={{ base: \"10\", lg: \"full\" }}\r\n              rounded={{ base: \"full\", lg: \"xl\" }}\r\n              color=\"white\"\r\n              bg=\"brand.primary\"\r\n            >\r\n              <Text display={{ base: \"none\", lg: \"block\" }}>\r\n                Create new event\r\n              </Text>\r\n              <Box display={{ base: \"block\", lg: \"none\" }}>\r\n                <Plus />\r\n              </Box>\r\n            </Button>\r\n            <Flex\r\n              alignItems={{ base: \"center\", lg: \"start\" }}\r\n              mt=\"8\"\r\n              direction=\"column\"\r\n              experimental_spaceY=\"5\"\r\n            >\r\n              {SidebarItems.map((data, key) => (\r\n                <SidebarItem key={key} {...data} />\r\n              ))}\r\n            </Flex>\r\n          </Box>\r\n        </Box>\r\n        <Flex\r\n          p={{ base: \"0\", md: \"2\" }}\r\n          w={{ base: \"-webkit-fit-content\", lg: \"full\" }}\r\n          bg=\"whiteAlpha.300\"\r\n          rounded=\"full\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Menu>\r\n            <MenuButton overflow=\"clip\">\r\n              <Flex alignItems=\"center\" experimental_spaceX=\"2\">\r\n                <Avatar\r\n                  size=\"md\"\r\n                  src={user?.avatar_url}\r\n                  name={user?.username}\r\n                />\r\n                <Box display={{ base: \"none\", lg: \"block\" }}>\r\n                  <Text\r\n                    align=\"left\"\r\n                    color=\"white\"\r\n                    whiteSpace=\"nowrap\"\r\n                    fontWeight=\"semibold\"\r\n                    fontSize=\"lg\"\r\n                  >\r\n                    {user?.username}\r\n                  </Text>\r\n                  <Text\r\n                    align=\"left\"\r\n                    color=\"white\"\r\n                    whiteSpace=\"nowrap\"\r\n                    fontSize=\"xs\"\r\n                  >\r\n                    {user?.email}\r\n                  </Text>\r\n                </Box>\r\n              </Flex>\r\n            </MenuButton>\r\n            <MenuList\r\n              bg=\"brand.secondary\"\r\n              m=\"2\"\r\n              borderColor=\"gray.700\"\r\n              color=\"white\"\r\n            >\r\n              <MenuItem\r\n                _hover={{ bg: \"whiteAlpha.50\" }}\r\n                _focus={{ bg: \"whiteAlpha.50\" }}\r\n                onClick={async () => {\r\n                  await supabase.auth.signOut();\r\n                  window.location.href = \"/\";\r\n                  setUser(undefined);\r\n                  localStorage.removeItem(\"user\");\r\n                  localStorage.removeItem(\"email\");\r\n                }}\r\n              >\r\n                Sign out\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </Flex>\r\n      </Flex>\r\n      <Box\r\n        w={{ base: \"0\", md: \"100px\", lg: \"360px\" }}\r\n        bg=\"pink\"\r\n        h=\"full\"\r\n        minH=\"100vh\"\r\n      ></Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import Sidebar from \"../../components/Navigation/Sidebar.component\";\r\nimport { Flex, Box, Image } from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { X, Menu } from \"react-feather\";\r\nimport Logo from \"../../Assets/logo.svg\";\r\n\r\nfunction StarterTemplate({ children, communityId }) {\r\n  const [sidebarVisibility, setSidebarVisibility] = useState(false);\r\n\r\n  return (\r\n    <Flex>\r\n      <Box\r\n        zIndex={2}\r\n        display={{ base: sidebarVisibility ? \"block\" : \"none\", md: \"block\" }}\r\n      >\r\n        <Sidebar communityId={communityId} />\r\n      </Box>\r\n      <Box\r\n        p={{ base: \"8\", md: \"10\" }}\r\n        bg=\"brand.secondary\"\r\n        w=\"full\"\r\n        minH=\"100vh\"\r\n        color=\"white\"\r\n      >\r\n        <Flex\r\n          display={{ base: \"flex\", md: \"none\" }}\r\n          m=\"-4\"\r\n          justify=\"space-between\"\r\n          mb=\"4\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Image src={Logo} alt=\"relm\" w=\"10\" h=\"10\" ml=\"1\" mt=\"2\" />\r\n          <Box\r\n            cursor=\"pointer\"\r\n            onClick={() => setSidebarVisibility(!sidebarVisibility)}\r\n            rounded=\"full\"\r\n            p=\"2\"\r\n            _hover={{ bg: \"whiteAlpha.200\" }}\r\n          >\r\n            {sidebarVisibility ? <X /> : <Menu />}\r\n          </Box>\r\n        </Flex>\r\n        {children}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default StarterTemplate;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Flex, AspectRatio, Image, Text, Box, Button } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Calendar, Users } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction EventCard({\r\n  id,\r\n  name,\r\n  description,\r\n  date,\r\n  image,\r\n  community,\r\n  audience,\r\n}) {\r\n  const Months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const [communityData, setCommunityData] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (community) {\r\n      getCommunity();\r\n    }\r\n  }, []);\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo\")\r\n        .eq(\"id\", community)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunityData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      direction=\"column\"\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      p=\"2\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW={{ base: \"full\", md: \"300px\" }}\r\n      onClick={() => {\r\n        window.location.href = `/manage/event/${id}`;\r\n      }}\r\n    >\r\n      <AspectRatio ratio={1920 / 1080} w=\"full\">\r\n        <Image src={image} alt={name} rounded=\"lg\" />\r\n      </AspectRatio>\r\n      <Flex direction=\"column\" justify=\"space-between\" h=\"full\">\r\n        <Box>\r\n          <Text fontSize=\"xl\" fontWeight=\"bold\" mt=\"4\">\r\n            {name}\r\n          </Text>\r\n          <Flex\r\n            fontSize=\"xs\"\r\n            color=\"brand.primary\"\r\n            experimental_spaceX=\"1.5\"\r\n            alignItems=\"center\"\r\n            mt=\"1\"\r\n          >\r\n            <Calendar size=\"14px\" />\r\n            <Text>\r\n              {`${Months[date.month - 1]} ${date.date}, ${date.time} GMT+5:30`}\r\n            </Text>\r\n          </Flex>\r\n          <Flex\r\n            mt=\"1\"\r\n            fontSize=\"xs\"\r\n            experimental_spaceX=\"1.5\"\r\n            color=\"white\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Users size=\"14px\" />\r\n            <Text>{audience}</Text>\r\n          </Flex>\r\n          <Text mt=\"4\">{description}</Text>\r\n        </Box>\r\n        <Box>\r\n          <Flex mt=\"4\" mb=\"2\" justify=\"space-between\" mr=\"2\">\r\n            {communityData ? (\r\n              <Flex alignItems=\"center\" experimental_spaceX=\"2\">\r\n                <Image\r\n                  src={communityData.logo}\r\n                  alt={communityData.name}\r\n                  w=\"5\"\r\n                  h=\"5\"\r\n                  rounded=\"base\"\r\n                />\r\n                <Text fontWeight=\"medium\" fontSize=\"sm\">\r\n                  {communityData.name}\r\n                </Text>\r\n              </Flex>\r\n            ) : (\r\n              <Box></Box>\r\n            )}\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Manage\r\n            </Button>\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default EventCard;\r\n","export const isUpcoming = (date) => {\r\n  const dateObject = new Date();\r\n  const d = dateObject.getDate();\r\n  const m = dateObject.getMonth() + 1;\r\n  const y = dateObject.getFullYear();\r\n  console.log(d, y, m);\r\n\r\n  if (date.date >= d && date.month >= m && date.year >= y) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n","export function wish() {\r\n  var data = [\r\n      [0, 4, \"Good Night\"],\r\n      [5, 11, \"Good Morning\"], //Store messages in an array\r\n      [12, 17, \"Good Afternoon\"],\r\n      [18, 24, \"Good Night\"],\r\n    ],\r\n    hr = new Date().getHours();\r\n\r\n  for (var i = 0; i < data.length; i++) {\r\n    if (hr >= data[i][0] && hr <= data[i][1]) {\r\n      return data[i][2];\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { Box, Flex, Text, Divider, Button } from \"@chakra-ui/react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { Plus } from \"react-feather\";\r\nimport CommunityCard from \"../../components/Cards/CommunityCard.component\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EventCard from \"../../components/Cards/EventCard.component\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\nimport { wish } from \"../../Helpers/wisher\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction Home() {\r\n  const { user, setUser } = User();\r\n  const [communitities, setCommunities] = useState(undefined);\r\n  const [upcomingEvents, setUpcomingEvents] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    getCommunities();\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\"id, name, image, description, date, community, audience\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .order(\"created_at\", { ascending: false });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      let uE = [];\r\n      let dE = [];\r\n      data.forEach((data) => {\r\n        if (isUpcoming(data.date)) {\r\n          uE.push(data);\r\n        } else {\r\n          dE.push(data);\r\n        }\r\n      });\r\n\r\n      setUpcomingEvents(uE);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const UpcomingEvents = () => {\r\n    return (\r\n      <>\r\n        <Flex justify=\"space-between\" mt=\"6\" alignItems=\"center\">\r\n          <Link to=\"/events\">\r\n            <Text\r\n              casing=\"capitalize\"\r\n              fontSize=\"sm\"\r\n              fontWeight=\"semibold\"\r\n              letterSpacing=\"2px\"\r\n              color=\"white\"\r\n            >\r\n              UPCOMING EVENTS\r\n            </Text>\r\n          </Link>\r\n          <Link to={`/new/event`}>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              leftIcon={<Plus size=\"18px\" />}\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n        <Flex wrap=\"wrap\" mt=\"4\">\r\n          {upcomingEvents ? (\r\n            upcomingEvents?.map((data, key) => (\r\n              <EventCard key={key} {...data} />\r\n            ))\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Flex>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getCommunities = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .order(\"created_at\", { ascending: false });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunities(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n      localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify({\r\n          username: data.username,\r\n          avatar_url: data.avatar_url,\r\n          email: data.email,\r\n        })\r\n      );\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate>\r\n      <Helmet>\r\n        <title>Home | Relm</title>\r\n      </Helmet>\r\n      <Box>\r\n        <Text color=\"whiteAlpha.500\" fontSize={{ base: \"sm\", md: \"lg\" }}>\r\n          {wish()},\r\n        </Text>\r\n        <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"bold\">\r\n          {user?.username}\r\n        </Text>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n        <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n          <Text\r\n            casing=\"capitalize\"\r\n            fontSize=\"sm\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"2px\"\r\n            color=\"white\"\r\n          >\r\n            COMMUNITIES\r\n          </Text>\r\n          <Link to=\"/new/community\">\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              leftIcon={<Plus size=\"18px\" />}\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n        {communitities?.length > 0 ? (\r\n          <Flex mt=\"4\" wrap=\"wrap\">\r\n            {communitities?.map((data, key) => (\r\n              <CommunityCard key={key} {...data} />\r\n            ))}\r\n          </Flex>\r\n        ) : communitities ? (\r\n          <Flex\r\n            color=\"whiteAlpha.600\"\r\n            my=\"8\"\r\n            textAlign=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            🐝 Click on create to add communities\r\n          </Flex>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {upcomingEvents?.length > 0 ? <UpcomingEvents /> : <></>}\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import {\r\n  Flex,\r\n  Box,\r\n  Divider,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { ArrowLeft, CheckCircle, Edit, Upload } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport axios from \"axios\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction NewCommunity() {\r\n  const Logos = [\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/defaultCommunityLogo_gUich_dto.svg?updatedAt=1633160835413\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-3_PXKqFbob4Lj.svg?updatedAt=1633165287477\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-2_7d7-btPTg.svg?updatedAt=1633165286592\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-1_JT81iTWJQGq.svg?updatedAt=1633165286130\",\r\n  ];\r\n\r\n  const { user } = User();\r\n  const [logo, setLogo] = useState(Logos[0]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const uploadLogo = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setLogo(res.data.url);\r\n      onClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const createCommunity = async (name, description, logo) => {\r\n    if (name.length > 3) {\r\n      setLogo(logo);\r\n      try {\r\n        setLoading(true);\r\n        const updates = {\r\n          name,\r\n          description,\r\n          logo,\r\n          createdBy: [user?.email],\r\n        };\r\n\r\n        const { data, error } = await supabase\r\n          .from(\"communities\")\r\n          .upsert(updates)\r\n          .single();\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Community created successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          window.location.href = `/manage/community/${data.id}`;\r\n        }, 1000);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate>\r\n      <Helmet>\r\n        <title>New Community | Relm</title>\r\n      </Helmet>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n          <ModalHeader>Choose a logo</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Flex wrap=\"wrap\">\r\n              <Flex\r\n                cursor=\"pointer\"\r\n                border=\"2px\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                _hover={{ borderColor: \"whiteAlpha.50\" }}\r\n                borderColor=\"transparent\"\r\n                mb=\"3\"\r\n                mr=\"3\"\r\n                w=\"24\"\r\n                h=\"24\"\r\n                rounded=\"xl\"\r\n                bg=\"whiteAlpha.300\"\r\n                onClick={() => {\r\n                  document.getElementById(\"file\").click();\r\n                }}\r\n              >\r\n                <Upload size=\"30px\" />\r\n              </Flex>\r\n              {Logos.map((data, key) => (\r\n                <Box\r\n                  key={key}\r\n                  cursor=\"pointer\"\r\n                  onClick={() => {\r\n                    setLogo(data);\r\n                  }}\r\n                >\r\n                  <Image\r\n                    border=\"4px\"\r\n                    borderColor={\r\n                      logo === data ? \"brand.primary\" : \"transparent\"\r\n                    }\r\n                    mb=\"3\"\r\n                    mr=\"3\"\r\n                    src={data}\r\n                    w=\"24\"\r\n                    h=\"24\"\r\n                    rounded=\"xl\"\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Flex>\r\n          </ModalBody>\r\n          <Input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            accept=\"image/*\"\r\n            display=\"none\"\r\n            onChange={(e) => uploadLogo(e.target.files[0])}\r\n          />\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              {uploading ? <Spinner /> : <>Done</>}\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Box>\r\n        <Flex alignItems=\"center\" experimental_spaceX=\"4\">\r\n          <Box\r\n            cursor=\"pointer\"\r\n            p=\"2\"\r\n            onClick={() => {\r\n              window.location.href = \"/home\";\r\n            }}\r\n            rounded=\"full\"\r\n            _hover={{ bg: \"whiteAlpha.200\" }}\r\n          >\r\n            <ArrowLeft />\r\n          </Box>\r\n          <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n            Create Community\r\n          </Text>\r\n        </Flex>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n        <Flex\r\n          mt=\"6\"\r\n          w={{ base: \"full\", md: \"80%\" }}\r\n          direction={{ base: \"column\", md: \"row\" }}\r\n        >\r\n          <Box minW=\"24\" mr=\"6\" mb=\"4\">\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mb=\"1\">\r\n              Logo\r\n            </Text>\r\n            <Box position=\"relative\" w=\"-webkit-fit-content\">\r\n              <Box\r\n                position=\"absolute\"\r\n                bg=\"blackAlpha.500\"\r\n                p=\"2\"\r\n                cursor=\"pointer\"\r\n                _hover={{ bg: \"blackAlpha.600\" }}\r\n                transitionDuration=\"200ms\"\r\n                roundedTopStart=\"xl\"\r\n                bottom=\"0\"\r\n                right=\"0\"\r\n                onClick={onOpen}\r\n              >\r\n                <Edit size=\"18px\" />\r\n              </Box>\r\n              <Image src={logo} w=\"24\" h=\"24\" rounded=\"lg\" />\r\n            </Box>\r\n          </Box>\r\n          <Box w=\"full\">\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n              Name *\r\n            </Text>\r\n            <Input\r\n              w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n              type=\"text\"\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Community name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <Text color=\"white\" mt=\"4\" fontWeight=\"medium\" fontSize=\"sm\">\r\n              Description\r\n            </Text>\r\n            <Textarea\r\n              w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n              type=\"email\"\r\n              mt=\"1.5\"\r\n              p=\"4\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Describe your community\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <Flex\r\n              mt=\"6\"\r\n              justify=\"end\"\r\n              w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n            >\r\n              <Button\r\n                display=\"flex\"\r\n                float=\"right\"\r\n                rounded=\"lg\"\r\n                w={loading ? \"200px\" : \"auto\"}\r\n                _focus={{}}\r\n                _active={{}}\r\n                color=\"black\"\r\n                onClick={() => createCommunity(name, description, logo)}\r\n              >\r\n                {loading ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  <>\r\n                    <CheckCircle /> <Text ml=\"2\">Create Community</Text>\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </Flex>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default NewCommunity;\r\n","import {\r\n  Flex,\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { CheckCircle, Edit, Upload } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport axios from \"axios\";\r\n\r\nfunction UpdateCommunity({\r\n  id,\r\n  communityName,\r\n  communityDescription,\r\n  communityLogo,\r\n  close,\r\n}) {\r\n  const Logos = [\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/defaultCommunityLogo_gUich_dto.svg?updatedAt=1633160835413\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-3_PXKqFbob4Lj.svg?updatedAt=1633165287477\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-2_7d7-btPTg.svg?updatedAt=1633165286592\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-1_JT81iTWJQGq.svg?updatedAt=1633165286130\",\r\n  ];\r\n\r\n  const { user } = User();\r\n  const [logo, setLogo] = useState(communityLogo);\r\n  const [name, setName] = useState(communityName);\r\n  const [description, setDescription] = useState(communityDescription);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const uploadLogo = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setLogo(res.data.url);\r\n      onClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const LogoModal = () => {\r\n    return (\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n          <ModalHeader>Choose a logo</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Flex wrap=\"wrap\">\r\n              <Flex\r\n                cursor=\"pointer\"\r\n                border=\"2px\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                _hover={{ borderColor: \"whiteAlpha.50\" }}\r\n                borderColor=\"transparent\"\r\n                mb=\"3\"\r\n                mr=\"3\"\r\n                w=\"24\"\r\n                h=\"24\"\r\n                rounded=\"xl\"\r\n                bg=\"whiteAlpha.300\"\r\n                onClick={() => {\r\n                  document.getElementById(\"file\").click();\r\n                }}\r\n              >\r\n                <Upload size=\"30px\" />\r\n              </Flex>\r\n              {Logos.map((data, key) => (\r\n                <Box\r\n                  key={key}\r\n                  cursor=\"pointer\"\r\n                  onClick={() => {\r\n                    setLogo(data);\r\n                  }}\r\n                >\r\n                  <Image\r\n                    border=\"4px\"\r\n                    borderColor={\r\n                      logo === data ? \"brand.primary\" : \"transparent\"\r\n                    }\r\n                    mb=\"3\"\r\n                    mr=\"3\"\r\n                    src={data}\r\n                    w=\"24\"\r\n                    h=\"24\"\r\n                    rounded=\"xl\"\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Flex>\r\n          </ModalBody>\r\n          <Input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            accept=\"image/*\"\r\n            display=\"none\"\r\n            onChange={(e) => uploadLogo(e.target.files[0])}\r\n          />\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              {uploading ? <Spinner /> : <>Done</>}\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const createCommunity = async (name, description, logo) => {\r\n    if (name.length > 3) {\r\n      setLogo(logo);\r\n      try {\r\n        setLoading(true);\r\n        const updates = {\r\n          id,\r\n          name,\r\n          description,\r\n          logo,\r\n          createdBy: [user?.email],\r\n        };\r\n\r\n        const { error } = await supabase.from(\"communities\").upsert(updates, {\r\n          returning: \"minimal\",\r\n        });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Community created successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        close();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      mt=\"6\"\r\n      w=\"full\"\r\n      direction={{ base: \"column\", md: \"row\" }}\r\n      color=\"white\"\r\n    >\r\n      <LogoModal />\r\n      <Box minW=\"24\" mr=\"6\" mb=\"4\">\r\n        <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mb=\"1\">\r\n          Logo\r\n        </Text>\r\n        <Box position=\"relative\" w=\"-webkit-fit-content\">\r\n          <Box\r\n            position=\"absolute\"\r\n            bg=\"blackAlpha.500\"\r\n            p=\"2\"\r\n            cursor=\"pointer\"\r\n            _hover={{ bg: \"blackAlpha.600\" }}\r\n            transitionDuration=\"200ms\"\r\n            roundedTopStart=\"xl\"\r\n            bottom=\"0\"\r\n            right=\"0\"\r\n            onClick={onOpen}\r\n          >\r\n            <Edit size=\"18px\" />\r\n          </Box>\r\n          <Image src={logo} w=\"24\" h=\"24\" rounded=\"lg\" />\r\n        </Box>\r\n      </Box>\r\n      <Box w=\"full\">\r\n        <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n          Name *\r\n        </Text>\r\n        <Input\r\n          value={name}\r\n          w=\"full\"\r\n          type=\"text\"\r\n          mt=\"1.5\"\r\n          py=\"5\"\r\n          rounded=\"lg\"\r\n          color=\"white\"\r\n          _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n          _focus={{ borderColor: \"brand.primary\" }}\r\n          borderColor=\"whiteAlpha.400\"\r\n          _placeholder={{ color: \"whiteAlpha.400\" }}\r\n          placeholder=\"Community name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Text color=\"white\" mt=\"4\" fontWeight=\"medium\" fontSize=\"sm\">\r\n          Description\r\n        </Text>\r\n        <Textarea\r\n          value={description}\r\n          w=\"full\"\r\n          type=\"email\"\r\n          mt=\"1.5\"\r\n          p=\"4\"\r\n          rounded=\"lg\"\r\n          color=\"white\"\r\n          _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n          _focus={{ borderColor: \"brand.primary\" }}\r\n          borderColor=\"whiteAlpha.400\"\r\n          _placeholder={{ color: \"whiteAlpha.400\" }}\r\n          placeholder=\"Describe your community\"\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <Flex mt=\"6\" justify=\"end\" w=\"full\">\r\n          <Button\r\n            display=\"flex\"\r\n            float=\"right\"\r\n            rounded=\"lg\"\r\n            w={loading ? \"100px\" : \"auto\"}\r\n            _focus={{}}\r\n            _active={{}}\r\n            color=\"black\"\r\n            onClick={() => createCommunity(name, description, logo)}\r\n          >\r\n            {loading ? (\r\n              <Spinner />\r\n            ) : (\r\n              <>\r\n                <CheckCircle /> <Text ml=\"2\">Save</Text>\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default UpdateCommunity;\r\n","import {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Box,\r\n  Flex,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowLeft } from \"react-feather\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction CurrentLocation({ username, communityName, link }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" experimental_spaceX=\"2\">\r\n      <Box\r\n        cursor=\"pointer\"\r\n        onClick={() => {\r\n          if (link) {\r\n            window.location.href = link;\r\n          } else {\r\n            history.goBack();\r\n          }\r\n        }}\r\n      >\r\n        <ArrowLeft size=\"18px\" />\r\n      </Box>\r\n      <Breadcrumb color=\"white\">\r\n        <BreadcrumbItem>\r\n          <BreadcrumbLink href=\"/home\">{username}</BreadcrumbLink>\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <BreadcrumbLink href=\"#\">{communityName}</BreadcrumbLink>\r\n        </BreadcrumbItem>\r\n      </Breadcrumb>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default CurrentLocation;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Text,\r\n  Divider,\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  ModalBody,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Settings, Plus } from \"react-feather\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\nimport EventCard from \"../../components/Cards/EventCard.component\";\r\nimport UpdateCommunity from \"../Update/UpdateCommunity.page\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction ManageCommunity(props) {\r\n  const id = props.match.params.id;\r\n  const [community, setCommunity] = useState(undefined);\r\n  const [upcomingEvents, setUpcomingEvents] = useState(undefined);\r\n  const { user } = User();\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useEffect(() => {\r\n    getCommunity();\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\"id, name, image, description, date, community, audience\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"community\", id)\r\n        .order(\"created_at\", { ascending: false });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      let uE = [];\r\n      let dE = [];\r\n      data.forEach((data) => {\r\n        if (isUpcoming(data.date)) {\r\n          uE.push(data);\r\n        } else {\r\n          dE.push(data);\r\n        }\r\n      });\r\n\r\n      setUpcomingEvents(uE);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const UpcomingEvents = () => {\r\n    return (\r\n      <>\r\n        <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n          <Link to={`/manage/community/${id}/events`}>\r\n            <Text\r\n              casing=\"capitalize\"\r\n              fontSize=\"sm\"\r\n              fontWeight=\"semibold\"\r\n              letterSpacing=\"2px\"\r\n              color=\"white\"\r\n            >\r\n              UPCOMING EVENTS\r\n            </Text>\r\n          </Link>\r\n          <Link to={`/manage/community/${id}/new/event`}>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              leftIcon={<Plus size=\"18px\" />}\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n\r\n        {upcomingEvents?.length > 0 ? (\r\n          upcomingEvents?.map((data, key) => (\r\n            <Flex wrap=\"wrap\" mt=\"4\">\r\n              <EventCard key={key} {...data} />\r\n            </Flex>\r\n          ))\r\n        ) : upcomingEvents ? (\r\n          <Flex\r\n            color=\"whiteAlpha.600\"\r\n            my=\"10\"\r\n            justify=\"center\"\r\n            textAlign=\"center\"\r\n          >\r\n            🐝 No upcoming events\r\n          </Flex>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      {community ? (\r\n        <Helmet>\r\n          <title>{community?.name} | Relm</title>\r\n        </Helmet>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Box>\r\n        <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\r\n          <ModalOverlay />\r\n          <ModalContent bg=\"#1D2023\">\r\n            <ModalHeader color=\"white\">\r\n              Settings <ModalCloseButton color=\"white\" />\r\n            </ModalHeader>\r\n\r\n            <ModalBody px=\"8\" pb=\"8\">\r\n              <UpdateCommunity\r\n                communityName={community?.name}\r\n                communityDescription={community?.description}\r\n                communityLogo={community?.logo}\r\n                id={community?.id}\r\n                close={onClose}\r\n              />\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n\r\n        <CurrentLocation\r\n          link=\"/home\"\r\n          username={user?.username}\r\n          communityName={community?.name}\r\n        />\r\n\r\n        <Flex justify=\"space-between\" alignItems=\"end\">\r\n          <Box>\r\n            <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"bold\">\r\n              {community?.name}\r\n            </Text>\r\n            {community?.description ? (\r\n              <Text fontSize={{ base: \"xs\", md: \"sm\" }} fontWeight=\"thin\">\r\n                {community?.description}\r\n              </Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            _hover={{ bg: \"whiteAlpha.200\" }}\r\n            rounded=\"full\"\r\n            p=\"2\"\r\n            cursor=\"pointer\"\r\n            onClick={() => onOpen()}\r\n          >\r\n            <Settings size=\"20px\" />\r\n          </Box>\r\n        </Flex>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n      </Box>\r\n      {upcomingEvents ? <UpcomingEvents /> : <></>}\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default ManageCommunity;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { Box, Divider, Text, Flex, Button } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Plus } from \"react-feather\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport EventCard from \"../../components/Cards/EventCard.component\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction Events(props) {\r\n  const id = props.match.params.id;\r\n  const [active, setActive] = useState(\"Upcoming\");\r\n  const [upcomingEvents, setUpcomingEvents] = useState(undefined);\r\n  const [doneEvents, setDoneEvents] = useState(undefined);\r\n  const NavigationItems = [\"Upcoming\", \"Done\"];\r\n  const [community, setCommunity] = useState(undefined);\r\n  const { user } = User();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      if (id) {\r\n        const { data, error } = await supabase\r\n          .from(\"events\")\r\n          .select(\"id, name, image, description, date, community, audience\")\r\n          .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n          .eq(\"community\", id)\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        let uE = [];\r\n        let dE = [];\r\n        data.forEach((data) => {\r\n          if (isUpcoming(data.date)) {\r\n            uE.push(data);\r\n          } else {\r\n            dE.push(data);\r\n          }\r\n        });\r\n        setDoneEvents(dE);\r\n        setUpcomingEvents(uE);\r\n      } else {\r\n        const { data, error } = await supabase\r\n          .from(\"events\")\r\n          .select(\"id, name, image, description, date, community, audience\")\r\n          .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        let uE = [];\r\n        let dE = [];\r\n        data.forEach((data) => {\r\n          if (isUpcoming(data.date)) {\r\n            uE.push(data);\r\n          } else {\r\n            dE.push(data);\r\n          }\r\n        });\r\n        setDoneEvents(dE);\r\n        setUpcomingEvents(uE);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const Navigation = ({ name }) => {\r\n    return (\r\n      <Box\r\n        py=\"2\"\r\n        px=\"4\"\r\n        borderBottom=\"2px\"\r\n        onClick={() => setActive(name)}\r\n        transitionDuration=\"200ms\"\r\n        cursor=\"pointer\"\r\n        color={active === name ? \"brand.primary\" : \"whiteAlpha.700\"}\r\n        _hover={{ color: active === name ? \"brand.primary\" : \"white\" }}\r\n        borderColor={active === name ? \"brand.primary\" : \"transparent\"}\r\n      >\r\n        <Text>{name}</Text>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Helmet>\r\n        <title>Events | Relm</title>\r\n      </Helmet>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Flex alignItems=\"center\" justify=\"space-between\">\r\n          <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n            Events\r\n          </Text>\r\n          <Button\r\n            size=\"sm\"\r\n            bg=\"alpha.white\"\r\n            border=\"1px\"\r\n            borderColor=\"transparent\"\r\n            leftIcon={<Plus size=\"18px\" />}\r\n            px=\"4\"\r\n            _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n            _focus={{}}\r\n            _active={{ bg: \"whiteAlpha.200\" }}\r\n            onClick={() => {\r\n              const to = id\r\n                ? `/manage/community/${id}/new/event`\r\n                : \"/new/event\";\r\n              window.location.href = to;\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Flex>\r\n        <Flex mt=\"3\" experimental_spaceX=\"3\">\r\n          {NavigationItems.map((data, key) => (\r\n            <Navigation name={data} />\r\n          ))}\r\n        </Flex>\r\n        <Divider color=\"white\" opacity=\"0.2\" />\r\n\r\n        <Flex wrap=\"wrap\" mt=\"6\">\r\n          {active === \"Upcoming\" ? (\r\n            upcomingEvents?.map((data, key) => (\r\n              <EventCard key={key} {...data} />\r\n            ))\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {active === \"Done\" ? (\r\n            doneEvents?.map((data, key) => <EventCard key={key} {...data} />)\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Flex>\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Divider,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  AspectRatio,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { ArrowLeft, Calendar, CheckCircle, MapPin } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction NewEvent(props) {\r\n  const id = props.match.params.id;\r\n  const Platforms = [\r\n    {\r\n      name: \"💻 Virtual\",\r\n      enum: \"Virtual\",\r\n      placeholder: \"Link to event\",\r\n    },\r\n    {\r\n      name: \"🌍 In Person\",\r\n      enum: \"InPerson\",\r\n      placeholder: \"Location to event\",\r\n    },\r\n  ];\r\n  const { user } = User();\r\n  const [active, setActive] = useState(Platforms[0]);\r\n  const [link, setLink] = useState(\"\");\r\n  const [image, setImage] = useState(\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/defaultEvent_GGD_P8xy-jP.png?updatedAt=1633174215871\"\r\n  );\r\n  const [name, setName] = useState(\"\");\r\n  const [date, setDate] = useState({});\r\n  const [description, setDescription] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [community, setCommunity] = useState(undefined);\r\n  const [communitySelected, setCommunitySelected] = useState(\"None\");\r\n  const [communities, setCommunities] = useState(undefined);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getCommunities();\r\n  }, []);\r\n\r\n  const uploadImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setImage(res.data.url);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const getCommunities = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")]);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunities(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const createEvent = async () => {\r\n    if (name.length > 3) {\r\n      setImage(image);\r\n      try {\r\n        setLoading(true);\r\n        let updates = {};\r\n\r\n        if (id) {\r\n          updates = {\r\n            name,\r\n            description,\r\n            content,\r\n            date,\r\n            link,\r\n            image,\r\n            admin: localStorage.getItem(\"email\"),\r\n            platform: active.enum,\r\n            createdBy: [localStorage.getItem(\"email\")],\r\n            community: id,\r\n          };\r\n          const { data } = await supabase\r\n            .from(\"communities\")\r\n            .select(\"id, events\")\r\n            .eq(\"id\", id)\r\n            .single();\r\n\r\n          await supabase\r\n            .from(\"communities\")\r\n            .upsert(\r\n              { id: data.id, events: data.events + 1 },\r\n              { returning: \"minimal\" }\r\n            )\r\n            .single();\r\n        } else {\r\n          updates = {\r\n            name,\r\n            description,\r\n            content,\r\n            date,\r\n            link,\r\n            image,\r\n            admin: localStorage.getItem(\"email\"),\r\n            platform: active.enum,\r\n            createdBy: [localStorage.getItem(\"email\")],\r\n            community: communitySelected === \"None\" ? null : communitySelected,\r\n          };\r\n        }\r\n\r\n        const EventData = await supabase\r\n          .from(\"events\")\r\n          .upsert(updates)\r\n          .single();\r\n        if (communitySelected !== \"None\") {\r\n          const { data } = await supabase\r\n            .from(\"communities\")\r\n            .select(\"id, events\")\r\n            .eq(\"id\", communitySelected)\r\n            .single();\r\n\r\n          await supabase\r\n            .from(\"communities\")\r\n            .upsert(\r\n              { id: data.id, events: data.events + 1 },\r\n              { returning: \"minimal\" }\r\n            );\r\n        }\r\n\r\n        if (EventData.error) {\r\n          throw EventData.error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Event created successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          window.location.href = `/manage/event/${EventData.data.id}`;\r\n        }, 1000);\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Event name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const EventPlatform = () => {\r\n    return (\r\n      <Box>\r\n        <Flex\r\n          fontSize=\"xl\"\r\n          fontWeight=\"semibold\"\r\n          color=\"brand.primary\"\r\n          alignItems=\"center\"\r\n          experimental_spaceX=\"3\"\r\n          mt=\"8\"\r\n          mb=\"4\"\r\n        >\r\n          <MapPin /> <Text>Where will it happen? *</Text>\r\n        </Flex>\r\n        <Flex\r\n          p=\"1.5\"\r\n          bg=\"whiteAlpha.200\"\r\n          w=\"-webkit-fit-content\"\r\n          experimental_spaceX=\"3\"\r\n          rounded=\"lg\"\r\n        >\r\n          {Platforms.map((data, key) => (\r\n            <Box\r\n              onClick={() => {\r\n                setActive(data);\r\n                setLink(\"\");\r\n              }}\r\n              cursor=\"pointer\"\r\n              color={data.name === active.name ? \"white\" : \"whiteAlpha.800\"}\r\n              _hover={{ color: \"white\" }}\r\n              transitionDuration=\"200ms\"\r\n              key={key}\r\n              bg={data.name === active.name ? \"whiteAlpha.300\" : \"transparent\"}\r\n              px=\"4\"\r\n              py=\"1\"\r\n              rounded=\"base\"\r\n            >\r\n              {data.name}\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Helmet>\r\n        <title>New Event | Relm</title>\r\n      </Helmet>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\" experimental_spaceX=\"4\">\r\n          {!id ? (\r\n            <Box\r\n              cursor=\"pointer\"\r\n              p=\"2\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n              rounded=\"full\"\r\n              _hover={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              <ArrowLeft />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n            Create Event\r\n          </Text>\r\n        </Flex>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n      </Box>\r\n      <Flex alignItems=\"center\" mt=\"6\" direction=\"column\">\r\n        <AspectRatio\r\n          ratio={1920 / 1080}\r\n          w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n          shadow=\"xl\"\r\n        >\r\n          <Box>\r\n            <Image rounded=\"lg\" src={image} />\r\n            <Button\r\n              position=\"absolute\"\r\n              bottom=\"0\"\r\n              left=\"0\"\r\n              m=\"4\"\r\n              size=\"sm\"\r\n              bg=\"blackAlpha.600\"\r\n              border=\"1px\"\r\n              onClick={() => document.getElementById(\"file\").click()}\r\n              borderColor=\"transparent\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"blackAlpha.800\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"blackAlpha.700\" }}\r\n            >\r\n              {uploading ? <Spinner /> : <>Change cover photo</>}\r\n            </Button>\r\n          </Box>\r\n        </AspectRatio>\r\n        <Input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          id=\"file\"\r\n          display=\"none\"\r\n          onChange={(e) => uploadImage(e.target.files[0])}\r\n        />\r\n        <Box w={{ base: \"full\", md: \"80%\", lg: \"70%\" }} mt=\"4\">\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              createEvent();\r\n            }}\r\n          >\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n              Event Name *\r\n            </Text>\r\n            <Input\r\n              w=\"full\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              type=\"text\"\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              isRequired={true}\r\n              px=\"0\"\r\n              rounded=\"none\"\r\n              color=\"white\"\r\n              fontSize=\"xl\"\r\n              borderTop=\"none\"\r\n              borderRight=\"none\"\r\n              borderLeft=\"none\"\r\n              borderBottom=\"1px\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Designing Session\"\r\n            />\r\n            <EventPlatform />\r\n            <Input\r\n              w=\"full\"\r\n              type=\"text\"\r\n              mt=\"3\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              isRequired={true}\r\n              value={link}\r\n              onChange={(e) => setLink(e.target.value)}\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder={active.placeholder}\r\n            />\r\n            <Flex\r\n              fontSize=\"xl\"\r\n              fontWeight=\"semibold\"\r\n              color=\"brand.primary\"\r\n              alignItems=\"center\"\r\n              experimental_spaceX=\"3\"\r\n              mt=\"8\"\r\n            >\r\n              <Calendar /> <Text>When will it happen? *</Text>\r\n            </Flex>\r\n            <Flex experimental_spaceX=\"4\" mt=\"2\">\r\n              <Input\r\n                w=\"full\"\r\n                type=\"date\"\r\n                placeholder=\"Date\"\r\n                onChange={(e) => {\r\n                  const dateString = e.target.value;\r\n                  console.log(dateString);\r\n                  const dateFormatted = dateString.split(\"-\");\r\n                  setDate({\r\n                    ...date,\r\n                    date: dateFormatted[2],\r\n                    month: dateFormatted[1],\r\n                    year: dateFormatted[0],\r\n                  });\r\n                }}\r\n                mt=\"1.5\"\r\n                py=\"5\"\r\n                rounded=\"lg\"\r\n                isRequired={true}\r\n                color=\"white\"\r\n                _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                _focus={{ borderColor: \"brand.primary\" }}\r\n                borderColor=\"whiteAlpha.400\"\r\n                _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              />\r\n              <Input\r\n                w={{ sm: \"70%\", lg: \"40%\" }}\r\n                type=\"time\"\r\n                placeholder=\"Time\"\r\n                onChange={(e) => {\r\n                  setDate({\r\n                    ...date,\r\n                    time: moment(e.target.value, \"HH:mm\").format(\"hh:mm A\"),\r\n                  });\r\n                }}\r\n                mt=\"1.5\"\r\n                isRequired={true}\r\n                py=\"5\"\r\n                rounded=\"lg\"\r\n                color=\"white\"\r\n                _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                _focus={{ borderColor: \"brand.primary\" }}\r\n                borderColor=\"whiteAlpha.400\"\r\n                _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              />\r\n            </Flex>\r\n            <Text mt=\"1\" color=\"whiteAlpha.500\">\r\n              * Date and time is in GMT+5:30\r\n            </Text>\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"6\">\r\n              Description\r\n            </Text>\r\n            <Input\r\n              w=\"full\"\r\n              type=\"text\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Describe about your event in brief\"\r\n            />\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"4\">\r\n              Content\r\n            </Text>\r\n            <Textarea\r\n              w=\"full\"\r\n              onChange={(e) => setContent(e.target.value)}\r\n              type=\"text\"\r\n              mt=\"1.5\"\r\n              py=\"3\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Write about your event\"\r\n            />\r\n            {!community ? (\r\n              <>\r\n                <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"4\">\r\n                  Community\r\n                </Text>\r\n                <Select\r\n                  color=\"white\"\r\n                  _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                  _focus={{ borderColor: \"brand.primary\" }}\r\n                  borderColor=\"whiteAlpha.400\"\r\n                  _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                  mt=\"2\"\r\n                  onChange={(e) => setCommunitySelected(e.target.value)}\r\n                >\r\n                  <option\r\n                    style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                    value={null}\r\n                  >\r\n                    None\r\n                  </option>\r\n                  {communities?.map((data, key) => (\r\n                    <option\r\n                      key={key}\r\n                      style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                      value={data.id}\r\n                    >\r\n                      {data.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Button\r\n              color=\"black\"\r\n              float=\"right\"\r\n              mt=\"6\"\r\n              type=\"submit\"\r\n              rounded=\"lg\"\r\n              _focus={{}}\r\n              _active={{}}\r\n              leftIcon={loading ? <Spinner /> : <CheckCircle size=\"20px\" />}\r\n            >\r\n              {loading ? <></> : <>Create Event</>}\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </Flex>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default NewEvent;\r\n","import { Table, Box, Thead, Tr, Th, Tbody, Td, Text } from \"@chakra-ui/react\";\r\n\r\nfunction AudienceList({ audience, communityId }) {\r\n  return (\r\n    <Box border=\"1px\" rounded=\"xl\" mt=\"4\" borderColor=\"whiteAlpha.400\">\r\n      <Table variant=\"simple\" colorScheme=\"whiteAlpha\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th color=\"whiteAlpha.600\">Name</Th>\r\n            <Th\r\n              color=\"whiteAlpha.600\"\r\n              display={{ base: \"none\", md: \"table-cell\" }}\r\n            >\r\n              Email\r\n            </Th>\r\n            <Th color=\"whiteAlpha.600\">Events</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {audience?.length > 0 ? (\r\n            audience?.map((data, key) => (\r\n              <Tr key={key}>\r\n                <Td maxW={{ base: \"100px\", md: \"200px\" }}>{data.name}</Td>\r\n                <Td display={{ base: \"none\", md: \"table-cell\" }} maxW=\"200px\">\r\n                  {data.email}\r\n                </Td>\r\n                <Td>{data.events.length}</Td>\r\n              </Tr>\r\n            ))\r\n          ) : (\r\n            <Text py=\"2\" px=\"6\" color=\"whiteAlpha.600\">\r\n              No guests\r\n            </Text>\r\n          )}\r\n        </Tbody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AudienceList;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Flex,\r\n  Avatar,\r\n  Box,\r\n  Text,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalCloseButton,\r\n  ModalFooter,\r\n  Button,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction HostCard({ id, admin, email }) {\r\n  const [user, setUser] = useState(undefined);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const removeHost = async (email) => {\r\n    try {\r\n      const { data } = await supabase\r\n        .from(\"events\")\r\n        .select(\"id, createdBy\")\r\n        .eq(\"id\", id)\r\n        .single();\r\n      const newCreatedBy = [];\r\n      data?.createdBy.forEach((data) => {\r\n        if (data !== email) {\r\n          newCreatedBy.push(data);\r\n        }\r\n      });\r\n      await supabase\r\n        .from(\"events\")\r\n        .upsert(\r\n          { id: data.id, createdBy: newCreatedBy },\r\n          { returning: \"minimal\" }\r\n        );\r\n\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const RemoveHostModal = () => {\r\n    return (\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Flex\r\n              transitionDuration=\"200ms\"\r\n              overflow=\"clip\"\r\n              p=\"2\"\r\n              alignItems=\"center\"\r\n              rounded=\"xl\"\r\n              w=\"full\"\r\n              experimental_spaceX=\"4\"\r\n              maxW={{ base: \"full\", md: \"280px\" }}\r\n            >\r\n              <Avatar\r\n                size=\"md\"\r\n                src={user?.avatar_url}\r\n                name={user?.username || email}\r\n              />\r\n              <Box>\r\n                <Text\r\n                  align=\"left\"\r\n                  color=\"white\"\r\n                  whiteSpace=\"nowrap\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"lg\"\r\n                >\r\n                  {user?.username}\r\n                </Text>\r\n                <Text\r\n                  align=\"left\"\r\n                  color=\"white\"\r\n                  whiteSpace=\"nowrap\"\r\n                  fontSize={user ? \"xs\" : \"sm\"}\r\n                >\r\n                  {email}\r\n                </Text>\r\n              </Box>\r\n            </Flex>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"whiteAlpha.300\"\r\n              mr=\"2\"\r\n              _hover={{}}\r\n              _active={{}}\r\n              onClick={onClose}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"red\"\r\n              _hover={{}}\r\n              _active={{}}\r\n              onClick={() => {\r\n                if (email === window.localStorage.getItem(\"email\")) {\r\n                  toast({\r\n                    title: \"Error\",\r\n                    position: \"bottom\",\r\n                    description: \"Cannot remove admin from host\",\r\n                    status: \"error\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                  });\r\n                } else {\r\n                  removeHost(email);\r\n                }\r\n              }}\r\n            >\r\n              Remove from host\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", email)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      onClick={() => {\r\n        if (admin === window.localStorage.getItem(\"email\")) {\r\n          onOpen();\r\n        }\r\n      }}\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      p=\"2\"\r\n      alignItems=\"center\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW={{ base: \"full\", md: \"280px\" }}\r\n    >\r\n      <RemoveHostModal />\r\n      <Avatar size=\"md\" src={user?.avatar_url} name={user?.username || email} />\r\n      <Box>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontWeight=\"semibold\"\r\n          fontSize=\"lg\"\r\n        >\r\n          {user?.username}\r\n        </Text>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontSize={user ? \"xs\" : \"sm\"}\r\n        >\r\n          {email}\r\n        </Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default HostCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  AspectRatio,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { Calendar, CheckCircle, MapPin } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nfunction UpdateEvent({\r\n  eventId,\r\n  eventName,\r\n  eventDescription,\r\n  eventImage,\r\n  eventPlatform,\r\n  eventLink,\r\n  eventDate,\r\n  eventContent,\r\n}) {\r\n  const Platforms = [\r\n    {\r\n      name: \"💻 Virtual\",\r\n      enum: \"Virtual\",\r\n      placeholder: \"Link to event\",\r\n    },\r\n    {\r\n      name: \"🌍 In Person\",\r\n      enum: \"InPerson\",\r\n      placeholder: \"Location to event\",\r\n    },\r\n  ];\r\n  const [active, setActive] = useState(\r\n    eventPlatform === \"Virtual\" ? Platforms[0] : Platforms[1]\r\n  );\r\n  const [link, setLink] = useState(eventLink);\r\n  const [image, setImage] = useState(eventImage);\r\n  const [name, setName] = useState(eventName);\r\n  const [date, setDate] = useState(eventDate);\r\n  const [description, setDescription] = useState(eventDescription);\r\n  const [content, setContent] = useState(eventContent);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const uploadImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setImage(res.data.url);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const updateEvent = async () => {\r\n    if (name.length > 3) {\r\n      try {\r\n        setLoading(true);\r\n        let updates = {};\r\n\r\n        updates = {\r\n          id: eventId,\r\n          name,\r\n          description,\r\n          content,\r\n          date,\r\n          link,\r\n          image,\r\n          platform: active.enum,\r\n        };\r\n\r\n        const { error } = await supabase.from(\"events\").upsert(updates, {\r\n          returning: \"minimal\",\r\n        });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Event updated successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Event name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const EventPlatform = () => {\r\n    return (\r\n      <Box>\r\n        <Flex\r\n          fontSize=\"xl\"\r\n          fontWeight=\"semibold\"\r\n          color=\"brand.primary\"\r\n          alignItems=\"center\"\r\n          experimental_spaceX=\"3\"\r\n          mt=\"8\"\r\n          mb=\"4\"\r\n        >\r\n          <MapPin /> <Text>Where will it happen? *</Text>\r\n        </Flex>\r\n        <Flex\r\n          p=\"1.5\"\r\n          bg=\"whiteAlpha.200\"\r\n          w=\"-webkit-fit-content\"\r\n          experimental_spaceX=\"3\"\r\n          rounded=\"lg\"\r\n        >\r\n          {Platforms.map((data, key) => (\r\n            <Box\r\n              onClick={() => {\r\n                setActive(data);\r\n                setLink(\"\");\r\n              }}\r\n              cursor=\"pointer\"\r\n              color={data.name === active.name ? \"white\" : \"whiteAlpha.800\"}\r\n              _hover={{ color: \"white\" }}\r\n              transitionDuration=\"200ms\"\r\n              key={key}\r\n              bg={data.name === active.name ? \"whiteAlpha.300\" : \"transparent\"}\r\n              px=\"4\"\r\n              py=\"1\"\r\n              rounded=\"base\"\r\n            >\r\n              {data.name}\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" mt=\"6\" direction=\"column\" color=\"white\">\r\n      <AspectRatio ratio={1920 / 1080} w=\"full\" shadow=\"xl\">\r\n        <Box>\r\n          <Image rounded=\"lg\" src={image} />\r\n          <Button\r\n            position=\"absolute\"\r\n            bottom=\"0\"\r\n            left=\"0\"\r\n            m=\"4\"\r\n            size=\"sm\"\r\n            bg=\"blackAlpha.600\"\r\n            border=\"1px\"\r\n            onClick={() => document.getElementById(\"file\").click()}\r\n            borderColor=\"transparent\"\r\n            _hover={{ borderColor: \"whiteAlpha.200\", bg: \"blackAlpha.800\" }}\r\n            _focus={{}}\r\n            _active={{ bg: \"blackAlpha.700\" }}\r\n          >\r\n            {uploading ? <Spinner /> : <>Change cover photo</>}\r\n          </Button>\r\n        </Box>\r\n      </AspectRatio>\r\n      <Input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        id=\"file\"\r\n        display=\"none\"\r\n        onChange={(e) => uploadImage(e.target.files[0])}\r\n      />\r\n      <Box w=\"full\" mt=\"4\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            updateEvent();\r\n          }}\r\n        >\r\n          <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n            Event Name *\r\n          </Text>\r\n          <Input\r\n            w=\"full\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            type=\"text\"\r\n            value={name}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            isRequired={true}\r\n            px=\"0\"\r\n            rounded=\"none\"\r\n            color=\"white\"\r\n            fontSize=\"xl\"\r\n            borderTop=\"none\"\r\n            borderRight=\"none\"\r\n            borderLeft=\"none\"\r\n            borderBottom=\"1px\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Designing Session\"\r\n          />\r\n          <EventPlatform />\r\n          <Input\r\n            w=\"full\"\r\n            type=\"text\"\r\n            mt=\"3\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            isRequired={true}\r\n            value={link}\r\n            onChange={(e) => setLink(e.target.value)}\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder={active.placeholder}\r\n          />\r\n          <Flex\r\n            fontSize=\"xl\"\r\n            fontWeight=\"semibold\"\r\n            color=\"brand.primary\"\r\n            alignItems=\"center\"\r\n            experimental_spaceX=\"3\"\r\n            mt=\"8\"\r\n          >\r\n            <Calendar /> <Text>When will it happen? *</Text>\r\n          </Flex>\r\n          <Flex experimental_spaceX=\"4\" mt=\"2\">\r\n            <Input\r\n              w=\"full\"\r\n              type=\"date\"\r\n              defaultValue={\r\n                eventDate.year + \"-\" + eventDate.month + \"-\" + eventDate.date\r\n              }\r\n              placeholder=\"Date\"\r\n              onChange={(e) => {\r\n                const dateString = e.target.value;\r\n                console.log(dateString);\r\n                const dateFormatted = dateString.split(\"-\");\r\n                setDate({\r\n                  ...date,\r\n                  date: dateFormatted[2],\r\n                  month: dateFormatted[1],\r\n                  year: dateFormatted[0],\r\n                });\r\n                console.log(date);\r\n              }}\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              isRequired={true}\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            />\r\n            <Input\r\n              w={{ sm: \"70%\", lg: \"40%\" }}\r\n              type=\"time\"\r\n              placeholder=\"Time\"\r\n              defaultValue={moment(eventDate.time, \"hh:mm A\").format(\"HH:mm\")}\r\n              onChange={(e) => {\r\n                setDate({\r\n                  ...date,\r\n                  time: moment(e.target.value, \"HH:mm\").format(\"hh:mm A\"),\r\n                });\r\n              }}\r\n              mt=\"1.5\"\r\n              isRequired={true}\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            />\r\n          </Flex>\r\n          <Text mt=\"1\" color=\"whiteAlpha.500\">\r\n            * Date and time is in GMT+5:30\r\n          </Text>\r\n          <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"6\">\r\n            Description\r\n          </Text>\r\n          <Input\r\n            value={description}\r\n            w=\"full\"\r\n            type=\"text\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Describe about your event in brief\"\r\n          />\r\n          <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"4\">\r\n            Content\r\n          </Text>\r\n          <Textarea\r\n            w=\"full\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            type=\"text\"\r\n            mt=\"1.5\"\r\n            py=\"3\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Write about your event\"\r\n          />\r\n\r\n          <Button\r\n            color=\"black\"\r\n            float=\"right\"\r\n            mt=\"6\"\r\n            type=\"submit\"\r\n            rounded=\"lg\"\r\n            _focus={{}}\r\n            _active={{}}\r\n            leftIcon={\r\n              loading ? <Spinner size=\"sm\" /> : <CheckCircle size=\"20px\" />\r\n            }\r\n          >\r\n            Update Event\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default UpdateEvent;\r\n","export function formatDate(date) {\r\n  const Months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  if (date) {\r\n    return `${Months[date.month - 1]} ${date.date}, ${date.time} GMT+5:30`;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Divider,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  useClipboard,\r\n  Tooltip,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalHeader,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n  Button,\r\n  useToast,\r\n  Checkbox,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { Check, Settings } from \"react-feather\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { Calendar, Clipboard, Plus, ArrowLeft } from \"react-feather\";\r\nimport AudienceList from \"../../components/Misc/AudienceList.component\";\r\nimport HostCard from \"../../components/Cards/HostCard.component\";\r\nimport { useHistory } from \"react-router\";\r\nimport UpdateEvent from \"../Update/UpdateEvent.page\";\r\nimport { formatDate } from \"../../Helpers/dateFormatter\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction ManageEvent(props) {\r\n  const id = props.match.params.id;\r\n  const [event, setEvent] = useState(undefined);\r\n  const [audience, setAudience] = useState(undefined);\r\n  const [createdBy, setCreatedBy] = useState([]);\r\n  const { hasCopied, onCopy } = useClipboard(\r\n    `${window.location.origin}/event/${id}`\r\n  );\r\n  const history = useHistory();\r\n  const toast = useToast();\r\n  const [isListed, setIsListed] = useState(false);\r\n  const [registrationOpen, setRegistrationOpen] = useState(false);\r\n  const [newChanges, setNewChanges] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useEffect(() => {\r\n    getEvent();\r\n    getAudience();\r\n  }, []);\r\n\r\n  const getAudience = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"audience\")\r\n        .select(\"name, email, events\")\r\n        .contains(\"events\", [id]);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setAudience(data);\r\n\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getEvent = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\r\n          \"id, name, image, link, description, content, date, community, audience, createdBy, admin, isListed, isOpen,platform\"\r\n        )\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setEvent(data);\r\n      setIsListed(data.isListed);\r\n      setRegistrationOpen(data.isOpen);\r\n      setCreatedBy(data.createdBy);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateEvent = async () => {\r\n    try {\r\n      setLoading(true);\r\n      let updates = {};\r\n      updates = {\r\n        id,\r\n        isOpen: registrationOpen,\r\n        isListed,\r\n      };\r\n      console.log(isListed, registrationOpen);\r\n      console.log(updates);\r\n\r\n      const { error } = await supabase.from(\"events\").upsert(updates, {\r\n        returning: \"minimal\",\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n      setNewChanges(false);\r\n    }\r\n  };\r\n\r\n  function validateEmail(email) {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  const AddHost = () => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const AddHostModal = () => {\r\n      return (\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n            <ModalHeader>Add host</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                _placeholder={{ color: \"whiteAlpha.500\" }}\r\n                placeholder=\"Email\"\r\n                _focus={{ borderColor: \"brand.primary\" }}\r\n              />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                bg=\"brand.primary\"\r\n                _hover={{}}\r\n                _active={{}}\r\n                onClick={async () => {\r\n                  if (validateEmail(document.getElementById(\"email\").value)) {\r\n                    createdBy.push(document.getElementById(\"email\").value);\r\n\r\n                    try {\r\n                      const { error } = await supabase\r\n                        .from(\"events\")\r\n                        .upsert({ id, createdBy }, { returning: \"minimal\" });\r\n\r\n                      if (error) {\r\n                        throw error;\r\n                      }\r\n                    } catch (error) {\r\n                      console.log(error);\r\n                    }\r\n                    onClose();\r\n                    window.location.reload();\r\n                  } else {\r\n                    toast({\r\n                      title: \"Error\",\r\n                      position: \"bottom\",\r\n                      description: \"Enter a valid email address\",\r\n                      status: \"error\",\r\n                      duration: 5000,\r\n                      isClosable: true,\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Flex\r\n        border=\"2px\"\r\n        cursor=\"pointer\"\r\n        mr={{ md: \"4\" }}\r\n        mb=\"4\"\r\n        borderColor=\"transparent\"\r\n        transitionDuration=\"200ms\"\r\n        _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n        overflow=\"clip\"\r\n        bg=\"whiteAlpha.50\"\r\n        p=\"2\"\r\n        justify=\"center\"\r\n        borderStyle=\"dashed\"\r\n        alignItems=\"center\"\r\n        rounded=\"xl\"\r\n        w=\"full\"\r\n        onClick={onOpen}\r\n        minH=\"14\"\r\n        experimental_spaceX=\"4\"\r\n        maxW={{ base: \"full\", md: \"280px\" }}\r\n      >\r\n        <AddHostModal />\r\n        <Plus />\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  const UpdateEventModal = () => {\r\n    return (\r\n      <Modal size=\"3xl\" isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent bg=\"#1D2023\">\r\n          <ModalHeader color=\"white\">\r\n            Settings <ModalCloseButton color=\"white\" />\r\n          </ModalHeader>\r\n\r\n          <ModalBody px=\"8\" pb=\"8\">\r\n            <UpdateEvent\r\n              eventId={id}\r\n              eventName={event?.name}\r\n              eventContent={event?.content}\r\n              eventDate={event?.date}\r\n              eventDescription={event?.description}\r\n              eventPlatform={event?.platform}\r\n              eventImage={event?.image}\r\n              eventLink={event?.link}\r\n            />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const CopyInput = () => {\r\n    return (\r\n      <InputGroup>\r\n        <Input\r\n          cursor=\"pointer\"\r\n          transitionDuration=\"200ms\"\r\n          onClick={() => {\r\n            window.open(`${window.location.origin}/event/${id}`, \"_blank\");\r\n          }}\r\n          _hover={{ color: \"brand.primary\" }}\r\n          value={`${window.location.origin}/event/${id}`}\r\n          isReadOnly\r\n          rounded=\"lg\"\r\n          border=\"none\"\r\n          bg=\"whiteAlpha.200\"\r\n        />\r\n\r\n        <InputRightElement\r\n          onClick={() => onCopy()}\r\n          cursor=\"pointer\"\r\n          p=\"2\"\r\n          roundedRight=\"lg\"\r\n          transitionDuration=\"200ms\"\r\n          _hover={{ color: \"brand.primary\" }}\r\n        >\r\n          <Tooltip label=\"Copy to clipboard\">\r\n            {hasCopied ? <Check /> : <Clipboard size=\"20px\" />}\r\n          </Tooltip>\r\n        </InputRightElement>\r\n      </InputGroup>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate>\r\n      {event ? (\r\n        <Helmet>\r\n          <title>{event?.name} | Relm</title>\r\n        </Helmet>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Box>\r\n        <Flex justify=\"space-between\" alignItems=\"end\">\r\n          <Box>\r\n            <Flex experimental_spaceX=\"3\" alignItems=\"center\">\r\n              <Box\r\n                cursor=\"pointer\"\r\n                p=\"2\"\r\n                w=\"10\"\r\n                h=\"10\"\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n                rounded=\"full\"\r\n                _hover={{ bg: \"whiteAlpha.200\" }}\r\n              >\r\n                <ArrowLeft />\r\n              </Box>\r\n              <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"bold\">\r\n                {event?.name}\r\n              </Text>\r\n            </Flex>\r\n            <Flex\r\n              fontSize=\"xs\"\r\n              color=\"brand.primary\"\r\n              experimental_spaceX=\"1.5\"\r\n              alignItems=\"center\"\r\n              mt=\"1\"\r\n            >\r\n              <Calendar size=\"14px\" />\r\n              <Text>{formatDate(event?.date)}</Text>\r\n            </Flex>\r\n            {event?.description ? (\r\n              <Text\r\n                mt=\"1\"\r\n                fontSize={{ base: \"xs\", md: \"sm\" }}\r\n                fontWeight=\"thin\"\r\n              >\r\n                {event?.description}\r\n              </Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Flex direction=\"column\" alignItems=\"end\" experimental_spaceY=\"1\">\r\n            <Box\r\n              _hover={{ bg: \"whiteAlpha.200\" }}\r\n              rounded=\"full\"\r\n              p=\"2\"\r\n              cursor=\"pointer\"\r\n              onClick={onOpen}\r\n            >\r\n              <UpdateEventModal />\r\n              <Settings size=\"20px\" />\r\n            </Box>\r\n            <Box display={{ base: \"none\", md: \"block\" }}>\r\n              <Text fontSize=\"xs\" mb=\"1\" color=\"whiteAlpha.500\">\r\n                Sharable invite link\r\n              </Text>\r\n              <CopyInput />\r\n            </Box>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n      <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n      <Box display={{ base: \"block\", md: \"none\" }}>\r\n        <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n          <Text\r\n            casing=\"capitalize\"\r\n            fontSize=\"sm\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"2px\"\r\n            color=\"white\"\r\n          >\r\n            INVITE LINK\r\n          </Text>\r\n        </Flex>\r\n        <Box mt=\"2\">\r\n          <CopyInput />\r\n        </Box>\r\n      </Box>\r\n      <Flex justify=\"space-between\" mt=\"8\" alignItems=\"center\">\r\n        <Text\r\n          casing=\"capitalize\"\r\n          fontSize=\"sm\"\r\n          fontWeight=\"semibold\"\r\n          letterSpacing=\"2px\"\r\n          color=\"white\"\r\n        >\r\n          GUESTS\r\n        </Text>\r\n      </Flex>\r\n      <AudienceList audience={audience} />\r\n      <Flex justify=\"space-between\" mt=\"8\" alignItems=\"center\">\r\n        <Text\r\n          casing=\"capitalize\"\r\n          fontSize=\"sm\"\r\n          fontWeight=\"semibold\"\r\n          letterSpacing=\"2px\"\r\n          color=\"white\"\r\n        >\r\n          HOST & MANAGERS\r\n        </Text>\r\n      </Flex>\r\n      <Flex mt=\"4\" wrap=\"wrap\">\r\n        {event?.createdBy.map((data, key) => (\r\n          <HostCard id={id} admin={event?.admin} email={data} key={key} />\r\n        ))}\r\n        {window.localStorage.getItem(\"email\") === event?.admin ? (\r\n          <AddHost />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Flex>\r\n      <Flex direction=\"column\" mt=\"4\">\r\n        <Checkbox\r\n          w=\"-webkit-fit-content\"\r\n          onChange={(e) => {\r\n            setIsListed(e.target.checked);\r\n            setNewChanges(true);\r\n          }}\r\n          isChecked={isListed}\r\n        >\r\n          Listed publicly\r\n        </Checkbox>\r\n        <Checkbox\r\n          w=\"-webkit-fit-content\"\r\n          onChange={(e) => {\r\n            setRegistrationOpen(e.target.checked);\r\n            setNewChanges(true);\r\n          }}\r\n          isChecked={registrationOpen}\r\n        >\r\n          Registrations open\r\n        </Checkbox>\r\n        <Box>\r\n          <Button\r\n            display={newChanges ? \"block\" : \"none\"}\r\n            float=\"right\"\r\n            size=\"sm\"\r\n            mt=\"2\"\r\n            minW=\"28\"\r\n            onClick={() => {\r\n              updateEvent();\r\n            }}\r\n            colorScheme=\"whiteAlpha\"\r\n          >\r\n            {loading ? <Spinner size=\"sm\" /> : <> Save changes</>}\r\n          </Button>\r\n        </Box>\r\n      </Flex>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default ManageEvent;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { Box, Text, Divider } from \"@chakra-ui/react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport AudienceList from \"../../components/Misc/AudienceList.component\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction Audience(props) {\r\n  const id = props.match.params.id;\r\n  const { user } = User();\r\n  const [audience, setAudience] = useState(undefined);\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getAudience();\r\n  }, []);\r\n\r\n  const getAudience = async () => {\r\n    try {\r\n      if (id) {\r\n        const { data, error } = await supabase\r\n          .from(\"audience\")\r\n          .select(\"name, email, events\")\r\n          .contains(\"communities\", [id])\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n        setAudience(data);\r\n      } else {\r\n        const { data, error } = await supabase\r\n          .from(\"audience\")\r\n          .select(\"name, email, events\")\r\n          .eq(\"createdBy\", localStorage.getItem(\"email\"))\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        setAudience(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Helmet>\r\n        <title>Audience | Relm</title>\r\n      </Helmet>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n          Audience\r\n        </Text>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n        <AudienceList audience={audience} communityId={id} />\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Audience;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Flex, Avatar, Box, Text } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction EventHostCard({ email }) {\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    console.log(\"again\");\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", email)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mb=\"2\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      p=\"2\"\r\n      alignItems=\"center\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW={{ base: \"full\", md: \"280px\" }}\r\n    >\r\n      <Avatar size=\"sm\" src={user?.avatar_url} name={user?.username || email} />\r\n      <Box>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontWeight={user?.username ? \"semibold\" : \"normal\"}\r\n          fontSize=\"sm\"\r\n        >\r\n          {user?.username ? user?.username : email}\r\n        </Text>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontSize=\"xx-small\"\r\n        >\r\n          Host\r\n        </Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default EventHostCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Navigation from \"../../components/Navigation/Navigation.component\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  AspectRatio,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  Divider,\r\n  Link,\r\n  Avatar,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { formatDate } from \"../../Helpers/dateFormatter\";\r\nimport {\r\n  ArrowUpRight,\r\n  Calendar,\r\n  CheckCircle,\r\n  MapPin,\r\n  XCircle,\r\n} from \"react-feather\";\r\nimport Showdown from \"showdown\";\r\nimport \"./event.css\";\r\nimport EventHostCard from \"./EventHostCard.component\";\r\nimport Footer from \"../../components/Footer/Footer.component\";\r\n\r\nfunction Event(props) {\r\n  const id = props.match.params.id;\r\n  const [event, setEvent] = useState(undefined);\r\n  const converter = new Showdown.Converter();\r\n  const [user, setUser] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getEvent();\r\n    if (window.localStorage.getItem(\"email\")) {\r\n      getUser();\r\n    }\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", window.localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n      setName(data.username);\r\n      setEmail(data.email);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getEvent = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\r\n          \"name, description, date, community, image, content, platform, link, isListed, isOpen, createdBy, admin, audience\"\r\n        )\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setEvent(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const registerUser = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await supabase\r\n        .from(\"audience\")\r\n        .select(\"events, communities\")\r\n        .eq(\"email\", email)\r\n        .single();\r\n\r\n      let events = [];\r\n      let communities = [];\r\n      if (data) {\r\n        data.events.push(id);\r\n        data.communities.push(event?.community);\r\n        events = data.events;\r\n        communities = data.communities;\r\n      } else {\r\n        events = [id];\r\n        communities = [event?.community];\r\n      }\r\n      const updates = {\r\n        email: email,\r\n        name: name,\r\n        events: [...new Set(events)],\r\n        communities: [...new Set(communities)],\r\n        createdBy: event?.admin,\r\n      };\r\n\r\n      await supabase.from(\"audience\").upsert(updates, { returning: \"minimal\" });\r\n\r\n      const AudienceEventData = await supabase\r\n        .from(\"audience\")\r\n        .select(\"name, email, events\")\r\n        .contains(\"events\", [id]);\r\n\r\n      await supabase\r\n        .from(\"events\")\r\n        .upsert(\r\n          { id, audience: AudienceEventData.data.length },\r\n          { returning: \"minimal\" }\r\n        );\r\n      if (event?.community) {\r\n        const AudienceCommunityData = await supabase\r\n          .from(\"audience\")\r\n          .select(\"name, email, events\")\r\n          .contains(\"communities\", [event?.community]);\r\n\r\n        await supabase.from(\"communities\").upsert(\r\n          {\r\n            id: event?.community,\r\n            audience: AudienceCommunityData.data.length,\r\n          },\r\n          { returning: \"minimal\" }\r\n        );\r\n      }\r\n      toast({\r\n        title: \"Success\",\r\n        position: \"bottom\",\r\n        description: \"You are successfully registered!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const ProfileDisplay = () => {\r\n    return (\r\n      <Flex\r\n        cursor=\"default\"\r\n        borderColor=\"transparent\"\r\n        transitionDuration=\"200ms\"\r\n        overflow=\"clip\"\r\n        mb=\"4\"\r\n        alignItems=\"center\"\r\n        rounded=\"xl\"\r\n        w=\"full\"\r\n        experimental_spaceX=\"4\"\r\n      >\r\n        <Avatar size=\"md\" src={user?.avatar_url} name={user?.username} />\r\n        <Box>\r\n          <Text\r\n            align=\"left\"\r\n            color=\"white\"\r\n            whiteSpace=\"nowrap\"\r\n            fontWeight=\"semibold\"\r\n            fontSize=\"lg\"\r\n          >\r\n            {user?.username}\r\n          </Text>\r\n          <Text align=\"left\" color=\"white\" whiteSpace=\"nowrap\" fontSize=\"xs\">\r\n            {user?.email}\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {event ? (\r\n        <>\r\n          {event?.isListed ? (\r\n            <Flex\r\n              bg=\"brand.secondary\"\r\n              alignItems=\"center\"\r\n              w=\"full\"\r\n              direction=\"column\"\r\n            >\r\n              <Box\r\n                minH=\"100vh\"\r\n                py=\"6\"\r\n                px={{ base: \"6\", md: \"12\" }}\r\n                maxW=\"1100px\"\r\n                w=\"full\"\r\n                color=\"white\"\r\n              >\r\n                <Box px={{ lg: \"20\" }}>\r\n                  <Navigation communityId={event?.community} />\r\n                </Box>\r\n                <Box mx=\"auto\" mt=\"6\">\r\n                  <AspectRatio ratio={1920 / 1080}>\r\n                    <Image src={event?.image} rounded=\"xl\" />\r\n                  </AspectRatio>\r\n                  <Box>\r\n                    <Text fontWeight=\"bold\" fontSize=\"3xl\" mt=\"4\">\r\n                      {event?.name}\r\n                    </Text>\r\n                    <Flex\r\n                      fontSize=\"sm\"\r\n                      color=\"brand.primary\"\r\n                      experimental_spaceX=\"1.5\"\r\n                      alignItems=\"center\"\r\n                      mt=\"1\"\r\n                    >\r\n                      <Calendar size=\"18px\" />\r\n                      <Text>{formatDate(event?.date)}</Text>\r\n                    </Flex>\r\n                    <Flex direction={{ base: \"column\", md: \"row\" }}>\r\n                      <Box w=\"full\">\r\n                        <Box mt=\"10\">\r\n                          <form\r\n                            onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              if (event?.isOpen) {\r\n                                registerUser();\r\n                              } else {\r\n                                toast({\r\n                                  title: \"Error\",\r\n                                  position: \"bottom\",\r\n                                  description:\r\n                                    \"Event registrations are already closed\",\r\n                                  status: \"Error\",\r\n                                  duration: 5000,\r\n                                  isClosable: true,\r\n                                });\r\n                              }\r\n                            }}\r\n                          >\r\n                            <Text fontSize=\"xl\" mb=\"3\" fontWeight=\"medium\">\r\n                              Register for the event\r\n                            </Text>\r\n                            <Flex\r\n                              bg=\"whiteAlpha.100\"\r\n                              p=\"5\"\r\n                              rounded=\"xl\"\r\n                              direction=\"column\"\r\n                              alignItems=\"end\"\r\n                            >\r\n                              {window.localStorage.getItem(\"email\") ? (\r\n                                <ProfileDisplay />\r\n                              ) : (\r\n                                <>\r\n                                  <Box w=\"full\">\r\n                                    <Input\r\n                                      required\r\n                                      value={name}\r\n                                      onChange={(e) => setName(e.target.value)}\r\n                                      w=\"full\"\r\n                                      _focus={{\r\n                                        border: \"2px\",\r\n                                        borderColor: \"brand.primary\",\r\n                                      }}\r\n                                      bg=\"brand.secondary\"\r\n                                      border=\"2px\"\r\n                                      borderColor=\"transparent\"\r\n                                      rounded=\"lg\"\r\n                                      mb=\"2\"\r\n                                      py=\"5\"\r\n                                      placeholder=\"Your name\"\r\n                                      _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                                    />\r\n                                    <Input\r\n                                      w=\"full\"\r\n                                      type=\"email\"\r\n                                      value={email}\r\n                                      onChange={(e) => setEmail(e.target.value)}\r\n                                      id=\"email\"\r\n                                      required\r\n                                      _focus={{\r\n                                        border: \"2px\",\r\n                                        borderColor: \"brand.primary\",\r\n                                      }}\r\n                                      bg=\"brand.secondary\"\r\n                                      border=\"2px\"\r\n                                      py=\"5\"\r\n                                      borderColor=\"transparent\"\r\n                                      rounded=\"lg\"\r\n                                      placeholder=\"Your email\"\r\n                                      _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                                    />\r\n                                  </Box>\r\n                                </>\r\n                              )}\r\n                              <Button\r\n                                mt=\"4\"\r\n                                px=\"6\"\r\n                                type={event?.isOpen ? \"submit\" : \"button\"}\r\n                                w=\"-webkit-fit-content\"\r\n                                cursor={\r\n                                  event?.isOpen ? \"pointer\" : \"not-allowed\"\r\n                                }\r\n                                _hover={{}}\r\n                                _active={{}}\r\n                                _focus={{}}\r\n                                leftIcon={\r\n                                  event?.isOpen ? (\r\n                                    loading ? (\r\n                                      <Spinner size=\"sm\" />\r\n                                    ) : (\r\n                                      <CheckCircle size=\"18px\" />\r\n                                    )\r\n                                  ) : (\r\n                                    <XCircle size=\"18px\" />\r\n                                  )\r\n                                }\r\n                                bg=\"brand.primary\"\r\n                                fontSize=\"sm\"\r\n                                rounded=\"lg\"\r\n                              >\r\n                                {event?.isOpen ? (\r\n                                  <>Register</>\r\n                                ) : (\r\n                                  <>Registrations are closed</>\r\n                                )}\r\n                              </Button>\r\n                            </Flex>\r\n                          </form>\r\n                        </Box>\r\n                        {event?.description || event?.content ? (\r\n                          <Box mt=\"8\">\r\n                            <Text fontSize=\"xl\" mb=\"4\" fontWeight=\"medium\">\r\n                              Event Details :\r\n                            </Text>\r\n                            {event?.description ? (\r\n                              <Text fontSize=\"lg\" fontWeight=\"semibold\">\r\n                                {event?.description}\r\n                              </Text>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                            {event?.content ? (\r\n                              <Text\r\n                                id=\"content\"\r\n                                fontSize=\"base\"\r\n                                mt=\"2\"\r\n                                fontWeight=\"thin\"\r\n                                dangerouslySetInnerHTML={{\r\n                                  __html: converter.makeHtml(event?.content),\r\n                                }}\r\n                              ></Text>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </Box>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </Box>\r\n                      <Box\r\n                        minW={{ md: \"240px\", lg: \"300px\" }}\r\n                        maxW={{ md: \"240px\", lg: \"350px\" }}\r\n                        ml={{ md: \"10\" }}\r\n                      >\r\n                        <Box>\r\n                          <Box mb=\"2\">\r\n                            <Text fontSize=\"xl\" fontWeight=\"medium\">\r\n                              Join Details :\r\n                            </Text>\r\n                            <Flex\r\n                              alignItems=\"center\"\r\n                              color=\"brand.primary\"\r\n                              cursor=\"pointer\"\r\n                              transitionDelay=\"200ms\"\r\n                              my=\"4\"\r\n                            >\r\n                              {event?.platform === \"Virtual\" ? (\r\n                                <>\r\n                                  <Link\r\n                                    isExternal\r\n                                    href={event?.link}\r\n                                    _focus={{}}\r\n                                    fontSize=\"lg\"\r\n                                    mr=\"1\"\r\n                                    isTruncated\r\n                                  >\r\n                                    {event?.link}\r\n                                  </Link>\r\n\r\n                                  <Box\r\n                                    minW=\"20px\"\r\n                                    onClick={() => {\r\n                                      window.open(event?.link, \"_blank\");\r\n                                    }}\r\n                                  >\r\n                                    <ArrowUpRight />\r\n                                  </Box>\r\n                                </>\r\n                              ) : (\r\n                                <Flex\r\n                                  alignItems=\"start\"\r\n                                  w=\"-webkit-fit-content\"\r\n                                >\r\n                                  <Box minW=\"20px\">\r\n                                    <MapPin size=\"18px\" />\r\n                                  </Box>\r\n                                  <Text\r\n                                    fontSize=\"lg\"\r\n                                    ml=\"2\"\r\n                                    mt=\"-1\"\r\n                                    wordBreak=\"break-all\"\r\n                                  >\r\n                                    {event?.link}\r\n                                  </Text>\r\n                                </Flex>\r\n                              )}\r\n                            </Flex>\r\n                          </Box>\r\n                          <Divider color=\"white\" opacity=\"0.2\" />\r\n                          <Box mt=\"6\">\r\n                            {event?.createdBy.map((data, key) => (\r\n                              <EventHostCard key={key} email={data} />\r\n                            ))}\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                    </Flex>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box w=\"full\" mt=\"10\">\r\n                <Divider opacity=\"0.1\" />\r\n                <Footer />\r\n              </Box>\r\n            </Flex>\r\n          ) : (\r\n            <Flex\r\n              minH=\"100vh\"\r\n              color=\"white\"\r\n              bg=\"brand.secondary\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              lol 404\r\n            </Flex>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n","import \"./App.css\";\nimport LandingPage from \"./pages/Landing.page\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SignIn from \"./pages/SignIn.page\";\nimport Auth from \"./pages/Auth.page\";\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"./Helpers/supabase\";\nimport Home from \"./pages/Dashboard/Home.page\";\nimport NewCommunity from \"./pages/New/NewCommunity.page\";\nimport ManageCommunity from \"./pages/Manage/ManageCommunity.page\";\nimport Events from \"./pages/Dashboard/Events.page\";\nimport NewEvent from \"./pages/New/NewEvent.page\";\nimport ManageEvent from \"./pages/Manage/ManageEvent.page\";\nimport Audience from \"./pages/Dashboard/Audience.page\";\nimport Event from \"./pages/Event\";\n\nfunction App() {\n  const [session, setSession] = useState(undefined);\n\n  const auth = async () => {\n    setSession(supabase.auth.session());\n    await supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  };\n\n  useEffect(() => {\n    auth();\n  }, []);\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={\n          !session\n            ? () => <LandingPage />\n            : localStorage.getItem(\"email\")\n            ? () => {\n                window.location.href = \"/home\";\n                return <Home />;\n              }\n            : () => <Auth session={session} />\n        }\n      />\n      <Route exact path=\"/signin\" component={SignIn} />\n      <Route exact path=\"/event/:id\" component={Event} />\n      <Route exact path=\"/auth\" render={() => <Auth session={session} />} />\n      {localStorage.getItem(\"email\") ? (\n        <>\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/new/community\" component={NewCommunity} />\n          <Route\n            exact\n            path=\"/manage/community/:id\"\n            component={ManageCommunity}\n          />\n          <Route exact path=\"/manage/event/:id\" component={ManageEvent} />\n          <Route exact path=\"/events\" component={Events} />\n          <Route exact path=\"/new/event\" component={NewEvent} />\n          <Route\n            exact\n            path=\"/manage/community/:id/new/event\"\n            component={NewEvent}\n          />\n          <Route exact path=\"/manage/community/:id/events\" component={Events} />\n          <Route exact path=\"/audience\" component={Audience} />\n          <Route\n            exact\n            path=\"/manage/community/:id/audience\"\n            component={Audience}\n          />\n        </>\n      ) : (\n        <SignIn />\n      )}\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst theme = extendTheme({\r\n  colors: {\r\n    brand: {\r\n      primary: \"#FF4085\",\r\n      secondary: \"#131517\",\r\n    },\r\n    alpha: {\r\n      white: \"rgba(255, 255, 255, 0.1)\",\r\n    },\r\n    pink: {\r\n      600: \"#DE316F\",\r\n      800: \"#862F4E\",\r\n    },\r\n    black: {\r\n      400: \"#212325\",\r\n    },\r\n  },\r\n  fonts: {\r\n    brand: \"Red Hat Display\",\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { UserProvider } from \"./Providers/User.provider\";\nimport { Provider as SupabaseProvider } from \"react-supabase\";\nimport { supabase } from \"./Helpers/supabase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <SupabaseProvider value={supabase}>\n        <UserProvider>\n          <ChakraProvider theme={theme}>\n            <App />\n          </ChakraProvider>\n        </UserProvider>\n      </SupabaseProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}