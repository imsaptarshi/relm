{"version":3,"sources":["Assets/logo.svg","Helpers/supabase.js","components/Navigation/Navigation.component.jsx","pages/Landing.page.jsx","Assets/google.png","pages/SignIn.page.jsx","pages/Auth.page.jsx","Providers/User.provider.jsx","components/Cards/CommunityCard.component.jsx","Helpers/features.js","components/Navigation/Sidebar.component.jsx","components/Misc/StarterTemplace.component.jsx","components/Cards/EventCard.component.jsx","Helpers/isUpcoming.js","Helpers/wisher.js","pages/Dashboard/Home.page.jsx","pages/New/NewCommunity.page.jsx","pages/Update/UpdateCommunity.page.jsx","components/Misc/CurrentLocation.component.jsx","pages/Manage/ManageCommunity.page.jsx","pages/Dashboard/Events.page.jsx","pages/New/NewEvent.page.jsx","components/Misc/AudienceList.component.jsx","components/Cards/HostCard.component.jsx","pages/Update/UpdateEvent.page.jsx","Helpers/dateFormatter.js","pages/Manage/ManageEvent.page.jsx","pages/Dashboard/Audience.page.jsx","pages/Event/EventHostCard.component.jsx","pages/Event/index.jsx","App.jsx","reportWebVitals.js","theme.js","index.jsx"],"names":["supabase","createClient","process","Navigation","communityId","useState","undefined","user","setUser","community","setCommunity","useEffect","window","localStorage","getItem","getUser","getCommunity","a","from","select","eq","single","data","error","console","log","SignInButton","to","bg","color","px","size","fontSize","fontWeight","border","borderColor","transitionDuration","_hover","_focus","_active","ml","w","justify","alignItems","experimental_spaceX","cursor","rounded","src","logo","Logo","alt","h","name","leftIcon","whiteSpace","isTruncated","overflow","maxW","username","LandingPage","minH","py","base","lg","mt","direction","md","align","xl","display","transform","position","top","right","SignIn","loading","setLoading","buttonMessage","setButtonMessage","email","setEmail","toast","useToast","handleLoginWithGoogle","auth","signIn","provider","title","description","error_description","message","status","duration","isClosable","handleLogin","pt","pl","p","type","onChange","e","target","value","_placeholder","placeholder","onClick","mb","Google","Auth","session","setUsername","avatarUrl","setAvatarUrl","user_metadata","avatar_url","updateUser","length","updates","id","upsert","returning","setItem","location","href","float","rightIcon","UserContext","createContext","UserProvider","children","Provider","User","useContext","CommunityCard","audience","events","mr","ratio","minW","pr","features","enabled","Audience","Community","Insights","Newsletter","Explore","Sidebar","pathname","active","setActive","JSON","parse","contains","SidebarItems","isExternal","link","Icon","props","CommunityDisplay","SidebarItem","isEnabled","label","placement","opacity","fill","experimental_spaceY","map","key","m","signOut","removeItem","StarterTemplate","sidebarVisibility","setSidebarVisibility","zIndex","EventCard","date","image","communityData","setCommunityData","month","time","isUpcoming","dateObject","Date","d","getDate","getMonth","y","getFullYear","year","wish","hr","getHours","i","Home","communitities","setCommunities","upcomingEvents","setUpcomingEvents","getCommunities","getEvents","order","ascending","uE","dE","forEach","push","UpcomingEvents","casing","letterSpacing","wrap","stringify","my","textAlign","NewCommunity","Logos","setLogo","setName","setDescription","uploading","setUploading","uploadLogo","file","formData","FormData","append","axios","post","res","url","onClose","useDisclosure","isOpen","onOpen","createCommunity","createdBy","setTimeout","pb","document","getElementById","click","accept","files","colorScheme","roundedTopStart","bottom","UpdateCommunity","communityName","communityDescription","communityLogo","close","LogoModal","reload","CurrentLocation","history","useHistory","goBack","ManageCommunity","match","params","Events","doneEvents","setDoneEvents","borderBottom","NewEvent","Platforms","enum","setLink","setImage","setDate","content","setContent","communitySelected","setCommunitySelected","communities","uploadImage","createEvent","admin","platform","EventData","EventPlatform","shadow","left","onSubmit","preventDefault","isRequired","borderTop","borderRight","borderLeft","dateString","dateFormatted","split","sm","moment","format","style","backgroundColor","AudienceList","variant","HostCard","removeHost","newCreatedBy","RemoveHostModal","UpdateEvent","eventId","eventName","eventDescription","eventImage","eventPlatform","eventLink","eventDate","eventContent","updateEvent","defaultValue","formatDate","ManageEvent","event","setEvent","setAudience","setCreatedBy","useClipboard","origin","hasCopied","onCopy","isListed","setIsListed","registrationOpen","setRegistrationOpen","newChanges","setNewChanges","getEvent","getAudience","AddHost","AddHostModal","test","String","toLowerCase","borderStyle","UpdateEventModal","CopyInput","open","isReadOnly","roundedRight","checked","isChecked","EventHostCard","Event","converter","Showdown","Converter","registerUser","Set","AudienceEventData","AudienceCommunityData","ProfileDisplay","mx","required","dangerouslySetInnerHTML","__html","makeHtml","transitionDelay","wordBreak","App","setSession","onAuthStateChange","_event","exact","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","colors","brand","primary","secondary","alpha","white","pink","black","fonts","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.9fbdcec4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e169293d.svg\";","import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Logo from \"../../Assets/logo.svg\";\r\nimport { Image, Flex, Button, Text, Box } from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ArrowRight, User } from \"react-feather\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction Navigation({ communityId }) {\r\n  const [user, setUser] = useState(undefined);\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"email\")) {\r\n      getUser();\r\n    }\r\n    if (communityId) {\r\n      getCommunity();\r\n    }\r\n  }, [communityId]);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", window.localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"name, logo\")\r\n        .eq(\"id\", communityId)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const SignInButton = () => (\r\n    <Link to=\"/signin\">\r\n      <Button\r\n        bg=\"alpha.white\"\r\n        color=\"white\"\r\n        px=\"6\"\r\n        size=\"sm\"\r\n        fontSize=\"xs\"\r\n        fontWeight=\"bold\"\r\n        border=\"1px\"\r\n        borderColor=\"transparent\"\r\n        transitionDuration=\"200ms\"\r\n        _hover={{\r\n          bg: \"rgba(255, 255, 255, 0.05)\",\r\n          borderColor: \"whiteAlpha.200\",\r\n        }}\r\n        _focus={{}}\r\n        _active={{ bg: \"rgba(255, 255, 255, 0.12)\" }}\r\n      >\r\n        Sign in\r\n        <Box ml=\"1\">\r\n          <ArrowRight size=\"14px\" />\r\n        </Box>\r\n      </Button>\r\n    </Link>\r\n  );\r\n\r\n  return (\r\n    <Flex w=\"full\" justify=\"space-between\" alignItems=\"center\">\r\n      <Flex\r\n        experimental_spaceX={community ? \"2\" : \"3\"}\r\n        alignItems=\"center\"\r\n        color=\"white\"\r\n        _hover={{ color: \"brand.primary\" }}\r\n        cursor=\"pointer\"\r\n        transitionDuration=\"300ms\"\r\n      >\r\n        <Image\r\n          rounded={community ? \"lg\" : \"none\"}\r\n          src={community ? community?.logo : Logo}\r\n          alt=\"relm\"\r\n          w={community ? \"7\" : \"8\"}\r\n          h={community ? \"7\" : \"8\"}\r\n        />\r\n        <Text fontWeight=\"bold\" fontSize={community ? \"base\" : \"24\"}>\r\n          {community ? <>{community?.name}</> : <>relm</>}\r\n        </Text>\r\n      </Flex>\r\n      {window.localStorage.getItem(\"email\") ? (\r\n        <Link to=\"/home\">\r\n          <Button\r\n            bg=\"alpha.white\"\r\n            color=\"white\"\r\n            px=\"6\"\r\n            size=\"sm\"\r\n            fontSize=\"xs\"\r\n            fontWeight=\"semibold\"\r\n            border=\"1px\"\r\n            borderColor=\"transparent\"\r\n            transitionDuration=\"200ms\"\r\n            _hover={{\r\n              bg: \"rgba(255, 255, 255, 0.05)\",\r\n              borderColor: \"whiteAlpha.200\",\r\n            }}\r\n            _focus={{}}\r\n            leftIcon={<User size=\"14px\" />}\r\n            _active={{ bg: \"rgba(255, 255, 255, 0.12)\" }}\r\n            whiteSpace=\"nowrap\"\r\n          >\r\n            <Text isTruncated overflow=\"clip\" maxW=\"80px\">\r\n              {user?.username}\r\n            </Text>\r\n          </Button>\r\n        </Link>\r\n      ) : (\r\n        <SignInButton />\r\n      )}\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { Box, Text, Flex, Button, Tag } from \"@chakra-ui/react\";\r\nimport Navigation from \"../components/Navigation/Navigation.component\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LandingPage() {\r\n  return (\r\n    <Flex bg=\"brand.secondary\" justify=\"center\" w=\"full\">\r\n      <Box\r\n        minH=\"100vh\"\r\n        py=\"6\"\r\n        px={{ base: \"8\", lg: \"24\" }}\r\n        maxW=\"1400px\"\r\n        w=\"full\"\r\n      >\r\n        <Navigation />\r\n        <Flex justify=\"center\" alignItems=\"center\" mt=\"24\" direction=\"column\">\r\n          <Text\r\n            color=\"brand.primary\"\r\n            fontWeight=\"black\"\r\n            fontSize={{ base: \"4xl\", md: \"5xl\", lg: \"6xl\" }}\r\n            align=\"center\"\r\n          >\r\n            Activating Your Community\r\n          </Text>\r\n          <Text\r\n            color=\"white\"\r\n            fontWeight=\"medium\"\r\n            fontSize={{ base: \"xs\", md: \"sm\", lg: \"lg\" }}\r\n            mt=\"2\"\r\n            px={{ lg: \"40\", md: \"40\", xl: \"80\" }}\r\n            align=\"center\"\r\n          >\r\n            Making communities more engaging with events, community analytics\r\n            and newsletters with{\" \"}\r\n            <Text cursor=\"pointer\" display=\"inline\" color=\"brand.primary\">\r\n              Relm\r\n            </Text>\r\n          </Text>\r\n          <Link to=\"/signin\">\r\n            <Button\r\n              _hover={{ transform: \"translateY(-1.5px)\" }}\r\n              _active={{ bg: \"pink.600\" }}\r\n              _focus={{}}\r\n              bg=\"brand.primary\"\r\n              color=\"white\"\r\n              mt=\"10\"\r\n              rounded=\"2xl\"\r\n              fontWeight=\"bold\"\r\n              fontSize=\"lg\"\r\n              px=\"14\"\r\n              py=\"7\"\r\n            >\r\n              Get Into Realm\r\n              <Tag\r\n                position=\"absolute\"\r\n                top=\"-2\"\r\n                right=\"-3\"\r\n                color=\"white\"\r\n                rounded=\"full\"\r\n                bg=\"pink.800\"\r\n                px=\"3\"\r\n                py=\"1\"\r\n              >\r\n                beta\r\n              </Tag>\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","export default __webpack_public_path__ + \"static/media/google.d21a7387.png\";","import {\r\n  Flex,\r\n  Box,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  Divider,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport Logo from \"../Assets/logo.svg\";\r\nimport { Check } from \"react-feather\";\r\nimport { useState } from \"react\";\r\nimport { supabase } from \"../Helpers/supabase\";\r\nimport Google from \"../Assets/google.png\";\r\n\r\nfunction SignIn() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [buttonMessage, setButtonMessage] = useState(<Text>Continue</Text>);\r\n  const [email, setEmail] = useState(\"\");\r\n  const toast = useToast();\r\n\r\n  const handleLoginWithGoogle = async (email) => {\r\n    try {\r\n      const { error } = await supabase.auth.signIn({\r\n        provider: \"google\",\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: error.error_description || error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      console.log(\"finally\");\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (email) => {\r\n    try {\r\n      setLoading(true);\r\n      const { error } = await supabase.auth.signIn({ email });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      toast({\r\n        title: \"Account Created\",\r\n        position: \"bottom\",\r\n        description: \"Check your email for login link\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      setButtonMessage(<Check />);\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: error.error_description || error.message,\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex direction={{ base: \"column\", md: \"row\" }}>\r\n      <Box\r\n        bg=\"brand.secondary\"\r\n        pt=\"10\"\r\n        pl=\"10\"\r\n        display={{ base: \"block\", md: \"none\" }}\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"12\" h=\"12\" />\r\n      </Box>\r\n      <Flex\r\n        bg=\"black.400\"\r\n        display={{ base: \"none\", md: \"flex\" }}\r\n        w={{ md: \"35%\" }}\r\n        h=\"100vh\"\r\n        p={{ base: \"6\", md: \"10\" }}\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"14\" h=\"14\" />\r\n        <Box color=\"white\">\r\n          <Text fontWeight=\"bold\" fontSize=\"4xl\">\r\n            relm\r\n          </Text>\r\n          <Text fontWeight=\"thin\" fontSize=\"sm\">\r\n            Activating your community\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      <Box\r\n        w={{ base: \"100%\", md: \"65%\" }}\r\n        h=\"100vh\"\r\n        bg=\"brand.secondary\"\r\n        p={{ base: \"10\", md: \"20\" }}\r\n      >\r\n        <Box w={{ base: \"100%\", lg: \"400px\" }}>\r\n          <Text color=\"white\" fontWeight=\"bold\" fontSize=\"3xl\">\r\n            Sign In\r\n          </Text>\r\n          <Text color=\"white\" fontWeight=\"medium\" mt=\"8\" fontSize=\"sm\">\r\n            Sign in with your email\r\n          </Text>\r\n          <Input\r\n            type=\"email\"\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n              console.log(email);\r\n            }}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Your email\"\r\n          />\r\n          <Button\r\n            w=\"full\"\r\n            mt=\"3\"\r\n            rounded=\"lg\"\r\n            _focus={{}}\r\n            _active={{}}\r\n            onClick={() => handleLogin(email)}\r\n          >\r\n            {loading ? <Spinner /> : buttonMessage}\r\n          </Button>\r\n          <Flex alignItems=\"center\" mt=\"14\" mb=\"4\" experimental_spaceX=\"3\">\r\n            <Text color=\"white\" fontSize=\"xs\" fontWeight=\"medium\">\r\n              OR\r\n            </Text>\r\n            <Divider w=\"full\" color=\"white\" />\r\n          </Flex>\r\n          <Button\r\n            leftIcon={<Image src={Google} w=\"16px\" h=\"16px\" />}\r\n            border=\"1px\"\r\n            borderColor=\"transparent\"\r\n            _hover={{ borderColor: \"whiteAlpha.200\" }}\r\n            _focus={{}}\r\n            _active={{}}\r\n            w=\"full\"\r\n            bg=\"whiteAlpha.200\"\r\n            rounded=\"lg\"\r\n            fontSize=\"sm\"\r\n            color=\"white\"\r\n            onClick={() => handleLoginWithGoogle()}\r\n          >\r\n            Sign In With Google\r\n          </Button>\r\n          <Text color=\"whiteAlpha.500\" mt=\"4\" fontSize=\"sm\">\r\n            By signing in you agree to our terms and conditions\r\n          </Text>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import {\r\n  Flex,\r\n  Box,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ArrowRight } from \"react-feather\";\r\nimport Logo from \"../Assets/logo.svg\";\r\nimport { supabase } from \"../Helpers/supabase\";\r\n\r\nfunction Auth({ session }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(null);\r\n  const [avatarUrl, setAvatarUrl] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const user = supabase.auth.user();\r\n\r\n      if (user) {\r\n        console.log(user);\r\n        setEmail(user.email);\r\n        if (user.username) {\r\n          setUsername(user?.username);\r\n        }\r\n        if (user.user_metadata) {\r\n          setAvatarUrl(user.user_metadata?.avatar_url);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUser = async (username) => {\r\n    if (username.length > 3) {\r\n      try {\r\n        setLoading(true);\r\n        const user = supabase.auth.user();\r\n        const updates = {\r\n          id: user.id,\r\n          username,\r\n          avatar_url: avatarUrl,\r\n          email: email,\r\n        };\r\n\r\n        const { error } = await supabase.from(\"users\").upsert(updates, {\r\n          returning: \"minimal\",\r\n        });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n        window.localStorage.setItem(\"email\", email);\r\n        window.location.href = \"/home\";\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Your name should have than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex direction={{ base: \"column\", md: \"row\" }}>\r\n      <Box\r\n        bg=\"brand.secondary\"\r\n        pt=\"10\"\r\n        pl=\"10\"\r\n        display={{ base: \"block\", md: \"none\" }}\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"12\" h=\"12\" />\r\n      </Box>\r\n      <Flex\r\n        display={{ base: \"none\", md: \"flex\" }}\r\n        w={{ md: \"35%\" }}\r\n        h=\"100vh\"\r\n        bg=\"black.400\"\r\n        p={{ base: \"6\", md: \"10\" }}\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n      >\r\n        <Image src={Logo} alt=\"relm\" w=\"14\" h=\"14\" />\r\n        <Box color=\"white\">\r\n          <Text fontWeight=\"bold\" fontSize=\"4xl\">\r\n            relm\r\n          </Text>\r\n          <Text fontWeight=\"thin\" fontSize=\"sm\">\r\n            Activating your community\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n      <Box\r\n        w={{ base: \"100%\", md: \"65%\" }}\r\n        h=\"100vh\"\r\n        bg=\"brand.secondary\"\r\n        p={{ base: \"10\", md: \"20\" }}\r\n      >\r\n        <Box w={{ base: \"100%\", lg: \"400px\" }}>\r\n          <Text color=\"white\" fontWeight=\"bold\" fontSize=\"3xl\">\r\n            Let's know more about you\r\n          </Text>\r\n          <Text color=\"white\" fontWeight=\"medium\" mt=\"8\" fontSize=\"sm\">\r\n            What do we call you?\r\n          </Text>\r\n          <Input\r\n            value={username}\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              setUsername(e.target.value);\r\n              console.log(username);\r\n            }}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Your name\"\r\n          />\r\n          <Button\r\n            float=\"right\"\r\n            mt=\"6\"\r\n            rounded=\"lg\"\r\n            _focus={{}}\r\n            _active={{}}\r\n            rightIcon={\r\n              loading ? <Spinner size=\"sm\" /> : <ArrowRight size=\"20px\" />\r\n            }\r\n            onClick={() => updateUser(username)}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { createContext, useContext, useState } from \"react\";\r\n\r\nconst UserContext = createContext({\r\n  user: undefined,\r\n  setUser: () => {},\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const User = () => useContext(UserContext);\r\n","import { Flex, AspectRatio, Image, Text } from \"@chakra-ui/react\";\r\nimport { Calendar, Users } from \"react-feather\";\r\n\r\nfunction CommunityCard({ id, name, description, audience, events, logo }) {\r\n  return (\r\n    <Flex\r\n      onClick={() => {\r\n        window.location.href = `/manage/community/${id}`;\r\n      }}\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      alignItems=\"center\"\r\n      bg=\"alpha.white\"\r\n      overflow=\"clip\"\r\n      isTruncated\r\n      p=\"2\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW=\"320px\"\r\n    >\r\n      <AspectRatio ratio={1} minW=\"20\">\r\n        <Image src={logo} rounded=\"lg\" />\r\n      </AspectRatio>\r\n      <Flex isTruncated direction=\"column\" justify=\"space-between\">\r\n        <Text\r\n          isTruncated\r\n          pr=\"2\"\r\n          fontWeight=\"bold\"\r\n          fontSize={{ base: \"lg\", md: \"lg\" }}\r\n        >\r\n          {name}\r\n        </Text>\r\n        <Flex experimental_spaceX=\"2\" alignItems=\"center\">\r\n          <Users size=\"16px\" />\r\n          <Text fontSize={{ base: \"xs\", md: \"sm\" }}>{audience}</Text>\r\n        </Flex>\r\n        <Flex experimental_spaceX=\"2\" alignItems=\"center\">\r\n          <Calendar size=\"16px\" />\r\n          <Text fontSize={{ base: \"xs\", md: \"sm\" }}>{events}</Text>\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default CommunityCard;\r\n","export const features = {\r\n  \"Quick Event\": {\r\n    enabled: true,\r\n  },\r\n  Audience: {\r\n    enabled: true,\r\n  },\r\n  Community: {\r\n    enabled: true,\r\n  },\r\n  Insights: {\r\n    enabled: true,\r\n  },\r\n  Newsletter: {\r\n    enabled: false,\r\n  },\r\n  Explore: {\r\n    enabled: false,\r\n  },\r\n  \"Revenue Solution\": {\r\n    enabled: false,\r\n  },\r\n};\r\n","import {\r\n  BarChart,\r\n  Calendar,\r\n  Heart,\r\n  Home,\r\n  Mail,\r\n  Plus,\r\n  Users,\r\n} from \"react-feather\";\r\nimport {\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Flex,\r\n  Button,\r\n  Avatar,\r\n  Menu,\r\n  MenuButton,\r\n  MenuList,\r\n  MenuItem,\r\n  Skeleton,\r\n  Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport Logo from \"../../Assets/logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { features } from \"../../Helpers/features\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction Sidebar({ communityId }) {\r\n  const [active, setActive] = useState(window.location.pathname);\r\n  const { user, setUser } = User();\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n    }\r\n    if (communityId) {\r\n      getCommunity(communityId);\r\n    }\r\n  }, [communityId, setUser, user]);\r\n\r\n  const getCommunity = async (id) => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo ,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const SidebarItems = [\r\n    {\r\n      name: \"Home\",\r\n      isExternal: false,\r\n      link: communityId ? `/manage/community/${communityId}` : \"/home\",\r\n      Icon: (props) => <Home {...props} />,\r\n    },\r\n    {\r\n      name: \"Audience\",\r\n      isExternal: false,\r\n      link: communityId\r\n        ? `/manage/community/${communityId}/audience`\r\n        : \"/audience\",\r\n      Icon: (props) => <Users {...props} />,\r\n    },\r\n    {\r\n      name: \"Events\",\r\n      isExternal: false,\r\n      link: communityId ? `/manage/community/${communityId}/events` : \"/events\",\r\n      Icon: (props) => {\r\n        return <Calendar {...props} />;\r\n      },\r\n    },\r\n    {\r\n      name: \"Insights\",\r\n      isExternal: false,\r\n      link: \"/insights\",\r\n      Icon: (props) => {\r\n        return <BarChart {...props} />;\r\n      },\r\n    },\r\n    {\r\n      name: \"Newsletter\",\r\n      isExternal: false,\r\n      link: \"#\",\r\n      Icon: (props) => {\r\n        return <Mail {...props} />;\r\n      },\r\n    },\r\n    {\r\n      name: \"Explore\",\r\n      isExternal: false,\r\n      link: \"#\",\r\n      Icon: (props) => {\r\n        return <Heart {...props} />;\r\n      },\r\n    },\r\n  ];\r\n\r\n  const CommunityDisplay = ({ name, logo }) => {\r\n    return (\r\n      <Flex\r\n        cursor=\"pointer\"\r\n        onClick={() => {\r\n          window.location.href = `/manage/community/${communityId}`;\r\n        }}\r\n        mb=\"6\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        experimental_spaceX=\"2\"\r\n      >\r\n        <Image\r\n          src={logo}\r\n          alt={name}\r\n          w={{ base: \"10\", lg: \"8\" }}\r\n          h={{ base: \"10\", lg: \"8\" }}\r\n          rounded=\"full\"\r\n        />\r\n        <Text\r\n          isTruncated\r\n          color=\"white\"\r\n          display={{ base: \"none\", lg: \"block\" }}\r\n          fontWeight=\"bold\"\r\n          fontSize=\"xl\"\r\n        >\r\n          {name}\r\n        </Text>\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  const SidebarItem = ({ name, link, Icon }) => {\r\n    const isEnabled = features[name]\r\n      ? features[name]?.enabled\r\n        ? true\r\n        : false\r\n      : true;\r\n\r\n    return (\r\n      <Link to={isEnabled ? link : \"#\"} onClick={() => setActive(name)}>\r\n        <Tooltip label={name} display={{ lg: \"none\" }} placement=\"right\">\r\n          <Flex\r\n            opacity={isEnabled ? \"1\" : \"0.5\"}\r\n            cursor={isEnabled ? \"pointer\" : \"not-allowed\"}\r\n            experimental_spaceX=\"3\"\r\n            fontSize=\"lg\"\r\n            color={active === link ? \"brand.primary\" : \"white\"}\r\n            alignItems=\"center\"\r\n          >\r\n            <Icon fill={active === link ? \"#FF4085\" : \"none\"} />\r\n            <Text\r\n              display={{ base: \"none\", lg: \"block\" }}\r\n              fontWeight={active === link ? \"bold\" : \"normal\"}\r\n            >\r\n              {name}\r\n            </Text>\r\n          </Flex>\r\n        </Tooltip>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Flex\r\n        direction=\"column\"\r\n        justify=\"space-between\"\r\n        alignItems={{ base: \"center\", lg: \"start\" }}\r\n        w={{ base: \"80px\", md: \"100px\", lg: \"360px\" }}\r\n        bg=\"black.400\"\r\n        h=\"100vh\"\r\n        position=\"fixed\"\r\n        p={{ base: \"6\", lg: \"10\" }}\r\n      >\r\n        <Box w={{ lg: \"full\" }}>\r\n          <Box\r\n            w=\"-webkit-fit-content\"\r\n            cursor=\"pointer\"\r\n            onClick={() => (window.location.href = \"/home\")}\r\n          >\r\n            <Image src={Logo} alt=\"relm\" w=\"10\" h=\"10\" />\r\n          </Box>\r\n          <Box px={{ base: \"0\", lg: \"10\" }} mt=\"50px\">\r\n            {communityId ? (\r\n              community ? (\r\n                <CommunityDisplay\r\n                  name={community?.name}\r\n                  logo={community?.logo}\r\n                />\r\n              ) : (\r\n                <Flex\r\n                  mb=\"6\"\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  experimental_spaceX=\"2\"\r\n                >\r\n                  <Skeleton\r\n                    w={{ base: \"10\", lg: \"8\" }}\r\n                    h={{ base: \"10\", lg: \"8\" }}\r\n                    rounded=\"full\"\r\n                  />\r\n                  <Skeleton\r\n                    rounded=\"xl\"\r\n                    h=\"6\"\r\n                    w=\"20\"\r\n                    display={{ base: \"none\", lg: \"block\" }}\r\n                  />\r\n                </Flex>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <Button\r\n              onClick={() => {\r\n                const to = communityId\r\n                  ? `/manage/community/${communityId}/new/event`\r\n                  : \"/new/event\";\r\n                window.location.href = to;\r\n              }}\r\n              _hover={{ bg: \"#DD3370\" }}\r\n              transitionDuration=\"200ms\"\r\n              _focus={{}}\r\n              _active={{}}\r\n              size=\"sm\"\r\n              py=\"5\"\r\n              w={{ base: \"10\", lg: \"full\" }}\r\n              rounded={{ base: \"full\", lg: \"xl\" }}\r\n              color=\"white\"\r\n              bg=\"brand.primary\"\r\n            >\r\n              <Text display={{ base: \"none\", lg: \"block\" }}>\r\n                Create new event\r\n              </Text>\r\n              <Box display={{ base: \"block\", lg: \"none\" }}>\r\n                <Plus />\r\n              </Box>\r\n            </Button>\r\n            <Flex\r\n              alignItems={{ base: \"center\", lg: \"start\" }}\r\n              mt=\"8\"\r\n              direction=\"column\"\r\n              experimental_spaceY=\"5\"\r\n            >\r\n              {SidebarItems.map((data, key) => (\r\n                <SidebarItem key={key} {...data} />\r\n              ))}\r\n            </Flex>\r\n          </Box>\r\n        </Box>\r\n        <Flex\r\n          p={{ base: \"0\", md: \"2\" }}\r\n          w={{ base: \"-webkit-fit-content\", lg: \"full\" }}\r\n          bg=\"whiteAlpha.300\"\r\n          rounded=\"full\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Menu>\r\n            <MenuButton overflow=\"clip\">\r\n              <Flex alignItems=\"center\" experimental_spaceX=\"2\">\r\n                <Avatar\r\n                  size=\"md\"\r\n                  src={user?.avatar_url}\r\n                  name={user?.username}\r\n                />\r\n                <Box display={{ base: \"none\", lg: \"block\" }}>\r\n                  <Text\r\n                    align=\"left\"\r\n                    color=\"white\"\r\n                    whiteSpace=\"nowrap\"\r\n                    fontWeight=\"semibold\"\r\n                    fontSize=\"lg\"\r\n                  >\r\n                    {user?.username}\r\n                  </Text>\r\n                  <Text\r\n                    align=\"left\"\r\n                    color=\"white\"\r\n                    whiteSpace=\"nowrap\"\r\n                    fontSize=\"xs\"\r\n                  >\r\n                    {user?.email}\r\n                  </Text>\r\n                </Box>\r\n              </Flex>\r\n            </MenuButton>\r\n            <MenuList\r\n              bg=\"brand.secondary\"\r\n              m=\"2\"\r\n              borderColor=\"gray.700\"\r\n              color=\"white\"\r\n            >\r\n              <MenuItem\r\n                _hover={{ bg: \"whiteAlpha.50\" }}\r\n                _focus={{ bg: \"whiteAlpha.50\" }}\r\n                onClick={async () => {\r\n                  await supabase.auth.signOut();\r\n                  window.location.href = \"/\";\r\n                  setUser(undefined);\r\n                  localStorage.removeItem(\"user\");\r\n                  localStorage.removeItem(\"email\");\r\n                }}\r\n              >\r\n                Sign out\r\n              </MenuItem>\r\n            </MenuList>\r\n          </Menu>\r\n        </Flex>\r\n      </Flex>\r\n      <Box\r\n        w={{ base: \"0\", md: \"100px\", lg: \"360px\" }}\r\n        bg=\"pink\"\r\n        h=\"full\"\r\n        minH=\"100vh\"\r\n      ></Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import Sidebar from \"../../components/Navigation/Sidebar.component\";\r\nimport { Flex, Box, Image } from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { X, Menu } from \"react-feather\";\r\nimport Logo from \"../../Assets/logo.svg\";\r\n\r\nfunction StarterTemplate({ children, communityId }) {\r\n  const [sidebarVisibility, setSidebarVisibility] = useState(false);\r\n\r\n  return (\r\n    <Flex>\r\n      <Box\r\n        zIndex={2}\r\n        display={{ base: sidebarVisibility ? \"block\" : \"none\", md: \"block\" }}\r\n      >\r\n        <Sidebar communityId={communityId} />\r\n      </Box>\r\n      <Box\r\n        p={{ base: \"8\", md: \"10\" }}\r\n        bg=\"brand.secondary\"\r\n        w=\"full\"\r\n        minH=\"100vh\"\r\n        color=\"white\"\r\n      >\r\n        <Flex\r\n          display={{ base: \"flex\", md: \"none\" }}\r\n          m=\"-4\"\r\n          justify=\"space-between\"\r\n          mb=\"4\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Image src={Logo} alt=\"relm\" w=\"10\" h=\"10\" ml=\"1\" mt=\"2\" />\r\n          <Box\r\n            cursor=\"pointer\"\r\n            onClick={() => setSidebarVisibility(!sidebarVisibility)}\r\n            rounded=\"full\"\r\n            p=\"2\"\r\n            _hover={{ bg: \"whiteAlpha.200\" }}\r\n          >\r\n            {sidebarVisibility ? <X /> : <Menu />}\r\n          </Box>\r\n        </Flex>\r\n        {children}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default StarterTemplate;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Flex, AspectRatio, Image, Text, Box, Button } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Calendar, Users } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction EventCard({\r\n  id,\r\n  name,\r\n  description,\r\n  date,\r\n  image,\r\n  community,\r\n  audience,\r\n}) {\r\n  const Months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const [communityData, setCommunityData] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (community) {\r\n      getCommunity();\r\n    }\r\n  }, []);\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo\")\r\n        .eq(\"id\", community)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunityData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      direction=\"column\"\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      p=\"2\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW={{ base: \"full\", md: \"300px\" }}\r\n      onClick={() => {\r\n        window.location.href = `/manage/event/${id}`;\r\n      }}\r\n    >\r\n      <AspectRatio ratio={1920 / 1080} w=\"full\">\r\n        <Image src={image} alt={name} rounded=\"lg\" />\r\n      </AspectRatio>\r\n      <Flex direction=\"column\" justify=\"space-between\" h=\"full\">\r\n        <Box>\r\n          <Text fontSize=\"xl\" fontWeight=\"bold\" mt=\"4\">\r\n            {name}\r\n          </Text>\r\n          <Flex\r\n            fontSize=\"xs\"\r\n            color=\"brand.primary\"\r\n            experimental_spaceX=\"1.5\"\r\n            alignItems=\"center\"\r\n            mt=\"1\"\r\n          >\r\n            <Calendar size=\"14px\" />\r\n            <Text>\r\n              {`${Months[date.month - 1]} ${date.date}, ${date.time} GMT+5:30`}\r\n            </Text>\r\n          </Flex>\r\n          <Flex\r\n            mt=\"1\"\r\n            fontSize=\"xs\"\r\n            experimental_spaceX=\"1.5\"\r\n            color=\"white\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Users size=\"14px\" />\r\n            <Text>{audience}</Text>\r\n          </Flex>\r\n          <Text mt=\"4\">{description}</Text>\r\n        </Box>\r\n        <Box>\r\n          <Flex mt=\"4\" mb=\"2\" justify=\"space-between\" mr=\"2\">\r\n            {communityData ? (\r\n              <Flex alignItems=\"center\" experimental_spaceX=\"2\">\r\n                <Image\r\n                  src={communityData.logo}\r\n                  alt={communityData.name}\r\n                  w=\"5\"\r\n                  h=\"5\"\r\n                  rounded=\"base\"\r\n                />\r\n                <Text fontWeight=\"medium\" fontSize=\"sm\">\r\n                  {communityData.name}\r\n                </Text>\r\n              </Flex>\r\n            ) : (\r\n              <Box></Box>\r\n            )}\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Manage\r\n            </Button>\r\n          </Flex>\r\n        </Box>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default EventCard;\r\n","export const isUpcoming = (date) => {\r\n  const dateObject = new Date();\r\n  const d = dateObject.getDate();\r\n  const m = dateObject.getMonth() + 1;\r\n  const y = dateObject.getFullYear();\r\n  console.log(d, y, m);\r\n\r\n  if (date.date >= d && date.month >= m && date.year >= y) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n","export function wish() {\r\n  var data = [\r\n      [0, 4, \"Good Night\"],\r\n      [5, 11, \"Good Morning\"], //Store messages in an array\r\n      [12, 17, \"Good Afternoon\"],\r\n      [18, 24, \"Good Night\"],\r\n    ],\r\n    hr = new Date().getHours();\r\n\r\n  for (var i = 0; i < data.length; i++) {\r\n    if (hr >= data[i][0] && hr <= data[i][1]) {\r\n      return data[i][2];\r\n    }\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { Box, Flex, Text, Divider, Button } from \"@chakra-ui/react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { Plus } from \"react-feather\";\r\nimport CommunityCard from \"../../components/Cards/CommunityCard.component\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { Link } from \"react-router-dom\";\r\nimport EventCard from \"../../components/Cards/EventCard.component\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\nimport { wish } from \"../../Helpers/wisher\";\r\n\r\nfunction Home() {\r\n  const { user, setUser } = User();\r\n  const [communitities, setCommunities] = useState(undefined);\r\n  const [upcomingEvents, setUpcomingEvents] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    getCommunities();\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\"id, name, image, description, date, community, audience\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .order(\"created_at\", { ascending: false });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      let uE = [];\r\n      let dE = [];\r\n      data.forEach((data) => {\r\n        if (isUpcoming(data.date)) {\r\n          uE.push(data);\r\n        } else {\r\n          dE.push(data);\r\n        }\r\n      });\r\n\r\n      setUpcomingEvents(uE);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const UpcomingEvents = () => {\r\n    return (\r\n      <>\r\n        <Flex justify=\"space-between\" mt=\"6\" alignItems=\"center\">\r\n          <Link to=\"/events\">\r\n            <Text\r\n              casing=\"capitalize\"\r\n              fontSize=\"sm\"\r\n              fontWeight=\"semibold\"\r\n              letterSpacing=\"2px\"\r\n              color=\"white\"\r\n            >\r\n              UPCOMING EVENTS\r\n            </Text>\r\n          </Link>\r\n          <Link to={`/new/event`}>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              leftIcon={<Plus size=\"18px\" />}\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n        <Flex wrap=\"wrap\" mt=\"4\">\r\n          {upcomingEvents ? (\r\n            upcomingEvents?.map((data, key) => (\r\n              <EventCard key={key} {...data} />\r\n            ))\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Flex>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getCommunities = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .order(\"created_at\", { ascending: false });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunities(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n      localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify({\r\n          username: data.username,\r\n          avatar_url: data.avatar_url,\r\n          email: data.email,\r\n        })\r\n      );\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate>\r\n      <Box>\r\n        <Text color=\"whiteAlpha.500\" fontSize={{ base: \"sm\", md: \"lg\" }}>\r\n          {wish()},\r\n        </Text>\r\n        <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"bold\">\r\n          {user?.username}\r\n        </Text>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n        <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n          <Text\r\n            casing=\"capitalize\"\r\n            fontSize=\"sm\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"2px\"\r\n            color=\"white\"\r\n          >\r\n            COMMUNITIES\r\n          </Text>\r\n          <Link to=\"/new/community\">\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              leftIcon={<Plus size=\"18px\" />}\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n        {communitities?.length > 0 ? (\r\n          <Flex mt=\"4\" wrap=\"wrap\">\r\n            {communitities?.map((data, key) => (\r\n              <CommunityCard key={key} {...data} />\r\n            ))}\r\n          </Flex>\r\n        ) : communitities ? (\r\n          <Flex\r\n            color=\"whiteAlpha.600\"\r\n            my=\"8\"\r\n            textAlign=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            🐝 Click on create to add communities\r\n          </Flex>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {upcomingEvents?.length > 0 ? <UpcomingEvents /> : <></>}\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import {\r\n  Flex,\r\n  Box,\r\n  Divider,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { ArrowLeft, CheckCircle, Edit, Upload } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport axios from \"axios\";\r\n\r\nfunction NewCommunity() {\r\n  const Logos = [\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/defaultCommunityLogo_gUich_dto.svg?updatedAt=1633160835413\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-3_PXKqFbob4Lj.svg?updatedAt=1633165287477\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-2_7d7-btPTg.svg?updatedAt=1633165286592\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-1_JT81iTWJQGq.svg?updatedAt=1633165286130\",\r\n  ];\r\n\r\n  const { user } = User();\r\n  const [logo, setLogo] = useState(Logos[0]);\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const uploadLogo = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setLogo(res.data.url);\r\n      onClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const createCommunity = async (name, description, logo) => {\r\n    if (name.length > 3) {\r\n      setLogo(logo);\r\n      try {\r\n        setLoading(true);\r\n        const updates = {\r\n          name,\r\n          description,\r\n          logo,\r\n          createdBy: [user?.email],\r\n        };\r\n\r\n        const { data, error } = await supabase\r\n          .from(\"communities\")\r\n          .upsert(updates)\r\n          .single();\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Community created successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          window.location.href = `/manage/community/${data.id}`;\r\n        }, 1000);\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate>\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n          <ModalHeader>Choose a logo</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Flex wrap=\"wrap\">\r\n              <Flex\r\n                cursor=\"pointer\"\r\n                border=\"2px\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                _hover={{ borderColor: \"whiteAlpha.50\" }}\r\n                borderColor=\"transparent\"\r\n                mb=\"3\"\r\n                mr=\"3\"\r\n                w=\"24\"\r\n                h=\"24\"\r\n                rounded=\"xl\"\r\n                bg=\"whiteAlpha.300\"\r\n                onClick={() => {\r\n                  document.getElementById(\"file\").click();\r\n                }}\r\n              >\r\n                <Upload size=\"30px\" />\r\n              </Flex>\r\n              {Logos.map((data, key) => (\r\n                <Box\r\n                  key={key}\r\n                  cursor=\"pointer\"\r\n                  onClick={() => {\r\n                    setLogo(data);\r\n                  }}\r\n                >\r\n                  <Image\r\n                    border=\"4px\"\r\n                    borderColor={\r\n                      logo === data ? \"brand.primary\" : \"transparent\"\r\n                    }\r\n                    mb=\"3\"\r\n                    mr=\"3\"\r\n                    src={data}\r\n                    w=\"24\"\r\n                    h=\"24\"\r\n                    rounded=\"xl\"\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Flex>\r\n          </ModalBody>\r\n          <Input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            accept=\"image/*\"\r\n            display=\"none\"\r\n            onChange={(e) => uploadLogo(e.target.files[0])}\r\n          />\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              {uploading ? <Spinner /> : <>Done</>}\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n\r\n      <Box>\r\n        <Flex alignItems=\"center\" experimental_spaceX=\"4\">\r\n          <Box\r\n            cursor=\"pointer\"\r\n            p=\"2\"\r\n            onClick={() => {\r\n              window.location.href = \"/home\";\r\n            }}\r\n            rounded=\"full\"\r\n            _hover={{ bg: \"whiteAlpha.200\" }}\r\n          >\r\n            <ArrowLeft />\r\n          </Box>\r\n          <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n            Create Community\r\n          </Text>\r\n        </Flex>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n        <Flex\r\n          mt=\"6\"\r\n          w={{ base: \"full\", md: \"80%\" }}\r\n          direction={{ base: \"column\", md: \"row\" }}\r\n        >\r\n          <Box minW=\"24\" mr=\"6\" mb=\"4\">\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mb=\"1\">\r\n              Logo\r\n            </Text>\r\n            <Box position=\"relative\" w=\"-webkit-fit-content\">\r\n              <Box\r\n                position=\"absolute\"\r\n                bg=\"blackAlpha.500\"\r\n                p=\"2\"\r\n                cursor=\"pointer\"\r\n                _hover={{ bg: \"blackAlpha.600\" }}\r\n                transitionDuration=\"200ms\"\r\n                roundedTopStart=\"xl\"\r\n                bottom=\"0\"\r\n                right=\"0\"\r\n                onClick={onOpen}\r\n              >\r\n                <Edit size=\"18px\" />\r\n              </Box>\r\n              <Image src={logo} w=\"24\" h=\"24\" rounded=\"lg\" />\r\n            </Box>\r\n          </Box>\r\n          <Box w=\"full\">\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n              Name *\r\n            </Text>\r\n            <Input\r\n              w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n              type=\"text\"\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Community name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <Text color=\"white\" mt=\"4\" fontWeight=\"medium\" fontSize=\"sm\">\r\n              Description\r\n            </Text>\r\n            <Textarea\r\n              w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n              type=\"email\"\r\n              mt=\"1.5\"\r\n              p=\"4\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Describe your community\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <Flex\r\n              mt=\"6\"\r\n              justify=\"end\"\r\n              w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n            >\r\n              <Button\r\n                display=\"flex\"\r\n                float=\"right\"\r\n                rounded=\"lg\"\r\n                w={loading ? \"200px\" : \"auto\"}\r\n                _focus={{}}\r\n                _active={{}}\r\n                color=\"black\"\r\n                onClick={() => createCommunity(name, description, logo)}\r\n              >\r\n                {loading ? (\r\n                  <Spinner />\r\n                ) : (\r\n                  <>\r\n                    <CheckCircle /> <Text ml=\"2\">Create Community</Text>\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </Flex>\r\n          </Box>\r\n        </Flex>\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default NewCommunity;\r\n","import {\r\n  Flex,\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { CheckCircle, Edit, Upload } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport axios from \"axios\";\r\n\r\nfunction UpdateCommunity({\r\n  id,\r\n  communityName,\r\n  communityDescription,\r\n  communityLogo,\r\n  close,\r\n}) {\r\n  const Logos = [\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/defaultCommunityLogo_gUich_dto.svg?updatedAt=1633160835413\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-3_PXKqFbob4Lj.svg?updatedAt=1633165287477\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-2_7d7-btPTg.svg?updatedAt=1633165286592\",\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/dc-1_JT81iTWJQGq.svg?updatedAt=1633165286130\",\r\n  ];\r\n\r\n  const { user } = User();\r\n  const [logo, setLogo] = useState(communityLogo);\r\n  const [name, setName] = useState(communityName);\r\n  const [description, setDescription] = useState(communityDescription);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const uploadLogo = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setLogo(res.data.url);\r\n      onClose();\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const LogoModal = () => {\r\n    return (\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n          <ModalHeader>Choose a logo</ModalHeader>\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Flex wrap=\"wrap\">\r\n              <Flex\r\n                cursor=\"pointer\"\r\n                border=\"2px\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                _hover={{ borderColor: \"whiteAlpha.50\" }}\r\n                borderColor=\"transparent\"\r\n                mb=\"3\"\r\n                mr=\"3\"\r\n                w=\"24\"\r\n                h=\"24\"\r\n                rounded=\"xl\"\r\n                bg=\"whiteAlpha.300\"\r\n                onClick={() => {\r\n                  document.getElementById(\"file\").click();\r\n                }}\r\n              >\r\n                <Upload size=\"30px\" />\r\n              </Flex>\r\n              {Logos.map((data, key) => (\r\n                <Box\r\n                  key={key}\r\n                  cursor=\"pointer\"\r\n                  onClick={() => {\r\n                    setLogo(data);\r\n                  }}\r\n                >\r\n                  <Image\r\n                    border=\"4px\"\r\n                    borderColor={\r\n                      logo === data ? \"brand.primary\" : \"transparent\"\r\n                    }\r\n                    mb=\"3\"\r\n                    mr=\"3\"\r\n                    src={data}\r\n                    w=\"24\"\r\n                    h=\"24\"\r\n                    rounded=\"xl\"\r\n                  />\r\n                </Box>\r\n              ))}\r\n            </Flex>\r\n          </ModalBody>\r\n          <Input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            accept=\"image/*\"\r\n            display=\"none\"\r\n            onChange={(e) => uploadLogo(e.target.files[0])}\r\n          />\r\n          <ModalFooter>\r\n            <Button colorScheme=\"blue\" mr={3} onClick={onClose}>\r\n              {uploading ? <Spinner /> : <>Done</>}\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const createCommunity = async (name, description, logo) => {\r\n    if (name.length > 3) {\r\n      setLogo(logo);\r\n      try {\r\n        setLoading(true);\r\n        const updates = {\r\n          id,\r\n          name,\r\n          description,\r\n          logo,\r\n          createdBy: [user?.email],\r\n        };\r\n\r\n        const { error } = await supabase.from(\"communities\").upsert(updates, {\r\n          returning: \"minimal\",\r\n        });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Community created successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        close();\r\n        window.location.reload();\r\n      } catch (error) {\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      mt=\"6\"\r\n      w=\"full\"\r\n      direction={{ base: \"column\", md: \"row\" }}\r\n      color=\"white\"\r\n    >\r\n      <LogoModal />\r\n      <Box minW=\"24\" mr=\"6\" mb=\"4\">\r\n        <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mb=\"1\">\r\n          Logo\r\n        </Text>\r\n        <Box position=\"relative\" w=\"-webkit-fit-content\">\r\n          <Box\r\n            position=\"absolute\"\r\n            bg=\"blackAlpha.500\"\r\n            p=\"2\"\r\n            cursor=\"pointer\"\r\n            _hover={{ bg: \"blackAlpha.600\" }}\r\n            transitionDuration=\"200ms\"\r\n            roundedTopStart=\"xl\"\r\n            bottom=\"0\"\r\n            right=\"0\"\r\n            onClick={onOpen}\r\n          >\r\n            <Edit size=\"18px\" />\r\n          </Box>\r\n          <Image src={logo} w=\"24\" h=\"24\" rounded=\"lg\" />\r\n        </Box>\r\n      </Box>\r\n      <Box w=\"full\">\r\n        <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n          Name *\r\n        </Text>\r\n        <Input\r\n          value={name}\r\n          w=\"full\"\r\n          type=\"text\"\r\n          mt=\"1.5\"\r\n          py=\"5\"\r\n          rounded=\"lg\"\r\n          color=\"white\"\r\n          _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n          _focus={{ borderColor: \"brand.primary\" }}\r\n          borderColor=\"whiteAlpha.400\"\r\n          _placeholder={{ color: \"whiteAlpha.400\" }}\r\n          placeholder=\"Community name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Text color=\"white\" mt=\"4\" fontWeight=\"medium\" fontSize=\"sm\">\r\n          Description\r\n        </Text>\r\n        <Textarea\r\n          value={description}\r\n          w=\"full\"\r\n          type=\"email\"\r\n          mt=\"1.5\"\r\n          p=\"4\"\r\n          rounded=\"lg\"\r\n          color=\"white\"\r\n          _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n          _focus={{ borderColor: \"brand.primary\" }}\r\n          borderColor=\"whiteAlpha.400\"\r\n          _placeholder={{ color: \"whiteAlpha.400\" }}\r\n          placeholder=\"Describe your community\"\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <Flex mt=\"6\" justify=\"end\" w=\"full\">\r\n          <Button\r\n            display=\"flex\"\r\n            float=\"right\"\r\n            rounded=\"lg\"\r\n            w={loading ? \"100px\" : \"auto\"}\r\n            _focus={{}}\r\n            _active={{}}\r\n            color=\"black\"\r\n            onClick={() => createCommunity(name, description, logo)}\r\n          >\r\n            {loading ? (\r\n              <Spinner />\r\n            ) : (\r\n              <>\r\n                <CheckCircle /> <Text ml=\"2\">Save</Text>\r\n              </>\r\n            )}\r\n          </Button>\r\n        </Flex>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default UpdateCommunity;\r\n","import {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  BreadcrumbLink,\r\n  Box,\r\n  Flex,\r\n} from \"@chakra-ui/react\";\r\nimport { ArrowLeft } from \"react-feather\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction CurrentLocation({ username, communityName, link }) {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" experimental_spaceX=\"2\">\r\n      <Box\r\n        cursor=\"pointer\"\r\n        onClick={() => {\r\n          if (link) {\r\n            window.location.href = link;\r\n          } else {\r\n            history.goBack();\r\n          }\r\n        }}\r\n      >\r\n        <ArrowLeft size=\"18px\" />\r\n      </Box>\r\n      <Breadcrumb color=\"white\">\r\n        <BreadcrumbItem>\r\n          <BreadcrumbLink href=\"/home\">{username}</BreadcrumbLink>\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem>\r\n          <BreadcrumbLink href=\"#\">{communityName}</BreadcrumbLink>\r\n        </BreadcrumbItem>\r\n      </Breadcrumb>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default CurrentLocation;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Text,\r\n  Divider,\r\n  Button,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalCloseButton,\r\n  useDisclosure,\r\n  ModalBody,\r\n} from \"@chakra-ui/react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Settings, Plus } from \"react-feather\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\nimport EventCard from \"../../components/Cards/EventCard.component\";\r\nimport UpdateCommunity from \"../Update/UpdateCommunity.page\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\n\r\nfunction ManageCommunity(props) {\r\n  const id = props.match.params.id;\r\n  const [community, setCommunity] = useState(undefined);\r\n  const [upcomingEvents, setUpcomingEvents] = useState(undefined);\r\n  const { user } = User();\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useEffect(() => {\r\n    getCommunity();\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\"id, name, image, description, date, community, audience\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"community\", id)\r\n        .order(\"created_at\", { ascending: false });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      let uE = [];\r\n      let dE = [];\r\n      data.forEach((data) => {\r\n        if (isUpcoming(data.date)) {\r\n          uE.push(data);\r\n        } else {\r\n          dE.push(data);\r\n        }\r\n      });\r\n\r\n      setUpcomingEvents(uE);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const UpcomingEvents = () => {\r\n    return (\r\n      <>\r\n        <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n          <Link to={`/manage/community/${id}/events`}>\r\n            <Text\r\n              casing=\"capitalize\"\r\n              fontSize=\"sm\"\r\n              fontWeight=\"semibold\"\r\n              letterSpacing=\"2px\"\r\n              color=\"white\"\r\n            >\r\n              UPCOMING EVENTS\r\n            </Text>\r\n          </Link>\r\n          <Link to={`/manage/community/${id}/new/event`}>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"alpha.white\"\r\n              border=\"1px\"\r\n              borderColor=\"transparent\"\r\n              leftIcon={<Plus size=\"18px\" />}\r\n              px=\"4\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Link>\r\n        </Flex>\r\n\r\n        {upcomingEvents?.length > 0 ? (\r\n          upcomingEvents?.map((data, key) => (\r\n            <Flex wrap=\"wrap\" mt=\"4\">\r\n              <EventCard key={key} {...data} />\r\n            </Flex>\r\n          ))\r\n        ) : upcomingEvents ? (\r\n          <Flex\r\n            color=\"whiteAlpha.600\"\r\n            my=\"10\"\r\n            justify=\"center\"\r\n            textAlign=\"center\"\r\n          >\r\n            🐝 No upcoming events\r\n          </Flex>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Box>\r\n        <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\r\n          <ModalOverlay />\r\n          <ModalContent bg=\"#1D2023\">\r\n            <ModalHeader color=\"white\">\r\n              Settings <ModalCloseButton color=\"white\" />\r\n            </ModalHeader>\r\n\r\n            <ModalBody px=\"8\" pb=\"8\">\r\n              <UpdateCommunity\r\n                communityName={community?.name}\r\n                communityDescription={community?.description}\r\n                communityLogo={community?.logo}\r\n                id={community?.id}\r\n                close={onClose}\r\n              />\r\n            </ModalBody>\r\n          </ModalContent>\r\n        </Modal>\r\n\r\n        <CurrentLocation\r\n          link=\"/home\"\r\n          username={user?.username}\r\n          communityName={community?.name}\r\n        />\r\n\r\n        <Flex justify=\"space-between\" alignItems=\"end\">\r\n          <Box>\r\n            <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"bold\">\r\n              {community?.name}\r\n            </Text>\r\n            {community?.description ? (\r\n              <Text fontSize={{ base: \"xs\", md: \"sm\" }} fontWeight=\"thin\">\r\n                {community?.description}\r\n              </Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            _hover={{ bg: \"whiteAlpha.200\" }}\r\n            rounded=\"full\"\r\n            p=\"2\"\r\n            cursor=\"pointer\"\r\n            onClick={() => onOpen()}\r\n          >\r\n            <Settings size=\"20px\" />\r\n          </Box>\r\n        </Flex>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n      </Box>\r\n      {upcomingEvents ? <UpcomingEvents /> : <></>}\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default ManageCommunity;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { Box, Divider, Text, Flex, Button } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Plus } from \"react-feather\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport EventCard from \"../../components/Cards/EventCard.component\";\r\nimport { isUpcoming } from \"../../Helpers/isUpcoming\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\n\r\nfunction Events(props) {\r\n  const id = props.match.params.id;\r\n  const [active, setActive] = useState(\"Upcoming\");\r\n  const [upcomingEvents, setUpcomingEvents] = useState(undefined);\r\n  const [doneEvents, setDoneEvents] = useState(undefined);\r\n  const NavigationItems = [\"Upcoming\", \"Done\"];\r\n  const [community, setCommunity] = useState(undefined);\r\n  const { user } = User();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getEvents();\r\n  }, []);\r\n\r\n  const getEvents = async () => {\r\n    try {\r\n      if (id) {\r\n        const { data, error } = await supabase\r\n          .from(\"events\")\r\n          .select(\"id, name, image, description, date, community, audience\")\r\n          .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n          .eq(\"community\", id)\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        let uE = [];\r\n        let dE = [];\r\n        data.forEach((data) => {\r\n          if (isUpcoming(data.date)) {\r\n            uE.push(data);\r\n          } else {\r\n            dE.push(data);\r\n          }\r\n        });\r\n        setDoneEvents(dE);\r\n        setUpcomingEvents(uE);\r\n      } else {\r\n        const { data, error } = await supabase\r\n          .from(\"events\")\r\n          .select(\"id, name, image, description, date, community, audience\")\r\n          .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        let uE = [];\r\n        let dE = [];\r\n        data.forEach((data) => {\r\n          if (isUpcoming(data.date)) {\r\n            uE.push(data);\r\n          } else {\r\n            dE.push(data);\r\n          }\r\n        });\r\n        setDoneEvents(dE);\r\n        setUpcomingEvents(uE);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const Navigation = ({ name }) => {\r\n    return (\r\n      <Box\r\n        py=\"2\"\r\n        px=\"4\"\r\n        borderBottom=\"2px\"\r\n        onClick={() => setActive(name)}\r\n        transitionDuration=\"200ms\"\r\n        cursor=\"pointer\"\r\n        color={active === name ? \"brand.primary\" : \"whiteAlpha.700\"}\r\n        _hover={{ color: active === name ? \"brand.primary\" : \"white\" }}\r\n        borderColor={active === name ? \"brand.primary\" : \"transparent\"}\r\n      >\r\n        <Text>{name}</Text>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Flex alignItems=\"center\" justify=\"space-between\">\r\n          <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n            Events\r\n          </Text>\r\n          <Button\r\n            size=\"sm\"\r\n            bg=\"alpha.white\"\r\n            border=\"1px\"\r\n            borderColor=\"transparent\"\r\n            leftIcon={<Plus size=\"18px\" />}\r\n            px=\"4\"\r\n            _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n            _focus={{}}\r\n            _active={{ bg: \"whiteAlpha.200\" }}\r\n            onClick={() => {\r\n              const to = id\r\n                ? `/manage/community/${id}/new/event`\r\n                : \"/new/event\";\r\n              window.location.href = to;\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Flex>\r\n        <Flex mt=\"3\" experimental_spaceX=\"3\">\r\n          {NavigationItems.map((data, key) => (\r\n            <Navigation name={data} />\r\n          ))}\r\n        </Flex>\r\n        <Divider color=\"white\" opacity=\"0.2\" />\r\n\r\n        <Flex wrap=\"wrap\" mt=\"6\">\r\n          {active === \"Upcoming\" ? (\r\n            upcomingEvents?.map((data, key) => (\r\n              <EventCard key={key} {...data} />\r\n            ))\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {active === \"Done\" ? (\r\n            doneEvents?.map((data, key) => <EventCard key={key} {...data} />)\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Flex>\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Events;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Divider,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  AspectRatio,\r\n  Select,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport { ArrowLeft, Calendar, CheckCircle, MapPin } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\n\r\nfunction NewEvent(props) {\r\n  const id = props.match.params.id;\r\n  const Platforms = [\r\n    {\r\n      name: \"💻 Virtual\",\r\n      enum: \"Virtual\",\r\n      placeholder: \"Link to event\",\r\n    },\r\n    {\r\n      name: \"🌍 In Person\",\r\n      enum: \"InPerson\",\r\n      placeholder: \"Location to event\",\r\n    },\r\n  ];\r\n  const { user } = User();\r\n  const [active, setActive] = useState(Platforms[0]);\r\n  const [link, setLink] = useState(\"\");\r\n  const [image, setImage] = useState(\r\n    \"https://ik.imagekit.io/86h5mrsjotwk/defaultEvent_GGD_P8xy-jP.png?updatedAt=1633174215871\"\r\n  );\r\n  const [name, setName] = useState(\"\");\r\n  const [date, setDate] = useState({});\r\n  const [description, setDescription] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [community, setCommunity] = useState(undefined);\r\n  const [communitySelected, setCommunitySelected] = useState(\"None\");\r\n  const [communities, setCommunities] = useState(undefined);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getCommunities();\r\n  }, []);\r\n\r\n  const uploadImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setImage(res.data.url);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const getCommunities = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")]);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunities(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const createEvent = async () => {\r\n    if (name.length > 3) {\r\n      setImage(image);\r\n      try {\r\n        setLoading(true);\r\n        let updates = {};\r\n\r\n        if (id) {\r\n          updates = {\r\n            name,\r\n            description,\r\n            content,\r\n            date,\r\n            link,\r\n            image,\r\n            admin: localStorage.getItem(\"email\"),\r\n            platform: active.enum,\r\n            createdBy: [localStorage.getItem(\"email\")],\r\n            community: id,\r\n          };\r\n          const { data } = await supabase\r\n            .from(\"communities\")\r\n            .select(\"id, events\")\r\n            .eq(\"id\", id)\r\n            .single();\r\n\r\n          await supabase\r\n            .from(\"communities\")\r\n            .upsert(\r\n              { id: data.id, events: data.events + 1 },\r\n              { returning: \"minimal\" }\r\n            )\r\n            .single();\r\n        } else {\r\n          updates = {\r\n            name,\r\n            description,\r\n            content,\r\n            date,\r\n            link,\r\n            image,\r\n            admin: localStorage.getItem(\"email\"),\r\n            platform: active.enum,\r\n            createdBy: [localStorage.getItem(\"email\")],\r\n            community: communitySelected === \"None\" ? null : communitySelected,\r\n          };\r\n        }\r\n\r\n        const EventData = await supabase\r\n          .from(\"events\")\r\n          .upsert(updates)\r\n          .single();\r\n        if (communitySelected !== \"None\") {\r\n          const { data } = await supabase\r\n            .from(\"communities\")\r\n            .select(\"id, events\")\r\n            .eq(\"id\", communitySelected)\r\n            .single();\r\n\r\n          await supabase\r\n            .from(\"communities\")\r\n            .upsert(\r\n              { id: data.id, events: data.events + 1 },\r\n              { returning: \"minimal\" }\r\n            );\r\n        }\r\n\r\n        if (EventData.error) {\r\n          throw EventData.error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Event created successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n\r\n        setTimeout(() => {\r\n          window.location.href = `/manage/event/${EventData.data.id}`;\r\n        }, 1000);\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Event name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const EventPlatform = () => {\r\n    return (\r\n      <Box>\r\n        <Flex\r\n          fontSize=\"xl\"\r\n          fontWeight=\"semibold\"\r\n          color=\"brand.primary\"\r\n          alignItems=\"center\"\r\n          experimental_spaceX=\"3\"\r\n          mt=\"8\"\r\n          mb=\"4\"\r\n        >\r\n          <MapPin /> <Text>Where will it happen? *</Text>\r\n        </Flex>\r\n        <Flex\r\n          p=\"1.5\"\r\n          bg=\"whiteAlpha.200\"\r\n          w=\"-webkit-fit-content\"\r\n          experimental_spaceX=\"3\"\r\n          rounded=\"lg\"\r\n        >\r\n          {Platforms.map((data, key) => (\r\n            <Box\r\n              onClick={() => {\r\n                setActive(data);\r\n                setLink(\"\");\r\n              }}\r\n              cursor=\"pointer\"\r\n              color={data.name === active.name ? \"white\" : \"whiteAlpha.800\"}\r\n              _hover={{ color: \"white\" }}\r\n              transitionDuration=\"200ms\"\r\n              key={key}\r\n              bg={data.name === active.name ? \"whiteAlpha.300\" : \"transparent\"}\r\n              px=\"4\"\r\n              py=\"1\"\r\n              rounded=\"base\"\r\n            >\r\n              {data.name}\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\" experimental_spaceX=\"4\">\r\n          {!id ? (\r\n            <Box\r\n              cursor=\"pointer\"\r\n              p=\"2\"\r\n              onClick={() => {\r\n                history.goBack();\r\n              }}\r\n              rounded=\"full\"\r\n              _hover={{ bg: \"whiteAlpha.200\" }}\r\n            >\r\n              <ArrowLeft />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n            Create Event\r\n          </Text>\r\n        </Flex>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n      </Box>\r\n      <Flex alignItems=\"center\" mt=\"6\" direction=\"column\">\r\n        <AspectRatio\r\n          ratio={1920 / 1080}\r\n          w={{ base: \"full\", md: \"80%\", lg: \"70%\" }}\r\n          shadow=\"xl\"\r\n        >\r\n          <Box>\r\n            <Image rounded=\"lg\" src={image} />\r\n            <Button\r\n              position=\"absolute\"\r\n              bottom=\"0\"\r\n              left=\"0\"\r\n              m=\"4\"\r\n              size=\"sm\"\r\n              bg=\"blackAlpha.600\"\r\n              border=\"1px\"\r\n              onClick={() => document.getElementById(\"file\").click()}\r\n              borderColor=\"transparent\"\r\n              _hover={{ borderColor: \"whiteAlpha.200\", bg: \"blackAlpha.800\" }}\r\n              _focus={{}}\r\n              _active={{ bg: \"blackAlpha.700\" }}\r\n            >\r\n              {uploading ? <Spinner /> : <>Change cover photo</>}\r\n            </Button>\r\n          </Box>\r\n        </AspectRatio>\r\n        <Input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          id=\"file\"\r\n          display=\"none\"\r\n          onChange={(e) => uploadImage(e.target.files[0])}\r\n        />\r\n        <Box w={{ base: \"full\", md: \"80%\", lg: \"70%\" }} mt=\"4\">\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              createEvent();\r\n            }}\r\n          >\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n              Event Name *\r\n            </Text>\r\n            <Input\r\n              w=\"full\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              type=\"text\"\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              isRequired={true}\r\n              px=\"0\"\r\n              rounded=\"none\"\r\n              color=\"white\"\r\n              fontSize=\"xl\"\r\n              borderTop=\"none\"\r\n              borderRight=\"none\"\r\n              borderLeft=\"none\"\r\n              borderBottom=\"1px\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Designing Session\"\r\n            />\r\n            <EventPlatform />\r\n            <Input\r\n              w=\"full\"\r\n              type=\"text\"\r\n              mt=\"3\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              isRequired={true}\r\n              value={link}\r\n              onChange={(e) => setLink(e.target.value)}\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder={active.placeholder}\r\n            />\r\n            <Flex\r\n              fontSize=\"xl\"\r\n              fontWeight=\"semibold\"\r\n              color=\"brand.primary\"\r\n              alignItems=\"center\"\r\n              experimental_spaceX=\"3\"\r\n              mt=\"8\"\r\n            >\r\n              <Calendar /> <Text>When will it happen? *</Text>\r\n            </Flex>\r\n            <Flex experimental_spaceX=\"4\" mt=\"2\">\r\n              <Input\r\n                w=\"full\"\r\n                type=\"date\"\r\n                placeholder=\"Date\"\r\n                onChange={(e) => {\r\n                  const dateString = e.target.value;\r\n                  console.log(dateString);\r\n                  const dateFormatted = dateString.split(\"-\");\r\n                  setDate({\r\n                    ...date,\r\n                    date: dateFormatted[2],\r\n                    month: dateFormatted[1],\r\n                    year: dateFormatted[0],\r\n                  });\r\n                }}\r\n                mt=\"1.5\"\r\n                py=\"5\"\r\n                rounded=\"lg\"\r\n                isRequired={true}\r\n                color=\"white\"\r\n                _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                _focus={{ borderColor: \"brand.primary\" }}\r\n                borderColor=\"whiteAlpha.400\"\r\n                _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              />\r\n              <Input\r\n                w={{ sm: \"70%\", lg: \"40%\" }}\r\n                type=\"time\"\r\n                placeholder=\"Time\"\r\n                onChange={(e) => {\r\n                  setDate({\r\n                    ...date,\r\n                    time: moment(e.target.value, \"HH:mm\").format(\"hh:mm A\"),\r\n                  });\r\n                }}\r\n                mt=\"1.5\"\r\n                isRequired={true}\r\n                py=\"5\"\r\n                rounded=\"lg\"\r\n                color=\"white\"\r\n                _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                _focus={{ borderColor: \"brand.primary\" }}\r\n                borderColor=\"whiteAlpha.400\"\r\n                _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              />\r\n            </Flex>\r\n            <Text mt=\"1\" color=\"whiteAlpha.500\">\r\n              * Date and time is in GMT+5:30\r\n            </Text>\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"6\">\r\n              Description\r\n            </Text>\r\n            <Input\r\n              w=\"full\"\r\n              type=\"text\"\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Describe about your event in brief\"\r\n            />\r\n            <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"4\">\r\n              Content\r\n            </Text>\r\n            <Textarea\r\n              w=\"full\"\r\n              onChange={(e) => setContent(e.target.value)}\r\n              type=\"text\"\r\n              mt=\"1.5\"\r\n              py=\"3\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n              placeholder=\"Write about your event\"\r\n            />\r\n            {!community ? (\r\n              <>\r\n                <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"4\">\r\n                  Community\r\n                </Text>\r\n                <Select\r\n                  color=\"white\"\r\n                  _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n                  _focus={{ borderColor: \"brand.primary\" }}\r\n                  borderColor=\"whiteAlpha.400\"\r\n                  _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                  mt=\"2\"\r\n                  onChange={(e) => setCommunitySelected(e.target.value)}\r\n                >\r\n                  <option\r\n                    style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                    value={null}\r\n                  >\r\n                    None\r\n                  </option>\r\n                  {communities?.map((data, key) => (\r\n                    <option\r\n                      key={key}\r\n                      style={{ color: \"white\", backgroundColor: \"black\" }}\r\n                      value={data.id}\r\n                    >\r\n                      {data.name}\r\n                    </option>\r\n                  ))}\r\n                </Select>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <Button\r\n              color=\"black\"\r\n              float=\"right\"\r\n              mt=\"6\"\r\n              type=\"submit\"\r\n              rounded=\"lg\"\r\n              _focus={{}}\r\n              _active={{}}\r\n              leftIcon={loading ? <Spinner /> : <CheckCircle size=\"20px\" />}\r\n            >\r\n              {loading ? <></> : <>Create Event</>}\r\n            </Button>\r\n          </form>\r\n        </Box>\r\n      </Flex>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default NewEvent;\r\n","import { Table, Box, Thead, Tr, Th, Tbody, Td, Text } from \"@chakra-ui/react\";\r\n\r\nfunction AudienceList({ audience, communityId }) {\r\n  return (\r\n    <Box border=\"1px\" rounded=\"xl\" mt=\"4\" borderColor=\"whiteAlpha.400\">\r\n      <Table variant=\"simple\" colorScheme=\"whiteAlpha\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th color=\"whiteAlpha.600\">Name</Th>\r\n            <Th\r\n              color=\"whiteAlpha.600\"\r\n              display={{ base: \"none\", md: \"table-cell\" }}\r\n            >\r\n              Email\r\n            </Th>\r\n            <Th color=\"whiteAlpha.600\">Events</Th>\r\n          </Tr>\r\n        </Thead>\r\n        <Tbody>\r\n          {audience?.length > 0 ? (\r\n            audience?.map((data, key) => (\r\n              <Tr key={key}>\r\n                <Td maxW={{ base: \"100px\", md: \"200px\" }}>{data.name}</Td>\r\n                <Td display={{ base: \"none\", md: \"table-cell\" }} maxW=\"200px\">\r\n                  {data.email}\r\n                </Td>\r\n                <Td>{data.events.length}</Td>\r\n              </Tr>\r\n            ))\r\n          ) : (\r\n            <Text py=\"2\" px=\"6\" color=\"whiteAlpha.600\">\r\n              No guests\r\n            </Text>\r\n          )}\r\n        </Tbody>\r\n      </Table>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AudienceList;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Flex,\r\n  Avatar,\r\n  Box,\r\n  Text,\r\n  useDisclosure,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalBody,\r\n  ModalContent,\r\n  ModalCloseButton,\r\n  ModalFooter,\r\n  Button,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction HostCard({ id, admin, email }) {\r\n  const [user, setUser] = useState(undefined);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  const removeHost = async (email) => {\r\n    try {\r\n      const { data } = await supabase\r\n        .from(\"events\")\r\n        .select(\"id, createdBy\")\r\n        .eq(\"id\", id)\r\n        .single();\r\n      const newCreatedBy = [];\r\n      data?.createdBy.forEach((data) => {\r\n        if (data !== email) {\r\n          newCreatedBy.push(data);\r\n        }\r\n      });\r\n      await supabase\r\n        .from(\"events\")\r\n        .upsert(\r\n          { id: data.id, createdBy: newCreatedBy },\r\n          { returning: \"minimal\" }\r\n        );\r\n\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const RemoveHostModal = () => {\r\n    return (\r\n      <Modal isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n          <ModalCloseButton />\r\n          <ModalBody>\r\n            <Flex\r\n              transitionDuration=\"200ms\"\r\n              overflow=\"clip\"\r\n              p=\"2\"\r\n              alignItems=\"center\"\r\n              rounded=\"xl\"\r\n              w=\"full\"\r\n              experimental_spaceX=\"4\"\r\n              maxW={{ base: \"full\", md: \"280px\" }}\r\n            >\r\n              <Avatar\r\n                size=\"md\"\r\n                src={user?.avatar_url}\r\n                name={user?.username || email}\r\n              />\r\n              <Box>\r\n                <Text\r\n                  align=\"left\"\r\n                  color=\"white\"\r\n                  whiteSpace=\"nowrap\"\r\n                  fontWeight=\"semibold\"\r\n                  fontSize=\"lg\"\r\n                >\r\n                  {user?.username}\r\n                </Text>\r\n                <Text\r\n                  align=\"left\"\r\n                  color=\"white\"\r\n                  whiteSpace=\"nowrap\"\r\n                  fontSize={user ? \"xs\" : \"sm\"}\r\n                >\r\n                  {email}\r\n                </Text>\r\n              </Box>\r\n            </Flex>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"whiteAlpha.300\"\r\n              mr=\"2\"\r\n              _hover={{}}\r\n              _active={{}}\r\n              onClick={onClose}\r\n            >\r\n              Close\r\n            </Button>\r\n            <Button\r\n              size=\"sm\"\r\n              bg=\"red\"\r\n              _hover={{}}\r\n              _active={{}}\r\n              onClick={() => {\r\n                if (email === window.localStorage.getItem(\"email\")) {\r\n                  toast({\r\n                    title: \"Error\",\r\n                    position: \"bottom\",\r\n                    description: \"Cannot remove admin from host\",\r\n                    status: \"error\",\r\n                    duration: 5000,\r\n                    isClosable: true,\r\n                  });\r\n                } else {\r\n                  removeHost(email);\r\n                }\r\n              }}\r\n            >\r\n              Remove from host\r\n            </Button>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", email)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      onClick={() => {\r\n        if (admin === window.localStorage.getItem(\"email\")) {\r\n          onOpen();\r\n        }\r\n      }}\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mr={{ md: \"4\" }}\r\n      mb=\"4\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      p=\"2\"\r\n      alignItems=\"center\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW={{ base: \"full\", md: \"280px\" }}\r\n    >\r\n      <RemoveHostModal />\r\n      <Avatar size=\"md\" src={user?.avatar_url} name={user?.username || email} />\r\n      <Box>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontWeight=\"semibold\"\r\n          fontSize=\"lg\"\r\n        >\r\n          {user?.username}\r\n        </Text>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontSize={user ? \"xs\" : \"sm\"}\r\n        >\r\n          {email}\r\n        </Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default HostCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Flex,\r\n  Box,\r\n  Text,\r\n  Image,\r\n  Input,\r\n  Button,\r\n  Textarea,\r\n  useToast,\r\n  Spinner,\r\n  AspectRatio,\r\n} from \"@chakra-ui/react\";\r\nimport { useState } from \"react\";\r\nimport { Calendar, CheckCircle, MapPin } from \"react-feather\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\n\r\nfunction UpdateEvent({\r\n  eventId,\r\n  eventName,\r\n  eventDescription,\r\n  eventImage,\r\n  eventPlatform,\r\n  eventLink,\r\n  eventDate,\r\n  eventContent,\r\n}) {\r\n  const Platforms = [\r\n    {\r\n      name: \"💻 Virtual\",\r\n      enum: \"Virtual\",\r\n      placeholder: \"Link to event\",\r\n    },\r\n    {\r\n      name: \"🌍 In Person\",\r\n      enum: \"InPerson\",\r\n      placeholder: \"Location to event\",\r\n    },\r\n  ];\r\n  const [active, setActive] = useState(\r\n    eventPlatform === \"Virtual\" ? Platforms[0] : Platforms[1]\r\n  );\r\n  const [link, setLink] = useState(eventLink);\r\n  const [image, setImage] = useState(eventImage);\r\n  const [name, setName] = useState(eventName);\r\n  const [date, setDate] = useState(eventDate);\r\n  const [description, setDescription] = useState(eventDescription);\r\n  const [content, setContent] = useState(eventContent);\r\n  const [loading, setLoading] = useState(false);\r\n  const [uploading, setUploading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  const uploadImage = async (file) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"kolmmszz\");\r\n    try {\r\n      setUploading(true);\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/relmcloud/image/upload\",\r\n        formData\r\n      );\r\n      console.log(res);\r\n      setImage(res.data.url);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const updateEvent = async () => {\r\n    if (name.length > 3) {\r\n      try {\r\n        setLoading(true);\r\n        let updates = {};\r\n\r\n        updates = {\r\n          id: eventId,\r\n          name,\r\n          description,\r\n          content,\r\n          date,\r\n          link,\r\n          image,\r\n          platform: active.enum,\r\n        };\r\n\r\n        const { error } = await supabase.from(\"events\").upsert(updates, {\r\n          returning: \"minimal\",\r\n        });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        toast({\r\n          title: \"Success\",\r\n          position: \"bottom\",\r\n          description: \"Event updated successfully!\",\r\n          status: \"success\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n        window.location.reload();\r\n      } catch (error) {\r\n        console.log(error);\r\n        toast({\r\n          title: \"Error\",\r\n          position: \"bottom\",\r\n          description: error.error_description || error.message,\r\n          status: \"error\",\r\n          duration: 5000,\r\n          isClosable: true,\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      toast({\r\n        title: \"Error\",\r\n        position: \"bottom\",\r\n        description: \"Event name should have more than 3 characters\",\r\n        status: \"error\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const EventPlatform = () => {\r\n    return (\r\n      <Box>\r\n        <Flex\r\n          fontSize=\"xl\"\r\n          fontWeight=\"semibold\"\r\n          color=\"brand.primary\"\r\n          alignItems=\"center\"\r\n          experimental_spaceX=\"3\"\r\n          mt=\"8\"\r\n          mb=\"4\"\r\n        >\r\n          <MapPin /> <Text>Where will it happen? *</Text>\r\n        </Flex>\r\n        <Flex\r\n          p=\"1.5\"\r\n          bg=\"whiteAlpha.200\"\r\n          w=\"-webkit-fit-content\"\r\n          experimental_spaceX=\"3\"\r\n          rounded=\"lg\"\r\n        >\r\n          {Platforms.map((data, key) => (\r\n            <Box\r\n              onClick={() => {\r\n                setActive(data);\r\n                setLink(\"\");\r\n              }}\r\n              cursor=\"pointer\"\r\n              color={data.name === active.name ? \"white\" : \"whiteAlpha.800\"}\r\n              _hover={{ color: \"white\" }}\r\n              transitionDuration=\"200ms\"\r\n              key={key}\r\n              bg={data.name === active.name ? \"whiteAlpha.300\" : \"transparent\"}\r\n              px=\"4\"\r\n              py=\"1\"\r\n              rounded=\"base\"\r\n            >\r\n              {data.name}\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" mt=\"6\" direction=\"column\" color=\"white\">\r\n      <AspectRatio ratio={1920 / 1080} w=\"full\" shadow=\"xl\">\r\n        <Box>\r\n          <Image rounded=\"lg\" src={image} />\r\n          <Button\r\n            position=\"absolute\"\r\n            bottom=\"0\"\r\n            left=\"0\"\r\n            m=\"4\"\r\n            size=\"sm\"\r\n            bg=\"blackAlpha.600\"\r\n            border=\"1px\"\r\n            onClick={() => document.getElementById(\"file\").click()}\r\n            borderColor=\"transparent\"\r\n            _hover={{ borderColor: \"whiteAlpha.200\", bg: \"blackAlpha.800\" }}\r\n            _focus={{}}\r\n            _active={{ bg: \"blackAlpha.700\" }}\r\n          >\r\n            {uploading ? <Spinner /> : <>Change cover photo</>}\r\n          </Button>\r\n        </Box>\r\n      </AspectRatio>\r\n      <Input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        id=\"file\"\r\n        display=\"none\"\r\n        onChange={(e) => uploadImage(e.target.files[0])}\r\n      />\r\n      <Box w=\"full\" mt=\"4\">\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            updateEvent();\r\n          }}\r\n        >\r\n          <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\">\r\n            Event Name *\r\n          </Text>\r\n          <Input\r\n            w=\"full\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            type=\"text\"\r\n            value={name}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            isRequired={true}\r\n            px=\"0\"\r\n            rounded=\"none\"\r\n            color=\"white\"\r\n            fontSize=\"xl\"\r\n            borderTop=\"none\"\r\n            borderRight=\"none\"\r\n            borderLeft=\"none\"\r\n            borderBottom=\"1px\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Designing Session\"\r\n          />\r\n          <EventPlatform />\r\n          <Input\r\n            w=\"full\"\r\n            type=\"text\"\r\n            mt=\"3\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            isRequired={true}\r\n            value={link}\r\n            onChange={(e) => setLink(e.target.value)}\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder={active.placeholder}\r\n          />\r\n          <Flex\r\n            fontSize=\"xl\"\r\n            fontWeight=\"semibold\"\r\n            color=\"brand.primary\"\r\n            alignItems=\"center\"\r\n            experimental_spaceX=\"3\"\r\n            mt=\"8\"\r\n          >\r\n            <Calendar /> <Text>When will it happen? *</Text>\r\n          </Flex>\r\n          <Flex experimental_spaceX=\"4\" mt=\"2\">\r\n            <Input\r\n              w=\"full\"\r\n              type=\"date\"\r\n              defaultValue={\r\n                eventDate.year + \"-\" + eventDate.month + \"-\" + eventDate.date\r\n              }\r\n              placeholder=\"Date\"\r\n              onChange={(e) => {\r\n                const dateString = e.target.value;\r\n                console.log(dateString);\r\n                const dateFormatted = dateString.split(\"-\");\r\n                setDate({\r\n                  ...date,\r\n                  date: dateFormatted[2],\r\n                  month: dateFormatted[1],\r\n                  year: dateFormatted[0],\r\n                });\r\n                console.log(date);\r\n              }}\r\n              mt=\"1.5\"\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              isRequired={true}\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            />\r\n            <Input\r\n              w={{ sm: \"70%\", lg: \"40%\" }}\r\n              type=\"time\"\r\n              placeholder=\"Time\"\r\n              defaultValue={moment(eventDate.time, \"hh:mm A\").format(\"HH:mm\")}\r\n              onChange={(e) => {\r\n                setDate({\r\n                  ...date,\r\n                  time: moment(e.target.value, \"HH:mm\").format(\"hh:mm A\"),\r\n                });\r\n              }}\r\n              mt=\"1.5\"\r\n              isRequired={true}\r\n              py=\"5\"\r\n              rounded=\"lg\"\r\n              color=\"white\"\r\n              _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n              _focus={{ borderColor: \"brand.primary\" }}\r\n              borderColor=\"whiteAlpha.400\"\r\n              _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            />\r\n          </Flex>\r\n          <Text mt=\"1\" color=\"whiteAlpha.500\">\r\n            * Date and time is in GMT+5:30\r\n          </Text>\r\n          <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"6\">\r\n            Description\r\n          </Text>\r\n          <Input\r\n            value={description}\r\n            w=\"full\"\r\n            type=\"text\"\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            mt=\"1.5\"\r\n            py=\"5\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Describe about your event in brief\"\r\n          />\r\n          <Text color=\"white\" fontWeight=\"medium\" fontSize=\"sm\" mt=\"4\">\r\n            Content\r\n          </Text>\r\n          <Textarea\r\n            w=\"full\"\r\n            value={content}\r\n            onChange={(e) => setContent(e.target.value)}\r\n            type=\"text\"\r\n            mt=\"1.5\"\r\n            py=\"3\"\r\n            rounded=\"lg\"\r\n            color=\"white\"\r\n            _hover={{ borderColor: \"whiteAlpha.900\" }}\r\n            _focus={{ borderColor: \"brand.primary\" }}\r\n            borderColor=\"whiteAlpha.400\"\r\n            _placeholder={{ color: \"whiteAlpha.400\" }}\r\n            placeholder=\"Write about your event\"\r\n          />\r\n\r\n          <Button\r\n            color=\"black\"\r\n            float=\"right\"\r\n            mt=\"6\"\r\n            type=\"submit\"\r\n            rounded=\"lg\"\r\n            _focus={{}}\r\n            _active={{}}\r\n            leftIcon={\r\n              loading ? <Spinner size=\"sm\" /> : <CheckCircle size=\"20px\" />\r\n            }\r\n          >\r\n            Update Event\r\n          </Button>\r\n        </form>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default UpdateEvent;\r\n","export function formatDate(date) {\r\n  const Months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  if (date) {\r\n    return `${Months[date.month - 1]} ${date.date}, ${date.time} GMT+5:30`;\r\n  }\r\n}\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Divider,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  useClipboard,\r\n  Tooltip,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalHeader,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n  Button,\r\n  useToast,\r\n  Checkbox,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { Check, Settings } from \"react-feather\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { Calendar, Clipboard, Plus, ArrowLeft } from \"react-feather\";\r\nimport AudienceList from \"../../components/Misc/AudienceList.component\";\r\nimport HostCard from \"../../components/Cards/HostCard.component\";\r\nimport { useHistory } from \"react-router\";\r\nimport UpdateEvent from \"../Update/UpdateEvent.page\";\r\nimport { formatDate } from \"../../Helpers/dateFormatter\";\r\n\r\nfunction ManageEvent(props) {\r\n  const id = props.match.params.id;\r\n  const [event, setEvent] = useState(undefined);\r\n  const [audience, setAudience] = useState(undefined);\r\n  const [createdBy, setCreatedBy] = useState([]);\r\n  const { hasCopied, onCopy } = useClipboard(\r\n    `${window.location.origin}/event/${id}`\r\n  );\r\n  const history = useHistory();\r\n  const toast = useToast();\r\n  const [isListed, setIsListed] = useState(false);\r\n  const [registrationOpen, setRegistrationOpen] = useState(false);\r\n  const [newChanges, setNewChanges] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  useEffect(() => {\r\n    getEvent();\r\n    getAudience();\r\n  }, []);\r\n\r\n  const getAudience = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"audience\")\r\n        .select(\"name, email, events\")\r\n        .contains(\"events\", [id]);\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setAudience(data);\r\n\r\n      console.log(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getEvent = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\r\n          \"id, name, image, link, description, content, date, community, audience, createdBy, admin, isListed, isOpen,platform\"\r\n        )\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setEvent(data);\r\n      setIsListed(data.isListed);\r\n      setRegistrationOpen(data.isOpen);\r\n      setCreatedBy(data.createdBy);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateEvent = async () => {\r\n    try {\r\n      setLoading(true);\r\n      let updates = {};\r\n      updates = {\r\n        id,\r\n        isOpen: registrationOpen,\r\n        isListed,\r\n      };\r\n      console.log(isListed, registrationOpen);\r\n      console.log(updates);\r\n\r\n      const { error } = await supabase.from(\"events\").upsert(updates, {\r\n        returning: \"minimal\",\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n      setNewChanges(false);\r\n    }\r\n  };\r\n\r\n  function validateEmail(email) {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n  }\r\n\r\n  const AddHost = () => {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const AddHostModal = () => {\r\n      return (\r\n        <Modal isOpen={isOpen} onClose={onClose}>\r\n          <ModalOverlay />\r\n          <ModalContent pb=\"3\" bg=\"#1D2023\" color=\"white\">\r\n            <ModalHeader>Add host</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <Input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                _placeholder={{ color: \"whiteAlpha.500\" }}\r\n                placeholder=\"Email\"\r\n                _focus={{ borderColor: \"brand.primary\" }}\r\n              />\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button\r\n                bg=\"brand.primary\"\r\n                _hover={{}}\r\n                _active={{}}\r\n                onClick={async () => {\r\n                  if (validateEmail(document.getElementById(\"email\").value)) {\r\n                    createdBy.push(document.getElementById(\"email\").value);\r\n\r\n                    try {\r\n                      const { error } = await supabase\r\n                        .from(\"events\")\r\n                        .upsert({ id, createdBy }, { returning: \"minimal\" });\r\n\r\n                      if (error) {\r\n                        throw error;\r\n                      }\r\n                    } catch (error) {\r\n                      console.log(error);\r\n                    }\r\n                    onClose();\r\n                    window.location.reload();\r\n                  } else {\r\n                    toast({\r\n                      title: \"Error\",\r\n                      position: \"bottom\",\r\n                      description: \"Enter a valid email address\",\r\n                      status: \"error\",\r\n                      duration: 5000,\r\n                      isClosable: true,\r\n                    });\r\n                  }\r\n                }}\r\n              >\r\n                Add\r\n              </Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <Flex\r\n        border=\"2px\"\r\n        cursor=\"pointer\"\r\n        mr={{ md: \"4\" }}\r\n        mb=\"4\"\r\n        borderColor=\"transparent\"\r\n        transitionDuration=\"200ms\"\r\n        _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n        overflow=\"clip\"\r\n        bg=\"whiteAlpha.50\"\r\n        p=\"2\"\r\n        justify=\"center\"\r\n        borderStyle=\"dashed\"\r\n        alignItems=\"center\"\r\n        rounded=\"xl\"\r\n        w=\"full\"\r\n        onClick={onOpen}\r\n        minH=\"14\"\r\n        experimental_spaceX=\"4\"\r\n        maxW={{ base: \"full\", md: \"280px\" }}\r\n      >\r\n        <AddHostModal />\r\n        <Plus />\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  const UpdateEventModal = () => {\r\n    return (\r\n      <Modal size=\"3xl\" isOpen={isOpen} onClose={onClose}>\r\n        <ModalOverlay />\r\n        <ModalContent bg=\"#1D2023\">\r\n          <ModalHeader color=\"white\">\r\n            Settings <ModalCloseButton color=\"white\" />\r\n          </ModalHeader>\r\n\r\n          <ModalBody px=\"8\" pb=\"8\">\r\n            <UpdateEvent\r\n              eventId={id}\r\n              eventName={event?.name}\r\n              eventContent={event?.content}\r\n              eventDate={event?.date}\r\n              eventDescription={event?.description}\r\n              eventPlatform={event?.platform}\r\n              eventImage={event?.image}\r\n              eventLink={event?.link}\r\n            />\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const CopyInput = () => {\r\n    return (\r\n      <InputGroup>\r\n        <Input\r\n          cursor=\"pointer\"\r\n          transitionDuration=\"200ms\"\r\n          onClick={() => {\r\n            window.open(`${window.location.origin}/event/${id}`, \"_blank\");\r\n          }}\r\n          _hover={{ color: \"brand.primary\" }}\r\n          value={`${window.location.origin}/event/${id}`}\r\n          isReadOnly\r\n          rounded=\"lg\"\r\n          border=\"none\"\r\n          bg=\"whiteAlpha.200\"\r\n        />\r\n\r\n        <InputRightElement\r\n          onClick={() => onCopy()}\r\n          cursor=\"pointer\"\r\n          p=\"2\"\r\n          roundedRight=\"lg\"\r\n          transitionDuration=\"200ms\"\r\n          _hover={{ color: \"brand.primary\" }}\r\n        >\r\n          <Tooltip label=\"Copy to clipboard\">\r\n            {hasCopied ? <Check /> : <Clipboard size=\"20px\" />}\r\n          </Tooltip>\r\n        </InputRightElement>\r\n      </InputGroup>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate>\r\n      <Box>\r\n        <Flex justify=\"space-between\" alignItems=\"end\">\r\n          <Box>\r\n            <Flex experimental_spaceX=\"3\" alignItems=\"center\">\r\n              <Box\r\n                cursor=\"pointer\"\r\n                p=\"2\"\r\n                w=\"10\"\r\n                h=\"10\"\r\n                onClick={() => {\r\n                  history.goBack();\r\n                }}\r\n                rounded=\"full\"\r\n                _hover={{ bg: \"whiteAlpha.200\" }}\r\n              >\r\n                <ArrowLeft />\r\n              </Box>\r\n              <Text fontSize={{ base: \"2xl\", md: \"3xl\" }} fontWeight=\"bold\">\r\n                {event?.name}\r\n              </Text>\r\n            </Flex>\r\n            <Flex\r\n              fontSize=\"xs\"\r\n              color=\"brand.primary\"\r\n              experimental_spaceX=\"1.5\"\r\n              alignItems=\"center\"\r\n              mt=\"1\"\r\n            >\r\n              <Calendar size=\"14px\" />\r\n              <Text>{formatDate(event?.date)}</Text>\r\n            </Flex>\r\n            {event?.description ? (\r\n              <Text\r\n                mt=\"1\"\r\n                fontSize={{ base: \"xs\", md: \"sm\" }}\r\n                fontWeight=\"thin\"\r\n              >\r\n                {event?.description}\r\n              </Text>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Flex direction=\"column\" alignItems=\"end\" experimental_spaceY=\"1\">\r\n            <Box\r\n              _hover={{ bg: \"whiteAlpha.200\" }}\r\n              rounded=\"full\"\r\n              p=\"2\"\r\n              cursor=\"pointer\"\r\n              onClick={onOpen}\r\n            >\r\n              <UpdateEventModal />\r\n              <Settings size=\"20px\" />\r\n            </Box>\r\n            <Box display={{ base: \"none\", md: \"block\" }}>\r\n              <Text fontSize=\"xs\" mb=\"1\" color=\"whiteAlpha.500\">\r\n                Sharable invite link\r\n              </Text>\r\n              <CopyInput />\r\n            </Box>\r\n          </Flex>\r\n        </Flex>\r\n      </Box>\r\n      <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n      <Box display={{ base: \"block\", md: \"none\" }}>\r\n        <Flex justify=\"space-between\" mt=\"4\" alignItems=\"center\">\r\n          <Text\r\n            casing=\"capitalize\"\r\n            fontSize=\"sm\"\r\n            fontWeight=\"semibold\"\r\n            letterSpacing=\"2px\"\r\n            color=\"white\"\r\n          >\r\n            INVITE LINK\r\n          </Text>\r\n        </Flex>\r\n        <Box mt=\"2\">\r\n          <CopyInput />\r\n        </Box>\r\n      </Box>\r\n      <Flex justify=\"space-between\" mt=\"8\" alignItems=\"center\">\r\n        <Text\r\n          casing=\"capitalize\"\r\n          fontSize=\"sm\"\r\n          fontWeight=\"semibold\"\r\n          letterSpacing=\"2px\"\r\n          color=\"white\"\r\n        >\r\n          GUESTS\r\n        </Text>\r\n      </Flex>\r\n      <AudienceList audience={audience} />\r\n      <Flex justify=\"space-between\" mt=\"8\" alignItems=\"center\">\r\n        <Text\r\n          casing=\"capitalize\"\r\n          fontSize=\"sm\"\r\n          fontWeight=\"semibold\"\r\n          letterSpacing=\"2px\"\r\n          color=\"white\"\r\n        >\r\n          HOST & MANAGERS\r\n        </Text>\r\n      </Flex>\r\n      <Flex mt=\"4\" wrap=\"wrap\">\r\n        {event?.createdBy.map((data, key) => (\r\n          <HostCard id={id} admin={event?.admin} email={data} key={key} />\r\n        ))}\r\n        {window.localStorage.getItem(\"email\") === event?.admin ? (\r\n          <AddHost />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Flex>\r\n      <Flex direction=\"column\" mt=\"4\">\r\n        <Checkbox\r\n          w=\"-webkit-fit-content\"\r\n          onChange={(e) => {\r\n            setIsListed(e.target.checked);\r\n            setNewChanges(true);\r\n          }}\r\n          isChecked={isListed}\r\n        >\r\n          Listed publicly\r\n        </Checkbox>\r\n        <Checkbox\r\n          w=\"-webkit-fit-content\"\r\n          onChange={(e) => {\r\n            setRegistrationOpen(e.target.checked);\r\n            setNewChanges(true);\r\n          }}\r\n          isChecked={registrationOpen}\r\n        >\r\n          Registrations open\r\n        </Checkbox>\r\n        <Box>\r\n          <Button\r\n            display={newChanges ? \"block\" : \"none\"}\r\n            float=\"right\"\r\n            size=\"sm\"\r\n            mt=\"2\"\r\n            minW=\"28\"\r\n            onClick={() => {\r\n              updateEvent();\r\n            }}\r\n            colorScheme=\"whiteAlpha\"\r\n          >\r\n            {loading ? <Spinner size=\"sm\" /> : <> Save changes</>}\r\n          </Button>\r\n        </Box>\r\n      </Flex>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default ManageEvent;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect, useState } from \"react\";\r\nimport { Box, Text, Divider } from \"@chakra-ui/react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { User } from \"../../Providers/User.provider\";\r\nimport StarterTemplate from \"../../components/Misc/StarterTemplace.component\";\r\nimport AudienceList from \"../../components/Misc/AudienceList.component\";\r\nimport CurrentLocation from \"../../components/Misc/CurrentLocation.component\";\r\n\r\nfunction Audience(props) {\r\n  const id = props.match.params.id;\r\n  const { user } = User();\r\n  const [audience, setAudience] = useState(undefined);\r\n  const [community, setCommunity] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      getCommunity();\r\n    }\r\n    getAudience();\r\n  }, []);\r\n\r\n  const getAudience = async () => {\r\n    try {\r\n      if (id) {\r\n        const { data, error } = await supabase\r\n          .from(\"audience\")\r\n          .select(\"name, email, events\")\r\n          .contains(\"communities\", [id])\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n        setAudience(data);\r\n      } else {\r\n        const { data, error } = await supabase\r\n          .from(\"audience\")\r\n          .select(\"name, email, events\")\r\n          .eq(\"createdBy\", localStorage.getItem(\"email\"))\r\n          .order(\"created_at\", { ascending: false });\r\n\r\n        if (error) {\r\n          throw error;\r\n        }\r\n\r\n        setAudience(data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getCommunity = async () => {\r\n    try {\r\n      console.log(localStorage.getItem(\"email\"));\r\n      const { data, error } = await supabase\r\n        .from(\"communities\")\r\n        .select(\"id, name, logo,description,audience,events\")\r\n        .contains(\"createdBy\", [localStorage.getItem(\"email\")])\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setCommunity(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StarterTemplate communityId={id}>\r\n      <Box>\r\n        {id ? (\r\n          <CurrentLocation\r\n            username={user?.username}\r\n            communityName={community?.name}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Text fontSize={{ base: \"xl\", md: \"2xl\" }} fontWeight=\"bold\">\r\n          Audience\r\n        </Text>\r\n        <Divider mt=\"3\" color=\"white\" opacity=\"0.2\" />\r\n        <AudienceList audience={audience} communityId={id} />\r\n      </Box>\r\n    </StarterTemplate>\r\n  );\r\n}\r\n\r\nexport default Audience;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Flex, Avatar, Box, Text } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\n\r\nfunction EventHostCard({ email }) {\r\n  const [user, setUser] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n    console.log(\"again\");\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", email)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      border=\"1px\"\r\n      cursor=\"pointer\"\r\n      mb=\"2\"\r\n      borderColor=\"transparent\"\r\n      transitionDuration=\"200ms\"\r\n      _hover={{ borderColor: \"whiteAlpha.200\", bg: \"whiteAlpha.100\" }}\r\n      overflow=\"clip\"\r\n      bg=\"alpha.white\"\r\n      p=\"2\"\r\n      alignItems=\"center\"\r\n      rounded=\"xl\"\r\n      w=\"full\"\r\n      experimental_spaceX=\"4\"\r\n      maxW={{ base: \"full\", md: \"280px\" }}\r\n    >\r\n      <Avatar size=\"sm\" src={user?.avatar_url} name={user?.username || email} />\r\n      <Box>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontWeight={user?.username ? \"semibold\" : \"normal\"}\r\n          fontSize=\"sm\"\r\n        >\r\n          {user?.username ? user?.username : email}\r\n        </Text>\r\n        <Text\r\n          align=\"left\"\r\n          color=\"white\"\r\n          whiteSpace=\"nowrap\"\r\n          fontSize=\"xx-small\"\r\n        >\r\n          Host\r\n        </Text>\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n\r\nexport default EventHostCard;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Navigation from \"../../components/Navigation/Navigation.component\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  AspectRatio,\r\n  Image,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  Divider,\r\n  Link,\r\n  Avatar,\r\n  useToast,\r\n  Spinner,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../../Helpers/supabase\";\r\nimport { formatDate } from \"../../Helpers/dateFormatter\";\r\nimport {\r\n  ArrowUpRight,\r\n  Calendar,\r\n  CheckCircle,\r\n  MapPin,\r\n  XCircle,\r\n} from \"react-feather\";\r\nimport Showdown from \"showdown\";\r\nimport \"./event.css\";\r\nimport EventHostCard from \"./EventHostCard.component\";\r\n\r\nfunction Event(props) {\r\n  const id = props.match.params.id;\r\n  const [event, setEvent] = useState(undefined);\r\n  const converter = new Showdown.Converter();\r\n  const [user, setUser] = useState(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    getEvent();\r\n    if (window.localStorage.getItem(\"email\")) {\r\n      getUser();\r\n    }\r\n  }, []);\r\n\r\n  const getUser = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"users\")\r\n        .select(\"username, avatar_url, email\")\r\n        .eq(\"email\", window.localStorage.getItem(\"email\"))\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setUser(data);\r\n      setName(data.username);\r\n      setEmail(data.email);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getEvent = async () => {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from(\"events\")\r\n        .select(\r\n          \"name, description, date, community, image, content, platform, link, isListed, isOpen, createdBy, admin, audience\"\r\n        )\r\n        .eq(\"id\", id)\r\n        .single();\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n\r\n      setEvent(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const registerUser = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await supabase\r\n        .from(\"audience\")\r\n        .select(\"events, communities\")\r\n        .eq(\"email\", email)\r\n        .single();\r\n\r\n      let events = [];\r\n      let communities = [];\r\n      if (data) {\r\n        data.events.push(id);\r\n        data.communities.push(event?.community);\r\n        events = data.events;\r\n        communities = data.communities;\r\n      } else {\r\n        events = [id];\r\n        communities = [event?.community];\r\n      }\r\n      const updates = {\r\n        email: email,\r\n        name: name,\r\n        events: [...new Set(events)],\r\n        communities: [...new Set(communities)],\r\n        createdBy: event?.admin,\r\n      };\r\n\r\n      await supabase.from(\"audience\").upsert(updates, { returning: \"minimal\" });\r\n\r\n      const AudienceEventData = await supabase\r\n        .from(\"audience\")\r\n        .select(\"name, email, events\")\r\n        .contains(\"events\", [id]);\r\n\r\n      await supabase\r\n        .from(\"events\")\r\n        .upsert(\r\n          { id, audience: AudienceEventData.data.length },\r\n          { returning: \"minimal\" }\r\n        );\r\n      if (event?.community) {\r\n        const AudienceCommunityData = await supabase\r\n          .from(\"audience\")\r\n          .select(\"name, email, events\")\r\n          .contains(\"communities\", [event?.community]);\r\n\r\n        await supabase.from(\"communities\").upsert(\r\n          {\r\n            id: event?.community,\r\n            audience: AudienceCommunityData.data.length,\r\n          },\r\n          { returning: \"minimal\" }\r\n        );\r\n      }\r\n      toast({\r\n        title: \"Success\",\r\n        position: \"bottom\",\r\n        description: \"You are successfully registered!\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n      });\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const ProfileDisplay = () => {\r\n    return (\r\n      <Flex\r\n        cursor=\"default\"\r\n        borderColor=\"transparent\"\r\n        transitionDuration=\"200ms\"\r\n        overflow=\"clip\"\r\n        mb=\"4\"\r\n        alignItems=\"center\"\r\n        rounded=\"xl\"\r\n        w=\"full\"\r\n        experimental_spaceX=\"4\"\r\n      >\r\n        <Avatar size=\"md\" src={user?.avatar_url} name={user?.username} />\r\n        <Box>\r\n          <Text\r\n            align=\"left\"\r\n            color=\"white\"\r\n            whiteSpace=\"nowrap\"\r\n            fontWeight=\"semibold\"\r\n            fontSize=\"lg\"\r\n          >\r\n            {user?.username}\r\n          </Text>\r\n          <Text align=\"left\" color=\"white\" whiteSpace=\"nowrap\" fontSize=\"xs\">\r\n            {user?.email}\r\n          </Text>\r\n        </Box>\r\n      </Flex>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {event ? (\r\n        <>\r\n          {event?.isListed ? (\r\n            <Flex bg=\"brand.secondary\" justify=\"center\" w=\"full\">\r\n              <Box\r\n                minH=\"100vh\"\r\n                py=\"6\"\r\n                px={{ base: \"6\", md: \"12\" }}\r\n                maxW=\"1100px\"\r\n                w=\"full\"\r\n                color=\"white\"\r\n              >\r\n                <Box px={{ lg: \"20\" }}>\r\n                  <Navigation communityId={event?.community} />\r\n                </Box>\r\n                <Box mx=\"auto\" mt=\"6\">\r\n                  <AspectRatio ratio={1920 / 1080}>\r\n                    <Image src={event?.image} rounded=\"xl\" />\r\n                  </AspectRatio>\r\n                  <Box>\r\n                    <Text fontWeight=\"bold\" fontSize=\"3xl\" mt=\"4\">\r\n                      {event?.name}\r\n                    </Text>\r\n                    <Flex\r\n                      fontSize=\"sm\"\r\n                      color=\"brand.primary\"\r\n                      experimental_spaceX=\"1.5\"\r\n                      alignItems=\"center\"\r\n                      mt=\"1\"\r\n                    >\r\n                      <Calendar size=\"18px\" />\r\n                      <Text>{formatDate(event?.date)}</Text>\r\n                    </Flex>\r\n                    <Flex direction={{ base: \"column\", md: \"row\" }}>\r\n                      <Box w=\"full\">\r\n                        <Box mt=\"10\">\r\n                          <form\r\n                            onSubmit={(e) => {\r\n                              e.preventDefault();\r\n                              if (event?.isOpen) {\r\n                                registerUser();\r\n                              } else {\r\n                                toast({\r\n                                  title: \"Error\",\r\n                                  position: \"bottom\",\r\n                                  description:\r\n                                    \"Event registrations are already closed\",\r\n                                  status: \"Error\",\r\n                                  duration: 5000,\r\n                                  isClosable: true,\r\n                                });\r\n                              }\r\n                            }}\r\n                          >\r\n                            <Text fontSize=\"xl\" mb=\"3\" fontWeight=\"medium\">\r\n                              Register for the event\r\n                            </Text>\r\n                            <Flex\r\n                              bg=\"whiteAlpha.100\"\r\n                              p=\"5\"\r\n                              rounded=\"xl\"\r\n                              direction=\"column\"\r\n                              alignItems=\"end\"\r\n                            >\r\n                              {window.localStorage.getItem(\"email\") ? (\r\n                                <ProfileDisplay />\r\n                              ) : (\r\n                                <>\r\n                                  <Box w=\"full\">\r\n                                    <Input\r\n                                      required\r\n                                      value={name}\r\n                                      onChange={(e) => setName(e.target.value)}\r\n                                      w=\"full\"\r\n                                      _focus={{\r\n                                        border: \"2px\",\r\n                                        borderColor: \"brand.primary\",\r\n                                      }}\r\n                                      bg=\"brand.secondary\"\r\n                                      border=\"2px\"\r\n                                      borderColor=\"transparent\"\r\n                                      rounded=\"lg\"\r\n                                      mb=\"2\"\r\n                                      py=\"5\"\r\n                                      placeholder=\"Your name\"\r\n                                      _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                                    />\r\n                                    <Input\r\n                                      w=\"full\"\r\n                                      type=\"email\"\r\n                                      value={email}\r\n                                      onChange={(e) => setEmail(e.target.value)}\r\n                                      id=\"email\"\r\n                                      required\r\n                                      _focus={{\r\n                                        border: \"2px\",\r\n                                        borderColor: \"brand.primary\",\r\n                                      }}\r\n                                      bg=\"brand.secondary\"\r\n                                      border=\"2px\"\r\n                                      py=\"5\"\r\n                                      borderColor=\"transparent\"\r\n                                      rounded=\"lg\"\r\n                                      placeholder=\"Your email\"\r\n                                      _placeholder={{ color: \"whiteAlpha.400\" }}\r\n                                    />\r\n                                  </Box>\r\n                                </>\r\n                              )}\r\n                              <Button\r\n                                mt=\"4\"\r\n                                px=\"6\"\r\n                                type={event?.isOpen ? \"submit\" : \"button\"}\r\n                                w=\"-webkit-fit-content\"\r\n                                cursor={\r\n                                  event?.isOpen ? \"pointer\" : \"not-allowed\"\r\n                                }\r\n                                _hover={{}}\r\n                                _active={{}}\r\n                                _focus={{}}\r\n                                leftIcon={\r\n                                  event?.isOpen ? (\r\n                                    loading ? (\r\n                                      <Spinner size=\"sm\" />\r\n                                    ) : (\r\n                                      <CheckCircle size=\"18px\" />\r\n                                    )\r\n                                  ) : (\r\n                                    <XCircle size=\"18px\" />\r\n                                  )\r\n                                }\r\n                                bg=\"brand.primary\"\r\n                                fontSize=\"sm\"\r\n                                rounded=\"lg\"\r\n                              >\r\n                                {event?.isOpen ? (\r\n                                  <>Register</>\r\n                                ) : (\r\n                                  <>Registrations are closed</>\r\n                                )}\r\n                              </Button>\r\n                            </Flex>\r\n                          </form>\r\n                        </Box>\r\n                        {event?.description || event?.content ? (\r\n                          <Box mt=\"8\">\r\n                            <Text fontSize=\"xl\" mb=\"4\" fontWeight=\"medium\">\r\n                              Event Details :\r\n                            </Text>\r\n                            {event?.description ? (\r\n                              <Text fontSize=\"lg\" fontWeight=\"semibold\">\r\n                                {event?.description}\r\n                              </Text>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                            {event?.content ? (\r\n                              <Text\r\n                                id=\"content\"\r\n                                fontSize=\"base\"\r\n                                mt=\"2\"\r\n                                fontWeight=\"thin\"\r\n                                dangerouslySetInnerHTML={{\r\n                                  __html: converter.makeHtml(event?.content),\r\n                                }}\r\n                              ></Text>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </Box>\r\n                        ) : (\r\n                          <></>\r\n                        )}\r\n                      </Box>\r\n                      <Box\r\n                        minW={{ md: \"240px\", lg: \"300px\" }}\r\n                        maxW={{ md: \"240px\", lg: \"350px\" }}\r\n                        ml={{ md: \"10\" }}\r\n                      >\r\n                        <Box>\r\n                          <Box mb=\"2\">\r\n                            <Text fontSize=\"xl\" fontWeight=\"medium\">\r\n                              Join Details :\r\n                            </Text>\r\n                            <Flex\r\n                              alignItems=\"center\"\r\n                              color=\"brand.primary\"\r\n                              cursor=\"pointer\"\r\n                              transitionDelay=\"200ms\"\r\n                              my=\"4\"\r\n                            >\r\n                              {event?.platform === \"Virtual\" ? (\r\n                                <>\r\n                                  <Link\r\n                                    isExternal\r\n                                    href={event?.link}\r\n                                    _focus={{}}\r\n                                    fontSize=\"lg\"\r\n                                    mr=\"1\"\r\n                                    isTruncated\r\n                                  >\r\n                                    {event?.link}\r\n                                  </Link>\r\n\r\n                                  <Box\r\n                                    minW=\"20px\"\r\n                                    onClick={() => {\r\n                                      window.open(event?.link, \"_blank\");\r\n                                    }}\r\n                                  >\r\n                                    <ArrowUpRight />\r\n                                  </Box>\r\n                                </>\r\n                              ) : (\r\n                                <Flex\r\n                                  alignItems=\"start\"\r\n                                  w=\"-webkit-fit-content\"\r\n                                >\r\n                                  <Box minW=\"20px\">\r\n                                    <MapPin size=\"18px\" />\r\n                                  </Box>\r\n                                  <Text\r\n                                    fontSize=\"lg\"\r\n                                    ml=\"2\"\r\n                                    mt=\"-1\"\r\n                                    wordBreak=\"break-all\"\r\n                                  >\r\n                                    {event?.link}\r\n                                  </Text>\r\n                                </Flex>\r\n                              )}\r\n                            </Flex>\r\n                          </Box>\r\n                          <Divider color=\"white\" opacity=\"0.2\" />\r\n                          <Box mt=\"6\">\r\n                            {event?.createdBy.map((data, key) => (\r\n                              <EventHostCard key={key} email={data} />\r\n                            ))}\r\n                          </Box>\r\n                        </Box>\r\n                      </Box>\r\n                    </Flex>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Flex>\r\n          ) : (\r\n            <Flex\r\n              minH=\"100vh\"\r\n              color=\"white\"\r\n              bg=\"brand.secondary\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              lol 404\r\n            </Flex>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Event;\r\n","import \"./App.css\";\nimport LandingPage from \"./pages/Landing.page\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SignIn from \"./pages/SignIn.page\";\nimport Auth from \"./pages/Auth.page\";\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"./Helpers/supabase\";\nimport Home from \"./pages/Dashboard/Home.page\";\nimport NewCommunity from \"./pages/New/NewCommunity.page\";\nimport ManageCommunity from \"./pages/Manage/ManageCommunity.page\";\nimport Events from \"./pages/Dashboard/Events.page\";\nimport NewEvent from \"./pages/New/NewEvent.page\";\nimport ManageEvent from \"./pages/Manage/ManageEvent.page\";\nimport Audience from \"./pages/Dashboard/Audience.page\";\nimport Event from \"./pages/Event\";\n\nfunction App() {\n  const [session, setSession] = useState(undefined);\n\n  const auth = async () => {\n    setSession(supabase.auth.session());\n    await supabase.auth.onAuthStateChange((_event, session) => {\n      setSession(session);\n    });\n  };\n\n  useEffect(() => {\n    auth();\n  }, []);\n\n  return (\n    <Switch>\n      <Route\n        exact\n        path=\"/\"\n        render={\n          !session\n            ? () => <LandingPage />\n            : localStorage.getItem(\"email\")\n            ? () => {\n                return <Home />;\n              }\n            : () => <Auth session={session} />\n        }\n      />\n      <Route exact path=\"/signin\" component={SignIn} />\n      <Route exact path=\"/event/:id\" component={Event} />\n      <Route exact path=\"/auth\" render={() => <Auth session={session} />} />\n      {localStorage.getItem(\"email\") ? (\n        <>\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/new/community\" component={NewCommunity} />\n          <Route\n            exact\n            path=\"/manage/community/:id\"\n            component={ManageCommunity}\n          />\n          <Route exact path=\"/manage/event/:id\" component={ManageEvent} />\n          <Route exact path=\"/events\" component={Events} />\n          <Route exact path=\"/new/event\" component={NewEvent} />\n          <Route\n            exact\n            path=\"/manage/community/:id/new/event\"\n            component={NewEvent}\n          />\n          <Route exact path=\"/manage/community/:id/events\" component={Events} />\n          <Route exact path=\"/audience\" component={Audience} />\n          <Route\n            exact\n            path=\"/manage/community/:id/audience\"\n            component={Audience}\n          />\n        </>\n      ) : (\n        <SignIn />\n      )}\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nconst theme = extendTheme({\r\n  colors: {\r\n    brand: {\r\n      primary: \"#FF4085\",\r\n      secondary: \"#131517\",\r\n    },\r\n    alpha: {\r\n      white: \"rgba(255, 255, 255, 0.1)\",\r\n    },\r\n    pink: {\r\n      600: \"#DE316F\",\r\n      800: \"#862F4E\",\r\n    },\r\n    black: {\r\n      400: \"#212325\",\r\n    },\r\n  },\r\n  fonts: {\r\n    brand: \"Red Hat Display\",\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { UserProvider } from \"./Providers/User.provider\";\nimport { Provider as SupabaseProvider } from \"react-supabase\";\nimport { supabase } from \"./Helpers/supabase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <SupabaseProvider value={supabase}>\n        <UserProvider>\n          <ChakraProvider theme={theme}>\n            <App />\n          </ChakraProvider>\n        </UserProvider>\n      </SupabaseProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}